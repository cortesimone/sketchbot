%!PS-Adobe-3.0 %%Creator: Adobe Illustrator(R) 8.0%%AI8_CreatorVersion: 16.0.0%%For: (Giorgio Olivero) ()%%Title: (motormount_08.ai)%%CreationDate: 10/14/13 2:47 PM%%Canvassize: 16383%%BoundingBox: 120 -404 1144 -20%%HiResBoundingBox: 120.8677 -403.5923 1143.1055 -20.4321%%DocumentProcessColors: Cyan Magenta Yellow Black%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0%%+ procset AGM_Gradient 1.0 0%%+ procset Adobe_ColorImage_AI6 1.3 0%%+ procset Adobe_Illustrator_AI5 1.3 0%%+ procset Adobe_pattern_AI5 1.0 0%%+ procset Adobe_cshow 2.0 8%%+ procset Adobe_shading_AI8 1.0 0%AI5_FileFormat 4.0%AI3_ColorUsage: Color%AI7_ImageSettings: 0%%CMYKProcessColor: 1 1 1 1 ([Registration])%%RGBProcessColor: 0.266856 0.700936 0.857181 (AutoCAD Color)%%+ 0.846361 0.132328 0.152561 (AutoCAD Color 1)%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) %%+ Options: 1 16 0 1 1 1 0 0 0 0 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 2 3 4%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 -1 -1 () %AI3_TemplateBox: 865.5 -652.5 865.5 -652.5%AI3_TileBox: 461.5649 -931.4697 1244.5645 -372.4697%AI3_DocumentPreview: None%AI5_ArtSize: 1729.1299 1303.9395%AI5_RulerUnits: 1%AI5_ArtFlags: 0 0 0 1 0 0 1 0 0%AI5_TargetResolution: 800%AI5_NumLayers: 2%AI8_OpenToView: -222.355 159.3687 0.6667 1317 754 18 1 0 -6 133 0 0%AI5_OpenViewLayers: 77%%PageOrigin:559 -1048%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9%AI9_Flatten: 1%AI12_CMSettings: 00.MC%AI7_Thumbnail: 128 48 8%%BeginData: 5606 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFF%CAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFF%CAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCACACAFFCAFFCAFFCAFF%CAFFCAFFCAFFCAFFFFCACAFFCAFFCAFFCAFFCAFFCAFFCACACAFD10FFCAFD%20FFCACAFD27FFCACACAFFCAFD0FFFCACACAFD22FFCAFFCAFFCAFFCAFD17%FFCAFD23FFCAFD05FFCAFFFFCAFD0EFFCAFFCAFFCAFD0DFFCAFD10FFCAFF%CAFFCAFFCAFFCACACAFD36FFFD06CAFD07FFCAFFCACAC3CAFD05FFCAC3CA%CAFFCAFFCAC3C3FFCAFD09FFCAFD14FFCAFFCAFFCAFFCAFD37FFCAFFCAFF%CAFD08FFCAFFFFCAFFCAFD05FFCAFFCAFFCAFFCAFFC3CAFD0CFFCAFD10FF%CAFD4DFFCAFD0FFFCACAFD0EFFCAFD5FFFCACAFD0DFFCAFFCAFD0FFFCAFF%FFFFCAFFCAFD05FFCAFD04FFCAFD26FFAFA8FFA9AFA8FFA9AFA8FFA9AFA8%FFA9AFA8FFA9FD13FFCAFD11FFCAFD0DFFCAFFCAFFFFFFFD05CAFFCACACA%FFFFCAFD0DFFCAFFFFFFCAFFCAFFFFFFCAFD0FFFAFFD1DFFCAFD05FFCAFF%FFCAFD0EFFCAFD0FFFCAFFCAFFCACAC3FD09FFC3CAC3CAFD0BFFCAFFFFFF%FD05CAFFCACACAFD0FFFAFFD11FFAFFD09FFCACACAFFCAFFCACACAFFCAFF%CAFD0AFFCACAFFFFFFCAFFCAFD09FFCAFFCAFFCAFFC3CACAFD07FFCACAC3%CAFD11FFCAFFCAFFFFFFCAFD0FFFAFFD1DFFCAFD05FFCAFFFFCAFD0EFFCA%FFFFFFCAFFCAFD09FFCAFFFFFFCAFFCAFD09FFCAFFCACAFD27FFA8FD11FF%A8FD13FFCAFD0EFFCACAFFCAC3BCCAFD08FFC3C3C3FFCAFFCACAFD09FFCA%CACAFD27FFAFCBFD10FFCAFD14FFCAFD0EFFCAFFFFFFC3CACAFD08FFFD04%CAFD0FFFCACAFD39FFA8FD13FFCAFD07FFCAFD07FFCAFFCAFFCAFFCACACA%FFCAFFCAFFCAFFCAFFCAFD36FFAFFD26FFCACAFD07FFCAFD05FFCAFD05FF%CAFD07FFCAFFFFFFCACAFD0EFFCACAFD26FFAFA9FD11FFA9FD13FFCAFD05%FFCAFFFFFFCAFD05FFCAFD05FFCAFD07FFCAFFFFCACAFFCAFFCAFD0AFFCA%FD27FFAFFD26FFCAFD08FFCAFD05FFCAFD13FFCAC3CAFFCAFD09FFCACAFD%27FFAFFD11FFAFFD13FFCAFD21FFCACABCFFCAFD0AFFCAFD27FFAFFD26FF%CAFD0EFFCAFD11FFCAFFCAFD0DFFCACAFD27FFAFFD11FFA8FD13FFCAFFCA%FD0BFFCAFFCAFD11FFCAFD36FFAFFD26FFCAFFFFCAFD09FFCAFFCAFD13FF%CAFFCAFFCAFFCAFFCAFFCAFFCAFFCACAFD39FFA9FD13FFCAFD0FFFCAFFFF%FFCAFFFFFFCAFFFFFFCAFFFFFFCAFFFFFFCAFFCAFFCAFFCAFFCAFFCAFFCA%FD28FFAFFD26FFCACAFD0DFFCACACAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFF%CAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCACAFD26FFAFA9FD11FFA9FD13FF%CAFD0EFFCACAFFCAFD11FFCAFD0BFFCAFD28FFAFFD26FFCAFD0EFFCAFD0D%FFCAFD07FFCAFD09FFCAFFCACAFD27FFAFFD11FFAFFD13FFCAFD0EFFCACA%FD05FFCAFFCAFD0FFFCACACAFFCAFD04FFCAFD27FFAFFD26FFCAFD0EFFCA%FD05FFCAFD11FFCAFD05FFCAFFFFFFCACAFD27FFAFFD11FFA8FD13FFCAFF%CACAFD09FFFD04CAFFFFFFCAFD06FFCAFD0AFFCAFD07FFCAFD2AFFAFFD26%FFCAFFFFCAFD0BFFCAFD0BFFCAFD15FFCACAFD39FFA9FD13FFCAFD0EFFCA%CAFFFFCACAFD07FFCAFD09FFCAFD07FFCAFD2AFFAFFFFFCFFD08FFCAFFFF%FFAFFFAFFD14FFCACAFD0DFFCAFD0BFFCAFD15FFCACAFD27FFA9FFA8AFA8%FFA9AFA8FFAFAFA8FFAFFFA9FD15FFCAFD07FFCAFD06FFCACAFFFFFFCAFD%05FFCAFD0BFFCAFD07FFCAFFFFCAFD4EFFCAFD06FFCAFFCAFD05FFCAFD05%FFCAFD11FFCAFD05FFCAFFFFFFCACAFD4DFFCAFD05FFCAFFFFFFCAFD04FF%CACAFD05FFCAFFCAFFCAFD0DFFCACACAFFCAFD04FFCAFD4EFFCAFD06FFCA%FFCAFD05FFCAFD0DFFCAFD07FFCAFD09FFCAFFCACAFD4DFFCAFD07FFCAFD%06FFCACAFFCAFD09FFCACAFD06FFCAFD0AFFCACAFD4FFFCAFD0EFFCAFD21%FFCACAFD15FFCAFD37FFCAFD0FFFFD0FCAFFCAFFCAFFCAFFCAFFCAFFCAFF%CAFFCAFFCAFD0EFFCAFFFFFFC3FFCACAFFCACAFD2DFFC3FFCACACAFFCAFF%FFCACAFFCAFD09FFCAFFCACACAFFCAFFCAFFCAFFCAFFCAFFCACAFD13FFCA%FD0BFFCACAFFFFCACACAFFCAFFCACACAFD2BFFCACACAFFCAFFCACACAFFCA%FFCAFD0BFFCACACAFFCAFD04FFCACAFFCAFFFFFFCAFD4AFFCAFD16FFCACA%FD0DFFCAFFCAFFFFFFCAFFCAFFCAFFFFCACAFD14FFCAFD26FFCACAFFFD0B%CAFFCAFFC3FD15FFCAFD0FFFFD05CAFFCACACAFFFD04CAC3FD3CFFCAFFCA%FD04FFCACAFFFFCACAFFFFFFCAFD14FFCAFD0EFFCAFFCAFFCAFFCAFFCAFF%CAFFCAFFCAFD14FFCAFFCAFFCAFFCAFFCACACAFD1EFFCACAFFCAFFFFFFCA%FFFFFFCACAFFFFFFCAFD08FFCAFFCACACAFD07FFCAFFFFCACAFD07FFCAFF%FFCACAFFCAFFCAFFFFCACAFFCAFFCAFFCAFD16FFCAFFCAFFFFFFCAFD1FFF%CAFFFFFFCAFFCAFFCAFFCAFFCAFFFFCACAFD07FFCAFFCACACAFD08FFCAFF%FFC3FFCAFD05FFCAFFC3FFCAFD07FFCAFD1AFFCAFFCAFFCAFFCAFFCACACA%FD17FFCAFD06FFCACAFFFFFFCAFFFFFFCAFFFFFFCAFFCAFD09FFCAFFFFCA%CAFD07FFCAFFFFFFCAFD07FFCAFFFFFFCAFFCAFFCAFFCACACAFFCAFFCAFF%CAFD34FFCAFFCAFD27FFCAFFFFCAFD0EFFCAFD22FFCAFFCACACAFFCACACA%FFCACACAFFCACACAFFCACACAFFCACACAFFCACACAFFFD07CAFFCACACAFFCA%CACAFFCACACAFFCACACAFFCACACAFFCACACAFFCACACAFFCACACAFFCACACA%FFCACACAFFC3CACAFFCACACAFFCACACAFFFD05CAFD20FFFF%%EndData%%EndComments%%BeginProlog%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient_Sep 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient_Sep 5 dict dup begin put
/AGM_Gradient_Sep_private 100 dict def
/initialize{
	AGM_Gradient_Sep begin
	AGM_Gradient_Sep_private begin
	_compositeJob{
		initializeSinglePassSeps
	}{
		initializeMultiPassSeps
	}ifelse
	initializeSeps
	AGM_Gradient_private begin
		/_fillSD newSpotDict def
		/_rampSD newSpotDict def
		/_nCustomColorSD nd
 end
	AGM_Gradient_Sep_private 
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient_Sep
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop	
 end
}def
/terminate{
	currentdict AGM_Gradient_Sep eq{
	 end
	}if
}def
AGM_Gradient_Sep_private begin
/initializeSeps{
	/currentoverprint { _of } def
	_noImage not _level2PS not and{
		/linealFill{
			currentoverprint{
				0 0 1 1 rectfill
			}{
				mySave
				8 setImageParms
				_color{
					_nCustomColorSD begin
						cyan magenta yellow black
	
						_spotColor{
							spot1/tintImage spot1/tintValue get 1 exch sub makeByte8 put
							spot2/tintImage spot2/tintValue get 1 exch sub makeByte8 put
						}if
				 end
	
					4{
						makeByte8 4 1 roll
					}repeat
					true 4 _nCustomColorSD ncolorimage
				}{
					_nCustomColorSD/black get 1 exch sub makeByte8 
					_nCustomColorSD bwImage
				}ifelse
				myRestore
			}ifelse
		}def
	}if
	/_whiteBytes 1 makeByte8 pt
	 /knockOut{
		_noImage _level2PS or currentoverprint or{
			gsave
			false setoverprint
			1 setgray 
			0 0 1 1 rectfill
			grestore
		}{
			8 setImageParms _whiteBytes /_image load 5 execImage
		}ifelse
	}def
	/newSpotDict{
		11 dict dup begin
			/nSpots 2 def
			/spot1 7 dict def
			/spot2 7 dict def
	 end
	}def
	/initSpotData
	{
	 begin
			/name nd
			/tintImage nd
			/tintValue nd
			/spot_C nd
			/spot_M nd
			/spot_Y nd
			/spot_K nd
	 end
	}def
	/initSpotDict{
	 begin
			/cyanInk nd
			/magentaInk nd
			/yellowInk nd
			/blackInk nd
			/cyan nd
			/magenta nd
			/yellow nd
			/black nd
			spot1 initSpotData
			spot2 initSpotData
	 end
	}def
	/copySpotDict{
		/_dst xp
	 begin
			cyanInk magentaInk yellowInk blackInk
			cyan magenta yellow black
			spot1 spot2
	 end
		_dst begin
			/spot1 spot1 maxlength dict def
			/spot2 spot2 maxlength dict def
			spot2 copy pop
			spot1 copy pop
			/black xd
			/yellow xd
			/magenta xd
			/cyan xd
			/blackInk xd
			/yellowInk xd
			/magentaInk xd
			/cyanInk xd
	 end
	}def
	/setCustomColor
	{
		1 index /Black eq{
			6 1 roll 5 npop
			1 exch sub
			setgray
		}{
			6 1 roll _ccAry1 astore exch
			dup null eq{
				pop 0
			}if
			setcustomcolor
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		
		_colorStyle 0 eq{
			0 0 0
			4 -1 roll
			1 exch sub
			_spotColor{
				/_colorStyle 3 pt
				/Black
				1 index
				1 exch sub
			}if
		}if
		_colorStyle 2 eq{
			3 npop
		}if
		_rampSD _fillSD copySpotDict
		
		_colorStyle 4 eq{ 
			pop
			9 2 roll 3 npop 6 -2 roll
		} if
		
		_colorStyle 3 eq _colorStyle 4 eq or{ 	
				
			_fillSD begin
				/_spot1 spot1 pt
				/_spot2 spot2 pt
		 end
			
			exch dup _spot1/name get eq{
				_spot1 _spot2
			}{
				_spot2 _spot1
			}ifelse
		 begin
			 begin
					/name xd
					1 exch sub /tintValue xd
					4{
						tintValue mul 4 1 roll
					}repeat
					_spotColor not{
						/tintValue null def
					}if
			 end
				/tintValue 0 def
		 end
		}if
		_fillSD nsetcustomcolor
	}def
	/renderCMYK{
		spot1/name get null eq
		spot2/name get null eq and
		dup not{
			pop
			spot1 spotConverted
		}if
		dup not{
			pop
			spot2 spotConverted
		}if
	}def
	/currentInk{
		true
		_inRipSep{
			currentcolorspace 0 get
			dup /DeviceGray eq
			1 index /DeviceCMYK eq or{
				pop
				currentcmykcolor add add add 0 eq{
					pop false
				}if
			}{
				/Separation eq{
					currentcolor 0 eq{
						pop false
					}if
				}if
			}ifelse
		}{
			currentgray 1 eq{
				pop false
			}if
		}ifelse
	}def
	/currentInkN{
	
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		{
			currentInk
		}{
			gsave
			_spot1 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			_spot2 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			grestore
			
			or
		} ifelse
	}def
	/fill_ /fill load def
	/fillOvp{
		currentoverprint{
			_inRipSep{
				currentcolorspace 0 get
				dup /DeviceGray eq
				1 index /DeviceCMYK eq or{
					pop
					currentcmykcolor add add add 0 eq{
						newpath
					}if
				}{
					/Separation eq{
						currentcolor 0 eq{
							newpath
						}if
					}if
				}ifelse
			}{
				currentgray 1 eq{
					newpath
				}if
			}ifelse
		}if
		fill_
	}def
	/fill{
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		
		{
			fillOvp
		}{
			_spot1 begin
				gsave
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
				}{
					1 setgray
				}ifelse
				fillOvp 
				grestore
		 end
			_spot2 begin
				name null ne{
					gsave
					true setoverprint
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					fillOvp
					grestore
				}if
		 end
			newpath
		}ifelse
	}def
	/expandSpot{
		_spotColor{
			/_len xp
			_rampSD begin
				spot1 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
				spot2 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
		 end
		}{
			pop
		}ifelse
	}def
	/rampImage{
		currentoverprint{
			rectImage
		}{
			_enabledSmoothShade{
				fillRamp
			}{
				_color{
					_rampSD begin
						/cyanInk _cyanData 0 ne def
						/magentaInk _magentaData 0 ne def
						/yellowInk _yellowData 0 ne def
						/blackInk _blackData 0 ne def
				 end
					
					_nSamples setImageParms
					_nSamples expandSpot
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 _rampSD ncolorimage
				}{
					_rampSD begin
						/cyanInk false def
						/magentaInk false def
						/yellowInk false def
						/blackInk true def
				 end
					_nSamples setImageParms 
					_blackData _rampSD bwImage
				}ifelse
			}ifelse
		}ifelse
	}def
	/nsetcustomcolor where{
		pop
	}{
		/nsetcustomcolor
		{
			/_nCustomColorSD xp
			_nCustomColorSD begin
				4 copy
				/black xd
				/yellow xd
				/magenta xd
				/cyan xd
				4 copy
				0 ne /blackInk xd
				0 ne /yellowInk xd
				0 ne /magentaInk xd
				0 ne /cyanInk xd
		 end
			setcmykcolor
		}def
	}ifelse
	/nsetcustomcolorend where{
		pop
	}{
		/nsetcustomcolorend
		{
			/_nCustomColorSD null pt
		}def
	}ifelse
}def
/initializeSinglePassSeps{
	/_decodeNorm	[0 1] pt
	/_decodeInvert 	[1 0] pt
	/spotConverted
	{
	 begin
			name null eq{
				false
			}{
				tintValue null eq tintImage null eq and{
					true
				}{
					_inDistiller{
						false
					}{
						false
						currentpagedevice/SeparationColorNames get{name eq or}forall
						not
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/dictImage
	{
		20 dict dup begin
			/Dict xd
			/Decode xd
			/DataSource xd
			/ImageMatrix xd
			/BitsPerComponent xd
			/Height xd
			/Width xd
			/ImageType 1 def
			Dict
	 end
		/_image load 1 execImage
	}def
	/bwImage{
	 begin
			gsave
			currentoverprint{
				blackInk{
					[/Separation /Black /DeviceGray{}] setcolorspace
					_decodeInvert dictImage
				}{
					5 npop
				}ifelse
			}{
				/DeviceGray setcolorspace
				_decodeNorm dictImage
			}ifelse
			grestore
	 end
	}def
	/ncolorimage where{
		pop
	}{
		/ncolorimage{
		 begin
				renderCMYK{
					cyanInk 
					magentaInk and
					yellowInk and
					blackInk and
					not
					currentoverprint 
					and{	
						pop pop
						gsave
						cyanInk{
							8 copy
							[/Separation /Cyan /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}if
						magentaInk{
							8 copy
							[/Separation /Magenta /DeviceGray{}] setcolorspace
							4 -1 roll
							3 npop
							_decodeNorm dictImage
						}if
						yellowInk{
							8 copy
							[/Separation /Yellow /DeviceGray{}] setcolorspace
							4 -2 roll
							3 npop
							_decodeNorm dictImage
						}if
						blackInk{
							4 -3 roll
							[/Separation /Black /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}{
							8 npop
						}ifelse
						grestore
					}{
						/_colorimage load 10 execImage
					}ifelse
				}{
					6 npop
					gsave
					spot1 begin
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							4 copy
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							1 setgray fill
						}ifelse
				 end
					spot2 begin
						true setoverprint
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							4 npop
							1 setgray fill
						}ifelse
				 end
					grestore
				}ifelse
		 end
		}def
	}ifelse
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_renderCMYK not{
			_rampSD begin
				[/DeviceN 
					[
					spot1 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					spot2 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					]
					_inDistiller {
						/DeviceCMYK [
							spot1 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 1
								}{
									0 0 0 0 0
								}ifelse
						 end
							spot2 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 2
								}{
									0 0 0 0 0
								}ifelse
						 end
							5 1 roll 6 -2 roll add
							dup 1 eq {
								pop
								8 /index cvx 1 /exch cvx /sub cvx
								9 1 /roll cvx
							}{
								2 eq {
									8 /index cvx 1 /exch cvx /sub cvx
									10 1 /roll cvx
								}if
							}ifelse
							4 1 /roll cvx 5 -2 /roll cvx
							8 /index cvx /mul cvx /exch cvx 9 /index cvx /mul cvx /add cvx 7 1 /roll cvx
							3 1 /roll cvx 4 -2 /roll cvx
							7 /index cvx /mul cvx /exch cvx 8 /index cvx /mul cvx /add cvx 6 1 /roll cvx
							2 1 /roll cvx 3 -2 /roll cvx
							6 /index cvx /mul cvx /exch cvx 7 /index cvx /mul cvx /add cvx 5 1 /roll cvx
							5 /index cvx /mul cvx /exch cvx 6 /index cvx /mul cvx /add cvx 4 1 /roll cvx
							6 -2 /roll cvx /pop cvx /pop cvx
						] cvx bind
					}{
						/DeviceCMYK {}
					}ifelse
				] setcolorspace
		 end
			/_nColorSpace currentcolorspace pt
		}if
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C0_Space _nColorSpace pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C1_Space _nColorSpace pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/initializeMultiPassSeps{
	/invertXfer{
		[
		{
			1 exch sub
		}/exec load systemdict /currenttransfer get exec /exec load
		] cvx systemdict /settransfer get exec
	}def
	/ccThrough{
		gsave
		1 setCustomColor
		currentcmykcolor
		grestore
		add add add 0 ne
	}def
	/spotConverted
	{
	 begin
			_isCMYKSep not{
				false
			}{
				name null eq{
					false
				}{
					tintValue null eq tintImage null eq and{
						true
					}{
						spot_C spot_M spot_Y spot_K name ccThrough
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/spotChannel
	{
		_isCMYKSep{
			pop false
		}{
			/_spotDict xp
				_spotDict/name get null eq{
					false
				}{
					_spotDict/spot_C get
					_spotDict/spot_M get
					_spotDict/spot_Y get
					_spotDict/spot_K get
					_spotDict/name get
					ccThrough 
				}ifelse
		}ifelse
	}def
	/getChannelData
	{
		_isCMYKSep dup{
			pop renderCMYK
		}if
		{
			_blackPlate{
				4 1 roll 3 npop blackInk
			}{
				_yellowPlate{
					4 2 roll 3 npop yellowInk
				}{
					_magentaPlate{
						4 3 roll 3 npop magentaInk
					}{
						3 npop cyanInk
					}ifelse
				}ifelse
			}ifelse
			{
				true /nonZeroData
			}{
				true /zeroData
			}ifelse
		}{
			4 npop
			spot1/name get null ne 
			spot1 spotChannel and{
				spot1/tintImage get dup null ne{
					false /nonZeroData
				}{
					pop false /noData
				}ifelse
			}{
				spot2/name get null ne 
				spot2 spotChannel and{
					spot2/tintImage get dup null ne{
						false /nonZeroData
					}{
						pop false /noData
					}ifelse
				}{
					false /noData
				}ifelse
			}ifelse
		}ifelse
	}def
	/renderChannelData
	{
		/_tmp xp
		_tmp /nonZeroData ne currentoverprint and{
			pop
			_tmp /zeroData eq{pop}if
			4 npop
		}{
			_tmp /nonZeroData eq{
				{
					invertXfer
				}if
					systemdict/image
				get 5 execImage
			}{
				pop
				_tmp /zeroData eq{pop}if
				4 npop
				knockOut
			}ifelse
		}ifelse
	}def
	/bwImage{
	 begin
			gsave
			dup dup dup
			getChannelData
			exch pop false exch
			renderChannelData
			grestore
	 end
	}def
	/ncolorimage{
	 begin
			pop pop
			gsave
			spot2/name get null ne spot2 spotChannel and{
				true setoverprint
			}if
			getChannelData 
			renderChannelData
			grestore
	 end
	}def
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C0_Space /DeviceGray pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C1_Space /DeviceGray pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient 20 dict dup begin put
/AGM_Gradient_private 201 dict def
/initialize
{
	AGM_Gradient begin
	AGM_Gradient_private begin
	initializeVars
	
	/bd systemdict/mark get def
	/ed
		_level2PS 
		{
			(>>)
		}{
			(counttomark 2 idiv dup dict begin {def} repeat pop currentdict end)
		} ifelse
	cvx def
	
	_level2PS{
		initializeLev2
	}{
		initializeLev1
	}ifelse
	
	queryDevice
	
	initializeRectFill
	initializeShading
	initializeOps
	_producingSeps{
		AGM_Gradient_Sep/initialize get exec
	}{
		initializeComposite
	}ifelse
	_illustrator{
		/f{}def
		/F{}def
		/s{}def
		/S{}def
		/b{}def
		/B{}def
	}if
	/image where{
		/image get /_image xd
	}if
	/colorimage where{
		/colorimage get /_colorimage xd
	}if
	AGM_Gradient_private
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop
 end
}def
/initializeAI
{
	pop pop 
	AGM_Gradient/AGM_Gradient_private get /_illustrator true put
	AGM_Gradient/initialize get exec
		AGM_Gradient begin
}def
/unload{
	systemdict/languagelevel known{
		systemdict/languagelevel get 2 ge{
			userdict/AGM_Gradient_Sep 2 copy known{
				undef
			}{
				pop pop
			}ifelse
			userdict/AGM_Gradient 2 copy known{
				undef
			}{
				pop pop
			}ifelse
		}if
	}if
}def
/terminate{
	currentdict AGM_Gradient eq{
	 end
	}if
}def
 
AGM_Gradient_private begin
/initializeVars{
	/_d255 256 array def
	0 1 255{
		_d255 exch dup 255 div put
	}bind for
	/_d255- 256 array def
	0 1 255{
		_d255- exch 1 _d255 2 index get sub put
	}bind for
	/_sSave nd
	/_dUserSpace matrix defaultmatrix def
	/_bUMatrix matrix def
	/_imageMatrix matrix def
	/_saveMatrix matrix def
	/_xm matrix def
	/_ccAry1 5 array def
	/_bbox 4 array pt
	/_level2PS 
		systemdict/languagelevel known dup{
			pop systemdict/languagelevel get 2 ge
		}if
	def
	/_level3PS
		_level2PS systemdict/shfill known and
	def
	currentdict /_illustrator known not{
		/_illustrator false def
	}if
	
}def
/initializeOps
{
	AGM_Gradient begin
	currentdict/Bc known not{
		/Bc{
		
			_renderFlag 2 eq _enabledSmoothShade or{
				6 npop
			}{
				pushBSpace
				_rampIndex 0 eq{
					pop pop
					setCStop
				}if
				linealFill
				popBSpace
			}ifelse
		
		}def
	}if
	
	currentdict/Bg known not{
		/Bg{
			10 npop
			/_gradName xp
			/_renderFlag xp
			/_enabledSmoothShade false pt
		
			_renderFlag 2 ne{
		
				_illustrator{
					_of setoverprint
				}if
		
				/_enabledSmoothShade 
					_level3PS{
						_usingSmoothShade
						_producingSeps not
						currentoverprint not or and
						_noImage not and
					}{
						false
					}ifelse
				pt
				
				_illustrator _eo and _renderFlag 3 eq or{
					eoclip
				}{
					clip
				}ifelse
		
				_gradNames _gradName 2 copy known{
					get
					mark exch aload pop
					/_gradType xp
					1 sub dup /_rampIndex xp
					/_maxRampIndex xp
					mark exch aload pop
					0 0
				}if
				pop pop
				getRampData
			}{
				mark mark
			}ifelse
		}def
	}if
	
	currentdict/Bm known not{
		/Bm{
			_renderFlag 2 ne{
				_gradType 0 eq{
					linealRamp
				}{
					radialGrad
				}ifelse
			}{
				6 npop
			}ifelse
		}def
	}if
	
	currentdict/Bh known not{
		/Bh{
			2 npop
			/_yHi xp
			/_xHi xp
			/_radHilite _xHi 0 ne _yHi 0 ne or pt
		}def
	}if
	
	currentdict/Bn known not{
		/Bn{
			AGM_Gradient_private begin
				dict /_gradNames xp
		 end
		}def
	}if
	
	currentdict/Bd known not{
		/Bd{
			AGM_Gradient begin
			AGM_Gradient_private begin
				/_nColorsBd xp
				/_gradType xp
				/_gradName xp
		}def
	}if
	
	currentdict/BD known not{
		/BD{
				currentdict/_gradNames known not{
					/_gradNames 20 dict def
				}if
				] _nColorsBd _gradType
				]  _gradName exch /_gradNames xput
		 end
		 end
		}def
	}if
	
	currentdict/Bb known not{
		/Bb{
		
			AGM_Gradient/AGM_Gradient_private get /_illustrator get not{
				AGM_Gradient begin
			}if
			AGM_Gradient_private begin
			_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get begin
			}if
			mySave
		}def
	}if
	
	currentdict/BB known not{
		/BB{
		
			/_tmp xp
			cleartomark cleartomark
		
			_tmp dup
			_renderFlag
		
			myRestore
		
			_producingSeps{
			 end
			}if
		
			_illustrator dup
		 end
			not {
			 end
			}if
		
			{
				2 ne exch 0 gt and{
					2 eq{
						s
					}{
						S
					}ifelse
				}{
					pop newpath
				}ifelse
			}{
				pop newpath
			}ifelse
		
		
		}def
	}if
	
	currentdict/Xm known not{
		/Xm{
			_xm astore pop
		}def
	}if
	
 end
}def
/queryDevice{
	/_inDistiller
		systemdict /currentdistillerparams known
	def
	/_inRipSep
		_level2PS{
			currentpagedevice/Separations 2 copy known{
				get
			}{
				pop pop false
			}ifelse
		}{
			false
		}ifelse
		_inDistiller or
	def
	/_noImage /lv1Fix where{
		pop lv1Fix
	}{
		false
	}ifelse
	def
	/_useShells where{
		/_useShells get /_usingShells xp
	}{
		/_usingShells false def
	}ifelse
	
	/_useSmoothShade where{
		pop
	}{
		/_useSmoothShade false def 
	}ifelse
	/_forceToCMYK where{
		pop
	}{
		/_forceToCMYK false def 
	}ifelse
	/_cyanPlate 1 0 0 0 testCMYKColorThrough def
	/_magentaPlate 0 1 0 0 testCMYKColorThrough def
	/_yellowPlate 0 0 1 0 testCMYKColorThrough def
	/_blackPlate 0 0 0 1 testCMYKColorThrough def
	/_compositeJob
		_cyanPlate _magentaPlate and _yellowPlate and _blackPlate and
	def
	/_isCMYKSep
		_cyanPlate _magentaPlate or _yellowPlate or _blackPlate or
	def
	/_compositeSpotDevice where{
		pop
	}{
		/_compositeSpotDevice _compositeJob not _inRipSep or{
			1
		}{
			0
		}ifelse
		def
	}ifelse
	/_producingSeps _compositeSpotDevice 0 ne def
	/_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
	/_dpiThreshold where{
		pop
	}{
		/_dpiThreshold 600 def
	}ifelse
	/_screenFreqThreshold where{
		pop
	}{
		/_screenFreqThreshold 150 def
	}ifelse
	/_contoneDevice where{
		pop
	}{
		/_contoneDevice false def
	}ifelse
	/_subSampleOK 
		_deviceDPI _dpiThreshold le 
		currentScreenFreq _screenFreqThreshold le and 
		_contoneDevice not and 
	def
}def
/initializeRectFill{
	/rectfill where dup{
		exch pop not _producingSeps or
	}{
		not
	}ifelse
	{
		/rectfill{
			gsave
			newpath
			4 2 roll moveto
			1 index 0 rlineto
			0 1 index rlineto
			1 index neg 0 rlineto
			pop pop
			closepath
			fill
			grestore
		}def
	}if
}def
/initializeLev1{
	/currentScreenFreq{
		currentscreen pop pop
	}def
	/_byte 1 string def
	/colorimage where{
		pop
	}{
		/colorimage{
			pop pop
			/_blackTmp xp
			/_yellowTmp xp
			/_magentaTmp xp
			/_cyanTmp xp
			/_cnt 0 pt
			[
			_byte dup 0
			_cyanTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .3 /mul cvx
			_magentaTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .59 /mul cvx
			_yellowTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .11 /mul cvx
			_blackTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx
			/add cvx /add cvx /add cvx 1 /exch cvx /sub cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/dup cvx 1 /gt cvx{
				pop 1
			}/if cvx
			255 /mul cvx /cvi cvx
			256 /mod cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/put cvx
			/_cnt dup cvx 1 /add cvx /pt cvx
			] cvx
			bind
			/_image load 5 execImage
		}def
	}ifelse
}def
/initializeLev2{
	/level2ScreenFreq{
	 begin
		60
		HalftoneType 1 eq{
			pop Frequency
		}if
		HalftoneType 2 eq{
			pop GrayFrequency
		}if
		HalftoneType 5 eq{
			pop Default level2ScreenFreq
		}if
		 end
	}def
	/currentScreenFreq{
		currenthalftone level2ScreenFreq
	}def
}def
/initializeShading{
	_useSmoothShade _level3PS and{
		/_usingSmoothShade true pt
		initializeLev3_Ops
	}{
		/_usingSmoothShade false pt
	}ifelse
}def
/initializeLev3_Ops
{
	/initShFill{
		/_index _gradType 0 eq {0}{_maxRampIndex 1 sub} ifelse pt
		/_rampFuncsArray _maxRampIndex array pt
		/_boundsArray _maxRampIndex 1 sub array pt
		/_encodeArray _maxRampIndex 2 mul array pt
		/_beginCoord _rampPoint pt
		/_colorSpace null pt
		/_firstFill _rampIndex _maxRampIndex eq pt
		/_lastFill false pt
	}def
	/linealShFill{
		popBSpace
		_xm aload pop pushBSpace
		
		/_size _index 1 add pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray 0 _size getinterval pt
			/_boundsArray _boundsArray 0 _size 1 sub getinterval pt
			/_encodeArray _encodeArray 0 _size 2 mul getinterval pt
		}if
		
		bd
			/ShadingType 2
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_firstFill _lastFill]
			/Domain [0 1] 
			/Coords [_beginCoord 0 _endCoord 0]
		ed
		shfill
	}def
	
	/radialShFill{
		/_size _maxRampIndex _index sub pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray _index _size getinterval pt
			/_boundsArray _boundsArray _index _size 1 sub getinterval pt
			/_encodeArray _encodeArray _index 2 mul _size 2 mul getinterval pt
		}if
		
		/_rampLen _beginCoord _endCoord sub pt
		bd
			/ShadingType 3
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_lastFill _firstFill]
			/Domain [0 1] 
			/Coords [_xHi _rampLen mul _yHi _rampLen mul _endCoord 0 0 _beginCoord] 
		ed
		shfill
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
	}def
	
	%
	/sampFunc{
		/_tmp exch pt
		bd
			_tmp length 1 eq {
				_tmp 0 get
				/_tmp 2 string pt
				dup _tmp 0 3 -1 roll put
				_tmp 1 3 -1 roll put
			}if
			/FunctionType 0
			/Order 1
			/Size [_tmp length]
			/Domain [0 1]
			/BitsPerSample 8
			/DataSource _tmp
			/Range [0 1]
		ed
	}def
	
	/fillRamp{
	
	
		/_invert _midPoint 0.5 lt pt
		_rampIndex _maxRampIndex eq {
			initShFill
		}if
		
		getRampColorSpace
		
		_colorSpace null eq{
			/_colorSpace _rampColorSpace pt
		}{
			_colorSpace _rampColorSpace ne _rgbInCMYK or{
				/_index _index 1 
				_gradType 0 eq{
					sub pt
					linealShFill
				}{
					add pt
					radialShFill
				}ifelse
				initShFill
				/_colorSpace _rampColorSpace pt
			} if
		}ifelse
		/_endCoord _endPoint pt	
		/_rgbInCMYK false pt
		_producingSeps _forceToCMYK or _rgbRamp and {
			_spotColor{
				_renderCMYK
			}{
				_isCMYKSep
			}ifelse
		}{
			false
		}ifelse
		{
			_compositeJob{
				/_rgbInCMYK true pt
				_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
				dup length string copy /_kData exch pt
				dup length string copy /_yData exch pt
				dup length string copy /_mData exch pt
				dup length string copy /_cData exch pt
			}{
				_rampFuncsArray _index
					_cyanPlate{_cyanData}if
						_magentaPlate{_magentaData}if
						_yellowPlate{_yellowData}if
						_blackPlate{_blackData}if
					_nSamples expandOne
					sampFunc
					dup begin /Decode [1 0] def end
				put
				/_invert false pt
			}ifelse
		}{
			_rampFuncsArray _index
				bd
					/FunctionType 2
					/Domain [0 1]
					/N 0.5 log _invert{1 _midPoint sub}{_midPoint}ifelse log div
					_gradType 0 eq{
						_invert{/C1}{/C0}ifelse _C0
						_invert{/C0}{/C1}ifelse _C1
					}{
						_invert{/C0}{/C1}ifelse _C1
						_invert{/C1}{/C0}ifelse _C0
					}ifelse
				ed
			put
		}ifelse
		
		_rampIndex 1 ne{
			_boundsArray _index _gradType 1 eq{1 sub}if _endCoord put
		} if
		
		0 1 _invert {exch}if
		_encodeArray _index 2 mul 1 add 3 -1 roll put
		_encodeArray _index 2 mul 3 -1 roll put
		_rampIndex 1 eq {
			/_lastFill true pt
			_gradType 0 eq{
				linealShFill
			}{
				radialShFill
			}ifelse
		}if
		/_index _index 1 
		_gradType 0 eq{
			add pt
		}{
			sub pt
		}ifelse
	}def
}def
/initializeComposite{
	/bwImage{
		pop /_image load 5 execImage 
	}def
	/rampImage{
		_enabledSmoothShade{
			fillRamp
		}{
			_color{
				_nSamples setImageParms
	
				
				_rgbRamp _forceToCMYK not and{
					_redData _greenData _blueData _nSamples 3 expandColor
					true 3 null ncolorimage
				}{
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 null ncolorimage
				}ifelse
			}{
				_nSamples setImageParms _blackData null bwImage
			}ifelse
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		_colorStyle 0 eq{
			1 exch sub
			0 0 0
			4 -1 roll
		}if
		
		_colorStyle 2 eq{
			_forceToCMYK{
				3 npop setcmykcolor
			}{
				setrgbcolor 4 npop
			}ifelse
		}if
		
		_colorStyle 3 eq{
			1 exch sub /_tmp xp
			pop
			4{
				_tmp mul 4 1 roll
			}repeat
		}if
		
		_colorStyle 4 eq{
			_forceToCMYK{
				6 npop setcmykcolor
			}{
				3 -1 roll pop pop
				1 exch sub /_tmp xp
				3{
					1 exch sub _tmp mul 1 exch sub 3 1 roll
				}repeat
				setrgbcolor 
				4 npop
			}ifelse
		}if
		_colorStyle 2 ne _colorStyle 4 ne and{
			null nsetcustomcolor
		}if
	}def
	/nsetcustomcolor
	{
		pop setcmykcolor
	}def
	/nsetcustomcolorend
	{
	}def
	/ncolorimage{
		pop 
		/_colorimage load 10 execImage
	}def
	_noImage not _level2PS not and{
		/linealFill{
			8 setImageParms
			_color{
				currentcmykcolor
				4{
					makeByte8 4 1 roll
				}repeat
				true 4 null ncolorimage
			}{
				currentgray makeByte8 null bwImage
			}ifelse
		}def
	}if
	/getRampColorSpace{
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		/_C0 [currentcolor] pt
		/_C0_Space currentcolorspace pt
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		/_C1 [currentcolor] pt
		/_C1_Space currentcolorspace pt
		
		/_rampColorSpace _C0_Space pt
		
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/npop{
	{pop}repeat
}def
/xd{
	exch def
}def
/nd{
	null def
}def
/pt{
	AGM_Gradient_private 3 1 roll put
}def
/xp{
	exch pt
}def
/xput{
	dup load dup length exch maxlength eq{
		dup dup load dup
		length 2 mul dict copy def
	}if
	load begin
		def
  end
}def
/mySave{
	save /_sSave xp
}def
/myRestore{
	_sSave type /savetype eq{
		_sSave restore
	}if
}def
/gMark{
	counttomark 2 add -1 roll
}def
/execImage{
	/_tmp xp
	{
		exec
	}stopped{
		$error /errorname get /undefinedresult ne{
			stop
		}{
			_tmp npop
		}ifelse
	}if
}def
/pushBSpace{
	newpath gsave
	_bUMatrix astore concat 
}def
/popBSpace{
	grestore
}def
/makeByte8{
	/_tmp 0 pt
	255 mul cvi
	8 string 8{
		dup _tmp 3 index put 
		/_tmp _tmp 1 add pt
	}repeat
	exch pop
}def
/setImageParms{
	1 8 2 index 0 0 1 0 0 _imageMatrix astore
}def
/linealFill{
	0 0 1 1 rectfill
}def
/testCMYKColorThrough{
	gsave
	setcmykcolor currentcmykcolor
	grestore
	add add add 0 ne
}def
/expandOne	{
	/_tmp xp
	dup type /stringtype ne{
		_tmp string
		exch
		dup 0 ne{
			255 mul cvi
			0 1 _tmp 1 sub{
				3 copy
				exch put pop
			}for
		}if
		pop
	}if
}def
/expandColor{
	/_channels xp
	/_len xp
	_channels{
		_len expandOne _channels 1 roll
	}repeat
}def
/blendColor{
	
	_color{
		_rgbRamp _producingSeps not and _forceToCMYK not and{
			_redData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_greenData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blueData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			/setrgbcolor cvx
		}{
			_cyanData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_magentaData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_yellowData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blackData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
	
			_spotColor{
				_rampSD begin
					/_rampSD cvx /begin cvx
	
					spot1 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot1 cvx /tintValue 3 -1 /roll cvx /put cvx
	
					spot2 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot2 cvx /tintValue 3 -1 /roll cvx /put cvx
					/end cvx
			 end
				/_rampSD cvx
				/nsetcustomcolor cvx
			}{
				/setcmykcolor cvx
			}ifelse
		}ifelse
	}{
		_blackData dup type /stringtype eq{
			/_ndx cvx /get cvx _d255 /exch cvx /get cvx
		}if
		
		_enabledSmoothShade{
			1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx /setcmykcolor cvx
		}{
			 /setgray cvx
		}ifelse
	}ifelse
}def
/useRectImage{
	_subSampleOK _enabledSmoothShade not and{
		{
			mark
			0 1 dtransform atan cvi 90 mod 0 eq
			1 0 dtransform atan cvi 90 mod 0 eq
		} stopped
		{
			cleartomark
			false
		}
		{
			and exch pop
		} ifelse
	}{
		false
	}ifelse
}def
/linealImage{
	_noImage{
		rectImage
	}{
		_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get
				/rampImage get exec
		}{
			useRectImage{
				rectImage
			}{
				rampImage
			}ifelse
		}ifelse
	}ifelse
}def
/linealRamp{
	pushBSpace
	_ramp{
		linealImage
	}{
		linealFill
	}ifelse
	popBSpace
	/_rampIndex _rampIndex 1 sub pt
	_rampIndex 0 gt{
		getRampData
	}if
}def
/radialGrad{
	/_usingShells currentoverprint _producingSeps and _usingShells or pt
	/_firstShell true pt
	_enabledSmoothShade not{
		currentoverprint _producingSeps and{
			
			newpath
			clippath pathbbox 
			1 add 4 1 roll
			1 add 4 1 roll
			1 sub 4 1 roll
			1 sub 4 1 roll
			_bbox astore pop
			
			newpath
			_bbox 0 get _bbox 1 get moveto
			_bbox 2 get _bbox 1 get lineto
			_bbox 2 get _bbox 3 get lineto
			_bbox 0 get _bbox 3 get lineto
			closepath
			6 copy
			gsave _bUMatrix astore concat
			1 0 moveto 0 0 1 0 360 arc closepath
			eoclip fill
			popBSpace
		}{
			fill
		}ifelse
	}if
	pushBSpace
	
	_radHilite{
		_xHi _yHi _bUMatrix idtransform /_yHi xp /_xHi xp
		_rampPoint 1 lt{
			1 _rampPoint sub dup _xHi mul exch _yHi mul translate
		}if
	}if
	_rampIndex{
		radialRamp
		/_rampIndex _rampIndex 1 sub pt
		_rampIndex 0 gt{
			getRampData
		}if
	}repeat
	
	popBSpace
	
}def
/getNSamples{
	0 exch
	{
		dup type /stringtype eq{
			length exch pop exit
		}if
		pop
	}forall
	dup 0 eq{
		pop 1
	}if
}def
/getRampData{
	/_rampType gMark pt
	/_color _rampType 0 gt pt
	/_ccRGB _rampType 5 eq _rampType 6 eq or pt
	/_rgbRamp _rampType 4 eq _ccRGB or pt
	/_ccProcess _rampType 2 eq _rampType 3 eq or pt
	_producingSeps{
		_rampSD initSpotDict
		/_spotColor _ccProcess _ccRGB or pt
	}{
		/_spotColor false pt
	}ifelse
	/_ramp true pt
	100 div /_rampPoint xp
	100 div /_midPoint xp
	
	dup /_colorStyle xp
	_colorStyle 0 eq{ 
		2
	}{
		_colorStyle 1 eq{ 
			5
		}{
			_colorStyle 2 eq{
				8
			}{
				_colorStyle 3 eq{
					_producingSeps{
						_rampSD /spot1 get begin
							/name 3 index def
							/spot_K 4 index def
							/spot_Y 5 index def
							/spot_M 6 index def
							/spot_C 7 index def
					 end
					}if
					7
				}{
					_producingSeps{
						_rampSD/spot1 get begin
							/name 4 index def
							/spot_K 8 index def
							/spot_Y 9 index def
							/spot_M 10 index def
							/spot_C 11 index def
					 end
					}if
					11
				} ifelse
			}ifelse
		}ifelse
	}ifelse
	/_tmp xp
	_tmp index 100 div /_endPoint xp
	
	_gradType 1 eq{
		_tmp 1 add index 100 div /_midPoint xp
	}if
	
	_producingSeps{
		_tmp 2 add index /_nextColorStyle xp
		_nextColorStyle 3 eq{
			/_tmp _tmp 4 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 2 add index def
					/spot_Y _tmp 3 add index def
					/spot_M _tmp 4 add index def
					/spot_C _tmp 5 add index def
			 end
			}{
				pop
			}ifelse
		}if
		_nextColorStyle 4 eq{
			/_tmp _tmp 5 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 5 add index def
					/spot_Y _tmp 6 add index def
					/spot_M _tmp 7 add index def
					/spot_C _tmp 8 add index def
			 end
			}{
				pop
			}ifelse
		}if
	}if
	_rampType 3 eq _rampType 6 eq or{
		/_tint2Data gMark pt
	}if
	_ccProcess _ccRGB or{
		/_tint1Data gMark pt
	}if
	_rgbRamp{
		/_blueData gMark pt
		/_greenData gMark pt
		/_redData gMark pt
	}if
	
	_producingSeps{
		_ccProcess _ccRGB or{
			_rampType 3 eq _rampType 6 eq or{
				_rampSD /spot2 get begin
					/tintImage _gradType 0 eq{
						_tint2Data
					}{
						_tint1Data
					}ifelse
					def
					name null eq{
						/name /Black def
					}if
			 end
			}if
			_rampSD /spot1 get begin
				/tintImage _gradType 0 eq _rampType 2 eq or _rampType 5 eq or{
					_tint1Data
				}{
					_tint2Data
				}ifelse
				def
				_rampType 2 eq _rampType 5 eq or{
					name null eq{
						/name _rampSD/spot2 get /name get def
						/spot_C _rampSD/spot2 get /spot_C get def
						/spot_M _rampSD/spot2 get /spot_M get def
						/spot_Y _rampSD/spot2 get /spot_Y get def
						/spot_K _rampSD/spot2 get /spot_K get def
						_rampSD/spot2 get /name null put
					}if
				}{
					name null eq{
						/name /Black def
					}if
				}ifelse
		 end
		}if
	}if
	/_blackData gMark pt
	_rampType 0 gt{
		counttomark 4 add -3 roll
		/_yellowData xp
		/_magentaData xp
		/_cyanData xp
	}if
	_ramp{
		/_nSamples
			[
			_rampType 0 eq {_blackData}if
			_rampType 1 eq {_cyanData _magentaData _yellowData _blackData}if
			_rampType 2 eq {_cyanData _magentaData _yellowData _blackData _tint1Data}if
			_rampType 3 eq {_cyanData _magentaData _yellowData _blackData _tint1Data _tint2Data}if
			_rampType 4 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData}if
			_rampType 5 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data}if
			_rampType 6 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data _tint2Data}if
			] getNSamples pt
		_enabledSmoothShade not {/_ramp _nSamples 1 gt pt} if
	} if
	
	setCStop
}def
/rectImage{
	gsave
	/_sInc 1 pt
	/_bInc 1 _nSamples div pt
	/_nSubSamples _nSamples pt
	/_optimize false pt
		
	_subSampleOK{
		/_uRampLen 1 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt pt
		/_pChange _uRampLen 0 eq{0}{_nSamples _uRampLen div}ifelse pt
		
		_pChange .5 gt dup /_optimize xp{
			/_nSubSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc 1 _nSubSamples div pt
			/_sInc _nSamples 1 sub _nSubSamples 1 sub div pt
		}if
	}if
	0
	_nSubSamples
	[
	/dup cvx
	_optimize {
		/round cvx /cvi cvx
	} if
	/_ndx /exch cvx /pt cvx
	blendColor
	0 0 _bInc 1 /rectfill cvx
	_bInc 0 /translate cvx
	_sInc /add cvx
	] cvx
	bind
	repeat
	pop
	_spotColor{
		nsetcustomcolorend
	}if
	grestore
}def
/radialInit{
	/_nRadSamples _nSamples dup 0 eq{pop 1}if pt
	/_sInc -1 pt
	/_rampLen _rampPoint _endPoint sub pt
	/_bInc _rampLen _nSamples div neg pt
	/_optimize false pt
	_subSampleOK{
		/_uRampLen
			_rampLen 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			0 _rampLen dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			2 copy lt{
				exch
			}if pop
		pt
		/_pChange 
			_uRampLen 0 eq{
				0
			}{
				_nSamples _uRampLen div
			}ifelse
		pt
		_pChange .5 gt dup /_optimize xp{
			/_nRadSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc _rampLen _nRadSamples div neg pt
			/_sInc _nSamples 1 sub _nRadSamples 1 sub div neg pt
		}if
	}if
	_radHilite{
		/_xBCInc _xHi _rampLen mul _nRadSamples div pt
		/_yBCInc _yHi _rampLen mul _nRadSamples div pt
	}if
}def
/radialRamp{
	_enabledSmoothShade{
		fillRamp
	}{
		/_saveMatrix _saveMatrix currentmatrix def
		
		radialInit
	
		%
		%
		true
		_producingSeps _rgbRamp not and{
			_nSamples 1 gt{ 
				pop
				/_ndx 0 pt
				[blendColor] cvx exec
				currentInkN
				/_ndx _nSamples 1 sub pt
				[blendColor] cvx exec
				currentInkN
				or
			}if
		}if
		{
			_rampPoint
		
			_nSamples 1 sub
		
			_nRadSamples 
			[
				/dup cvx
		
				_optimize{
					/round cvx /cvi cvx
				}if
		
				/_ndx /exch cvx /pt cvx
				
				_usingShells{
					/_firstShell cvx{
						/_firstShell false pt
					}{
						0 0 3 index 360 0 arcn fill
					}/ifelse cvx
				}if
		
				blendColor
		
				_usingShells{
					0 0 3 /index cvx 0 360 /arc cvx 
				}{
					0 0 3 /index cvx 0 360 /arc cvx /fill cvx
				}ifelse
		
				/exch cvx _bInc /add cvx /exch cvx
		
				_sInc /add cvx
		
				_radHilite{
					_xBCInc _yBCInc /translate cvx
				}if
			] cvx bind
			repeat
		
			pop pop
		}{
			_usingShells{
				0 0 _rampPoint 360 0 arcn fill
			}if
		}ifelse
	
		_saveMatrix setmatrix
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
		
		_usingShells _rampIndex 1 eq and{
			fill
		}if
	
		_spotColor{
			nsetcustomcolorend
		}if
	}ifelse
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_pattern_AI5 1.1 0
%%Title: (Adobe Illustrator (R) Version 5.0 Pattern Operators)
%%Version: 1.1 0
%%CreationDate: (03/26/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 95 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/@
{
} def
/&
{
} def
/dp
{
	dup null eq
	{
		pop
		_dp 0 ne
		{
			0 1 _dp 1 sub _dl mod
			{
				_da exch get 3 get
			} for
			_dp 1 sub _dl mod 1 add packedarray
			_da 0 get aload pop 8 -1 roll 5 -1 roll pop 4 1 roll
			definepattern pop
		} if
	}
	{
		_dp 0 ne _dp _dl mod 0 eq and
		{
			null dp
		} if
		7 packedarray _da exch _dp _dl mod exch put
		_dp _dl mod _da 0 get 4 get 2 packedarray
		/_dp _dp 1 add def
	} ifelse
} def
/E
{
	_ed begin
	dup 0 get type /arraytype ne
	{
		0
		{
			dup 1 add index type /arraytype eq
			{
				1 add
			}
			{
				exit
			} ifelse
		} loop
		array astore
	} if
	/_dd exch def
	/_ury exch def
	/_urx exch def
	/_lly exch def
	/_llx exch def
	/_n exch def
	/_y 0 def
	/_dl 4 def
	/_dp 0 def
	/_da _dl array def
	0 1 _dd length 1 sub
	{
		/_d exch _dd exch get def
		0 2 _d length 2 sub
		{
			/_x exch def
			/_c false def
			/_r _d _x 1 add get cvlit def
			_r _ ne
			{
				_urx _llx sub _ury _lly sub
				[
				1 0 0 1 0 0
				]
				[
				/save cvx
				_llx neg _lly neg /translate cvx
				_c
				{
					nc /begin cvx
				} if
				_r dup type /stringtype eq
				{
					cvx
				}
				{
					{
						exec
					} /forall cvx
				} ifelse
				_c
				{
					/end cvx
				} if
				/restore cvx
				] cvx
				/_fn 12 _n length add string def
				_y _fn cvs pop
				/_y _y 1 add def
				_fn 12 _n putinterval
				_fn _c false dp
				_d exch _x 1 add exch put
			} if
		} for
	} for
	null dp
	_n _dd /_pd
 end
	xput
} def
/fc
{
	_fm dup concatmatrix pop
} def
/p
{
	/_fm exch ddef
	9 -2 roll _pm translate fc
	7 -2 roll _pm scale fc
	5 -1 roll _pm rotate fc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate fc
		1 -1 _pm scale fc
		neg _pm rotate fc
	}
	{
		pop
	} ifelse
	dup _pm rotate fc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore fc
	neg _pm rotate fc
	_pd exch get /_fdd exch ddef
	/_pf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					patternfill
				}
				{
					pop
					fill
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_psf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					9 copy 6 npop patternashow
				}
				{
					pop
					6 copy 3 npop hvashow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		sw rmoveto
	} ddef
	/_pjsf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					12 copy 6 npop patternawidthshow
				}
				{
					pop 9 copy 3 npop hvawidthshow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		swj rmoveto
	} ddef
	/_lp /none ddef
} def
/sc
{
	_sm dup concatmatrix pop
} def
/P
{
	/_sm exch ddef
	9 -2 roll _pm translate sc
	7 -2 roll _pm scale sc
	5 -1 roll _pm rotate sc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate sc
		1 -1 _pm scale sc
		neg _pm rotate sc
	}
	{
		pop
	} ifelse
	dup _pm rotate sc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore sc
	neg _pm rotate sc
	_pd exch get /_sdd exch ddef
	/_ps
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					patternstroke
				}
				{
					pop stroke
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_pss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					10 copy 6 npop patternashowstroke
				}
				{
					pop 7 copy 3 npop ss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop sw rmoveto
	} ddef
	/_pjss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					13 copy 6 npop patternawidthshowstroke
				}
				{
					pop 10 copy 3 npop jss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop swj rmoveto
	} ddef
	/_lp /none ddef
} def
end
userdict /Adobe_pattern_AI5 18 dict dup begin
put
/initialize
{
	/definepattern where
	{
		pop
		pop pop
	}
	{
	 begin
	 begin
		Adobe_pattern_AI5 begin
		Adobe_pattern_AI5
		{
			dup xcheck
			{
				bind
			} if
			pop pop
		} forall
		mark
		cachestatus 7 1 roll pop pop pop pop exch pop exch
		{
			{
				10000 add
				dup 2 index gt
				{
					exit
				} if
				dup setcachelimit
			} loop
		} stopped
		cleartomark
	 end 	
		
	 end
	 end
		
		Adobe_pattern_AI5 begin
	} ifelse
} def
/terminate
{
	currentdict Adobe_pattern_AI5 eq
	{
	 end
	} if
} def
errordict
/nocurrentpoint
{
	pop
	stop
} put
errordict
/invalidaccess
{
	pop
	stop
} put
/patternencoding
256 array def
0 1 255
{
	patternencoding exch ( ) 2 copy exch 0 exch put cvn put
} for
/definepattern
{
	17 dict begin
	/uniform exch def
	/cache exch def
	/key exch def
	/procarray exch def
	/mtx exch matrix invertmatrix def
	/height exch def
	/width exch def
	/ctm matrix currentmatrix def
	/ptm matrix def
	/str 32 string def
	/slice 9 dict def
	slice /s 1 put
	slice /q 256 procarray length div sqrt floor cvi put
	slice /b 0 put
	/FontBBox
	[
	0 0 0 0
	] def
	/FontMatrix mtx matrix copy def
	/Encoding patternencoding def
	/FontType 3 def
	/BuildChar
	{
		exch
	 begin
		/setstrokeadjust where {pop true setstrokeadjust} if
		slice begin
		dup q dup mul mod s idiv /i exch def
		dup q dup mul mod s mod /j exch def
		q dup mul idiv procarray exch get
		/xl j width s div mul def
		/xg j 1 add width s div mul def
		/yl i height s div mul def
		/yg i 1 add height s div mul def
		uniform
		{
			1 1
		}
		{
			width 0 dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
			0 height dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
		} ifelse
		width 0 cache
		{
			xl 4 index mul yl 4 index mul xg 6 index mul yg 6 index mul
			setcachedevice
		}
		{
			setcharwidth
		} ifelse
		gsave
		scale
		newpath
		xl yl moveto
		xg yl lineto
		xg yg lineto
		xl yg lineto
		closepath
		clip
		newpath
	 end
	 end
		exec
		grestore
	} def
	key currentdict definefont
 end
} def
/patterncachesize
{
	gsave
	newpath
	0 0 moveto
	width 0 lineto
	width height lineto
	0 height lineto
	closepath
	patternmatrix setmatrix
	pathbbox
	exch ceiling 4 -1 roll floor sub 3 1 roll
	ceiling exch floor sub
	mul 1 add
	grestore
} def
/patterncachelimit
{
	cachestatus 7 1 roll 6 npop 8 mul
} def
/patternpath
{
	exch dup begin
	setfont
	ctm setmatrix
	concat
	slice exch /b exch slice /q get dup mul mul put
	FontMatrix concat
	uniform
	{
		width 0 dtransform round width div exch round width div exch
		0 height dtransform round height div exch height div exch
		0 0 transform round exch round exch
		ptm astore setmatrix
	}
	{
		ptm currentmatrix pop
	} ifelse
	{
		currentpoint
	} stopped not
	{
		2 npop
		pathbbox
		true
		4 index 3 index eq
		4 index 3 index eq
		and
		{
			pop false
			{
				{
					2 npop
				}
				{
					3 npop true
				}
				{
					7 npop true
				}
				{
					pop true
				} pathforall
			} stopped
			{
				5 npop true
			} if
		} if
		{
			height div ceiling height mul 4 1 roll
			width div ceiling width mul 4 1 roll
			height div floor height mul 4 1 roll
			width div floor width mul 4 1 roll
			2 index sub height div ceiling cvi exch
			3 index sub width div ceiling cvi exch
			4 2 roll moveto
			FontMatrix mtx invertmatrix
			dup dup 4 get exch 5 get rmoveto
			ptm ptm concatmatrix pop
			slice /s
			patterncachesize patterncachelimit div ceiling sqrt ceiling cvi
			dup slice /q get gt
			{
				pop slice /q get
			} if
			put
			0 1 slice /s get dup mul 1 sub
			{
				slice /b get add
				gsave
				0 1 str length 1 sub
				{
					str exch 2 index put
				} for
				pop
				dup
				{
					gsave
					ptm setmatrix
					1 index str length idiv
					{
						str show
					} repeat
					1 index str length mod str exch 0 exch getinterval show
					grestore
					0 height rmoveto
				} repeat
				grestore
			} for
			2 npop
		}
		{
			4 npop
		} ifelse
	} if
 end
} def
/patternclip
{
	_eo {eoclip} {clip} ifelse
} def
/patternstrokepath
{
	strokepath
} def
/patternmatrix
matrix def
/patternfill
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternclip
	Adobe_pattern_AI5 /patternpath get exec
	grestore
	newpath
} def
/patternstroke
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternstrokepath
	true
	{
		{
			{
				newpath
				moveto
			}
			{
				lineto
			}
			{
				curveto
			}
			{
				closepath
				3 copy
				Adobe_pattern_AI5 /patternfill get exec
			} pathforall
			3 npop
		} stopped
		{
			5 npop
			patternclip
			Adobe_pattern_AI5 /patternfill get exec
		} if
	}
	{
		patternclip
		Adobe_pattern_AI5 /patternfill get exec
	} ifelse
	grestore
	newpath
} def
/vpatternawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index 5 index 5 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			6 index 6 index 6 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	3 npop
} def
/hpatternawidthshow
{
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		9 index 9 index 9 index
		Adobe_pattern_AI5 /patternfill get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	8 npop
} def
/patternashow
{
0 0 0 6 3 roll
patternawidthshow
} def
/patternawidthshow
{
	6 index type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get 7 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshow } { vpatternawidthshow } ifelse
} def
/vpatternawidthshowstroke
{
	7 1 roll
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			3 index setmatrix
			6 index 6 index 6 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			4 index setmatrix
			7 index 7 index 7 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	4 npop
} def
/hpatternawidthshowstroke
{
	7 1 roll
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		7 index setmatrix
		10 index 10 index 10 index
		Adobe_pattern_AI5 /patternstroke get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	9 npop
} def
/patternashowstroke
{
	0 0 0 7 3 roll
	patternawidthshowstroke
} def
/patternawidthshowstroke
{
	7 index type /dicttype eq
	{
		patternmatrix /patternmatrix get 8 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshowstroke } { vpatternawidthshowstroke } ifelse
} def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog%%BeginSetupuserdict /_useSmoothShade true putuserdict /_aicmykps false putuserdict /_forceToCMYK false putAdobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 AGM_Gradient /initializeAI get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_pattern_AI5 /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI5_Begin_NonPrintingNp%AI8_PluginGroupInfo(Adobe Vectorized Object) (Image Tracing) (Vectorize.aip)%AI8_PluginGroupInfo(Adobe Flare Plugin) (Flare) (Flare.aip)%AI8_PluginGroupInfo(Adobe Deform Plugin) (Adobe Envelope Plugin) (Envelope and Warp.aip)%AI8_PluginGroupInfo(Adobe Planar Group) (Adobe Live Paint Plugin) (Live Paint.aip)%AI8_PluginGroupInfo(Adobe Perspective Plugin Group) (Adobe Perspective Plugin Group) (Perspective.aip)%AI8_PluginGroupInfo(Adobe Path Blends) (Adobe Blends Plugin) (LiveBlends.aip)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (ScatterBrushTool.aip)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (ScatterBrushTool.aip)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe Calligraphic Brush Tool) (Adobe Calligraphic Brush Plugin) (CalligBrushTool.aip)%AI8_PluginGroupInfo(Adobe Symbolism) (Adobe Symbolism) (ParticleSystem.aip)%AI8_PluginGroupInfo(Adobe Pattern Editor Plugin Group) (Adobe Pattern Editor Plugin Group) (SwatchLibraries.aip)%AI8_PluginGroupInfo(Pathfinder Suite) (Adobe Compound Shape) (PathFinderS.aip)%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp4 Bn%AI5_BeginGradient: (Fade to Black)(Fade to Black) 0 2 Bd[0.7894250.7322960.6807810.6892960.0705880.0705880.0705884 %_Br[0.789425 0.732296 0.680781 0.689296 0.070588 0.070588 0.070588 2 50 100 %_BS%_0.789425 0.732296 0.680781 0.689296 0.070588 0.070588 0.070588 2 50 100 Bs0.789425 0.732296 0.680781 0.689296 0.070588 0.070588 0.070588 2 25 0 %_BS%_0.789425 0.732296 0.680781 0.689296 0.070588 0.070588 0.070588 2 25 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Green, Yellow, Orange)(Green, Yellow, Orange) 0 7 Bd[<0203030303030404040505060606070708080909090A0A0B0B0B0C0C0D0E0E0F101111121213141516171718191A1B1C1D1E1E1F202222232425262728292A2B2C2D2E303131323334353738393A3B3C3D3E3F4041424344464748494A4C4D5052545658595B5E6061636567686B6D6E7072737578797B7C7E808183858788898B8D8F9092939596989A9B9C9E9FA0A1A3A4A6A7A8A9AAACADAEAFB0B1B2B3B4B5B6B6B7B8B9BABABBBCBDBDBEBFBFC0C1C1C2C2C3C4C4C4C5C5C6C6C7C7C8C8C8C9C9CACACACBCBCBCBCCCCCCCCCDCDCDCDCDCDCECECECECECECECECFCFCFCFCF><B7B7B6B6B6B6B4B4B4B3B1B1B1B0AEAEADADABABAAAAA8A7A7A7A4A4A3A3A1A0A09F9D9C9B9B98989796939392918F8E8D8C8A89888885848381807F7F7C7B7A7A7776757471706F6E6B6B6A696665646361605F5E5B5A595956555453505050504D4D4C4C494A494846464544434242403F3E3E3C3C3B3A3838373736353434323232312F2F2E2E2C2C2C2B2929282827262525232322222120201F1E1E1E1E1C1C1C1C1A1B1B1A1919191718181716161616151515141313131312121212111011100F0F0F0F0E0E0E0E0D0D0D0D0C0C0C0C0B0B0B0B0A0A0A0A090909090909><E9EAEAEBEBEBEBEBEBEBEBEBEBEBEBEBECECEBEBECECECECECECECECECECECECEAEAEAEAEAE9E9E8E8E7E7E7E7E7E5E5E5E5E5E5E5E3E3E3E3E3E3E3E1E2E1E1E1E1E1E0E0E0E0E0E0E0DEDEDEDEDEDEDEDDDDDDDDDDDDDDDCDDDDDCDCDDDDDCDCDDDDDDDDDEDDDDDDDEDEDEDEDEDEDEDFDFDFDFDFDFE0E0E0E1E1E0E1E1E2E2E3E3E2E3E3E4E4E4E5E5E5E5E6E6E6E7E6E6E7E7E8E8E8E7E8E8E8E8E9E9E8E8E9E9E9E9EAE9E9E9EAEAEAEBEAEAEAEBEBEBEBEAEAEAEBEBEBEBEAEBEBEBEBECECEBEBEBEBEBECECEBEBEBECECECECEBEBEBEBECECECEBEBEBEBEBECECEBEBEBEB><070707080808090A0B0C0D0D0E0F1011111213141516161718191A1B1B1C1D1E1E1E1F20212223232424252627282829292A2B2C2D2C2D2E2F303031313233333435353536373738393A393A3A3B3C3D3D3D3E3E3F4040414041424243434342424142424241404040404040403F3F3F3E3E3E3F3D3D3D3D3D3D3D3C3B3B3B3B3A3A39393838383837363636353535353333333332323232313131312F2F2E2E2D2D2D2C2B2B2A2A29292928272727252525252423232322222221202020201F1F1E1E1D1D1D1D1B1B1B1B1A1A1A1A181818181717171615151515141414141212><E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100><5D5D5E5E5E5E5F5F5F5F606060606161616162626262636363636464646465656565666666666767676768686868696969696A6A6A6A6B6B6B6C6C6C6C6D6D6D6D6E6E6E6E6F6F6F6F7070707071717171727272727373737374747474757575757676767677777777787878787979797A7A7A7A7B7B7B7B7C7C7C7C7D7D7D7D7E7E7E7E7F7F7F7F8080808081818181828282828383838384848484858585858686868687878787888888898989898A8A8A8A8B8B8B8B8C8C8C8C8D8D8D8D8E8E8E8E8F8F8F8F9090909091919191929292929393939394949494959595959696><262626262727272727272728282828282828292929292929292A2A2A2A2A2A2A2B2B2B2B2B2B2B2C2C2C2C2C2C2C2D2D2D2D2D2D2D2E2E2E2E2E2E2E2F2F2F2F2F2F2F303030303030303131313131313132323232323232333333333333333434343434343435353535353535363636363636363737373737373738383838383838393939393939393A3A3A3A3A3A3A3B3B3B3B3B3B3B3C3C3C3C3C3C3C3D3D3D3D3D3D3D3E3E3E3E3E3E3E3F3F3F3F3F3F3F40404040404040414141414141414242424242424243434343434343444444444444444545454545454546464646>4 %_Br<020202020202020202020303030303030303030303030303030303030303030302030202020202020202020202020202020202020202020202020202020202020202020202010101010101010101010101010101010202020202020202020202020202020202030303020303030303030303020302020202020202020202><14151717181A1B1B1D1E1F20212224252627292A2B2D2E30303234353738393B3C3D3E40424244464748494A4C4D4E4F50525354555758595A5C5D5E6061636567686A6B6D6E707273757678787A7B7C7D7E7F8081828384868788898B8C8D8E90919294959798999B9C9D9FA0A1A3A4A6A7A9AAABADAEAFB1B2B3B5B6B7><E7E6E6E7E6E4E3E3E2E1E0E1E0DFDFDEDFDFDFDFE0E0E0E0E2E2E3E4E3E4E4E4E4E4E4E4E4E5E5E6E5E5E4E4E3E3E3E3E2E2E3E2E2E1E2E2E1E1E1E2E2E3E3E5E6E7E7E9EAEBEDEEF0F2F3F2F2F1F1F0EFEFEEEDECEBEAEAE9E9E8E8E8E8E8E7E7E8E8E9E9E8E8E8E8E7E7E7E7E7E7E7E7E7E7E8E8E8E9E9E9E9E9E9E9E9><030303030404040505050505050505050606050506050505050505040405050404050404040404040404040404040404040404050505060606060606060606060605050505040403030302020202020202030303030404040405050505050505050505050505060606060707070607070707060707070607060606070707><FDFDFDFCFCFCFCFBFBFBFBFAFAFAFAFAF9F9F9F9F8F8F8F8F7F7F7F7F7F6F6F6F6F5F5F5F5F4F4F4F4F3F3F3F3F3F2F2F2F2F1F1F1F1F0F0F0F0F0EFEFEFEFEEEEEEEEEDEDEDEDEDECECECECEBEBEBEBEAEAEAEAEAE9E9E9E9E8E8E8E8E7E7E7E7E6E6E6E6E6E5E5E5E5E4E4E4E4E3E3E3E3E3E2E2E2E2E1E1E1E1E0E0E0><DBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D><2D2D2D2D2D2D2D2D2D2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A292929292929292929292929292929292929282828282828282828282828282828282828272727272727272727272727272727272727262626262626262626>4 %_Br<CFCFCECECECECDCDCDCCCCCCCBCBCBCACAC9C9C9C8C7C7C7C6C6C5C5C4C3C3C3C2C2C1C0C0BFBFBEBEBEBDBCBCBCBBBABAB9B9B8B8B7B6B6B5B4B4B3B3B2B2B1B1B0AFAFAEADADACACABABAAA9A8A7A6A6A5A4A3A2A2A1A09F9E9D9C9C9B9A99989796959493939291908F8E8D8C8B8A8989888786858483828281807F7E7D7C7B7A797878777675747372716F6E6D6C6B6A6968666665636261605F5E5D5C5B5A5958575655545352504F4E4D4C4B4A4948474645434342403F3F3E3C3C3B3A393837363534333231302F2E2D2C2B2A2928272625232222201F1E1D1C1B1B19181717161413131211100F0E0D0D0C0B0A09080707060504040302020202><0909080808080808080807070707070707070707070606060606060606060606050606050505050505050505050504040505040405050404040404040404040404040404040404040404040404040403040404040404040304040303030403030304030304030304040304040403040403030404030303040303030303030303030303030303030303040304040404040404040405040505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050506060607060707080808090909090A0A0A0B0B0B0B0C0C0C0D0D0D0D0E0E0E0E0F0F0F0F10101011111111111212121212121313131314141414><EBEBECECECECEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDECECECECEDEDECECECECECECECECEDEDEDEDEDEDEDEDEDEDEEEEEEEEEEEEEEEEEEEEEFEFEFEFEFF0F0F0F0F0F1F1F2F2F2F2F3F3F3F3F3F3F3F3F3F3F3F2F2F2F2F3F3F3F3F3F3F2F2F2F2F2F1F1F1F0F0F0F0EFEFF0F0EFEFEFEFEFEFEFEEEFEFEFEFEFEFEEEEEEEEEEEEEEEFEEEEEEEEEEEEEFEEEEEEEEEEEEEDEDEDEEEEEEEEEEEEEEEEEEEEEFEFEFEFF0F0F0F0F0F0F1F1F1F1F0F0F0F0F0F0F0EFEFEFEFEEEEEEEEEDEDEEEDEDEEEEEDEEEEEDEDEDEDEDEDECECECECECECECECECEBEBEBEAEAEAE9EAEAE9E9E9E9E9E9E9E8E9E9E9E9E9E9E9E9E9E9EAEAEAEAEAEBEBEBEBEBECEBEBEAE9E7><121211111111101010100F0F0F0E0E0E0F0E0E0E0E0D0D0D0D0D0D0D0D0D0D0D0C0C0C0C0C0C0C0C0C0C0C0B0B0B0B0B0B0B0A0A0A0B0A0A0A09090A0A09090909080909080808080808080808080808080809080909090909090909090A09090A0A090A0A090A0A0A090A0A0A090A0A09090909090909090808090808080908080909080809080809090809090909090909090A0A090A0A0A0A0A0A0A0A0B0B0A0B0B0B0B0B0B0B0B0C0C0C0C0C0D0C0D0D0C0D0D0D0C0D0D0D0C0D0D0C0C0C0C0C0C0C0C0B0B0B0A0A0A0A0909090908080808080808080808080808080707070707070707060606060606060505050505050504040404040404040303><000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFD><969697979797989898989999999A9A9A9A9B9B9B9B9C9C9C9D9D9D9D9E9E9E9E9F9F9FA0A0A0A0A1A1A1A1A2A2A2A3A3A3A3A4A4A4A4A5A5A5A6A6A6A6A7A7A7A7A8A8A8A9A9A9A9AAAAAAAAABABABACACACACADADADADAEAEAEAFAFAFAFB0B0B0B0B1B1B1B2B2B2B2B3B3B3B3B4B4B4B5B5B5B5B6B6B6B6B7B7B7B8B8B8B8B9B9B9B9BABABABBBBBBBBBCBCBCBCBDBDBDBEBEBEBEBFBFBFBFC0C0C0C1C1C1C1C2C2C2C2C3C3C3C4C4C4C4C5C5C5C5C6C6C6C7C7C7C7C8C8C8C8C9C9C9CACACACACBCBCBCBCCCCCCCDCDCDCDCECECECECFCFCFD0D0D0D0D1D1D1D1D2D2D2D3D3D3D3D4D4D4D4D5D5D5D6D6D6D6D7D7D7D7D8D8D8D9D9D9D9DADADADADBDB><4646464646464545454545454545454544444444444444444444434343434343434343434242424242424242424241414141414141414141404040404040404040403F3F3F3F3F3F3F3F3F3F3E3E3E3E3E3E3E3E3E3E3E3D3D3D3D3D3D3D3D3D3D3C3C3C3C3C3C3C3C3C3C3B3B3B3B3B3B3B3B3B3B3A3A3A3A3A3A3A3A3A3A39393939393939393939383838383838383838383737373737373737373736363636363636363636353535353535353535353534343434343434343434333333333333333333333232323232323232323231313131313131313131303030303030303030302F2F2F2F2F2F2F2F2F2F2E2E2E2E2E2E2E2E2E2E2D2D2D2D2D2D>4 %_Br<0203030303030404040505060606070708080909090A0A0B0B0B0C0C0D0E0E0F101111121213141516171718191A1B1C1D1E1E1F202222232425262728292A2B2C2D2E303131323334353738393A3B3C3D3E3F4041424344464748494A4C4D5052545658595B5E6061636567686B6D6E7072737578797B7C7E808183858788898B8D8F9092939596989A9B9C9E9FA0A1A3A4A6A7A8A9AAACADAEAFB0B1B2B3B4B5B6B6B7B8B9BABABBBCBDBDBEBFBFC0C1C1C2C2C3C4C4C4C5C5C6C6C7C7C8C8C8C9C9CACACACBCBCBCBCCCCCCCCCDCDCDCDCDCDCECECECECECECECECFCFCFCFCF><B7B7B6B6B6B6B4B4B4B3B1B1B1B0AEAEADADABABAAAAA8A7A7A7A4A4A3A3A1A0A09F9D9C9B9B98989796939392918F8E8D8C8A89888885848381807F7F7C7B7A7A7776757471706F6E6B6B6A696665646361605F5E5B5A595956555453505050504D4D4C4C494A494846464544434242403F3E3E3C3C3B3A3838373736353434323232312F2F2E2E2C2C2C2B2929282827262525232322222120201F1E1E1E1E1C1C1C1C1A1B1B1A1919191718181716161616151515141313131312121212111011100F0F0F0F0E0E0E0E0D0D0D0D0C0C0C0C0B0B0B0B0A0A0A0A090909090909><E9EAEAEBEBEBEBEBEBEBEBEBEBEBEBEBECECEBEBECECECECECECECECECECECECEAEAEAEAEAE9E9E8E8E7E7E7E7E7E5E5E5E5E5E5E5E3E3E3E3E3E3E3E1E2E1E1E1E1E1E0E0E0E0E0E0E0DEDEDEDEDEDEDEDDDDDDDDDDDDDDDCDDDDDCDCDDDDDCDCDDDDDDDDDEDDDDDDDEDEDEDEDEDEDEDFDFDFDFDFDFE0E0E0E1E1E0E1E1E2E2E3E3E2E3E3E4E4E4E5E5E5E5E6E6E6E7E6E6E7E7E8E8E8E7E8E8E8E8E9E9E8E8E9E9E9E9EAE9E9E9EAEAEAEBEAEAEAEBEBEBEBEAEAEAEBEBEBEBEAEBEBEBEBECECEBEBEBEBEBECECEBEBEBECECECECEBEBEBEBECECECEBEBEBEBEBECECEBEBEBEB><070707080808090A0B0C0D0D0E0F1011111213141516161718191A1B1B1C1D1E1E1E1F20212223232424252627282829292A2B2C2D2C2D2E2F303031313233333435353536373738393A393A3A3B3C3D3D3D3E3E3F4040414041424243434342424142424241404040404040403F3F3F3E3E3E3F3D3D3D3D3D3D3D3C3B3B3B3B3A3A39393838383837363636353535353333333332323232313131312F2F2E2E2D2D2D2C2B2B2A2A29292928272727252525252423232322222221202020201F1F1E1E1D1D1D1D1B1B1B1B1A1A1A1A181818181717171615151515141414141212><E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100><5D5D5E5E5E5E5F5F5F5F606060606161616162626262636363636464646465656565666666666767676768686868696969696A6A6A6A6B6B6B6C6C6C6C6D6D6D6D6E6E6E6E6F6F6F6F7070707071717171727272727373737374747474757575757676767677777777787878787979797A7A7A7A7B7B7B7B7C7C7C7C7D7D7D7D7E7E7E7E7F7F7F7F8080808081818181828282828383838384848484858585858686868687878787888888898989898A8A8A8A8B8B8B8B8C8C8C8C8D8D8D8D8E8E8E8E8F8F8F8F9090909091919191929292929393939394949494959595959696><262626262727272727272728282828282828292929292929292A2A2A2A2A2A2A2B2B2B2B2B2B2B2C2C2C2C2C2C2C2D2D2D2D2D2D2D2E2E2E2E2E2E2E2F2F2F2F2F2F2F303030303030303131313131313132323232323232333333333333333434343434343435353535353535363636363636363737373737373738383838383838393939393939393A3A3A3A3A3A3A3B3B3B3B3B3B3B3C3C3C3C3C3C3C3D3D3D3D3D3D3D3E3E3E3E3E3E3E3F3F3F3F3F3F3F40404040404040414141414141414242424242424243434343434343444444444444444545454545454546464646>4 %_Br<020202020202020202020303030303030303030303030303030303030303030302030202020202020202020202020202020202020202020202020202020202020202020202010101010101010101010101010101010202020202020202020202020202020202030303020303030303030303020302020202020202020202><14151717181A1B1B1D1E1F20212224252627292A2B2D2E30303234353738393B3C3D3E40424244464748494A4C4D4E4F50525354555758595A5C5D5E6061636567686A6B6D6E707273757678787A7B7C7D7E7F8081828384868788898B8C8D8E90919294959798999B9C9D9FA0A1A3A4A6A7A9AAABADAEAFB1B2B3B5B6B7><E7E6E6E7E6E4E3E3E2E1E0E1E0DFDFDEDFDFDFDFE0E0E0E0E2E2E3E4E3E4E4E4E4E4E4E4E4E5E5E6E5E5E4E4E3E3E3E3E2E2E3E2E2E1E2E2E1E1E1E2E2E3E3E5E6E7E7E9EAEBEDEEF0F2F3F2F2F1F1F0EFEFEEEDECEBEAEAE9E9E8E8E8E8E8E7E7E8E8E9E9E8E8E8E8E7E7E7E7E7E7E7E7E7E7E8E8E8E9E9E9E9E9E9E9E9><030303030404040505050505050505050606050506050505050505040405050404050404040404040404040404040404040404050505060606060606060606060605050505040403030302020202020202030303030404040405050505050505050505050505060606060707070607070707060707070607060606070707><FDFDFDFCFCFCFCFBFBFBFBFAFAFAFAFAF9F9F9F9F8F8F8F8F7F7F7F7F7F6F6F6F6F5F5F5F5F4F4F4F4F3F3F3F3F3F2F2F2F2F1F1F1F1F0F0F0F0F0EFEFEFEFEEEEEEEEEDEDEDEDEDECECECECEBEBEBEBEAEAEAEAEAE9E9E9E9E8E8E8E8E7E7E7E7E6E6E6E6E6E5E5E5E5E4E4E4E4E3E3E3E3E3E2E2E2E2E1E1E1E1E0E0E0><DBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D><2D2D2D2D2D2D2D2D2D2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A292929292929292929292929292929292929282828282828282828282828282828282828272727272727272727272727272727272727262626262626262626>4 %_Br<CFCFCECECECECDCDCDCCCCCCCBCBCBCACAC9C9C9C8C7C7C7C7C6C5C5C5C4C3C3C3C2C2C1C1C0BFBFBFBEBEBEBDBCBCBCBBBABABAB9B9B8B8B7B6B6B6B5B4B4B3B3B2B2B2B1B1B0AFAFAEAEADADACACABABABAAA9A8A7A7A6A6A5A4A3A3A2A2A1A0A09F9E9D9C9C9C9B9A9999989796969594949393929190908F8E8D8D8C8B8A8A898989888786868584838382828281807F7F7E7D7D7C7B7B7A7979787877777675757473737271716F6E6E6D6D6C6B6B6A6969686666666665636362616160605F5E5E5D5D5C5B5B5A5A5958585757565655545452535252504F4F4E4E4D4D4C4C4B4A4A4949484846474646454543434343424240403F403F3F3E3E3C3C3C3C3B3B3A3A393938383737363635353634343333323231313130302F2F2E2E2D2D2D2C2C2B2B2B2A2A2929292828272727262625252523232222222222222020201F1F1E1E1F1D1D1D1C1C1C1B1B1B1A1B1B191919181818171717171717171616161414141313131413131312121212111111111010100F0F0F0F0E0E0E0E0D0D0D0D0D0D0D0D0D0C0C0C0C0B0B0B0B0B0A0A0A0A090909090908080808080807070707070606070707070606060606060505050505050504040404040404040404040404040403030303030303030202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202><09090808080808080808070707070707070707070706060606060606060606060605060606050505050505050505050505040405050404050504040404040404040404040404040404040404040404040404040404040403040404040404040403030404040303030403030303040303030404030304040303040404030304040403030304040303030304030303030303030303030303030303030303030303030303030404030404040404040404040404040404050504040505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050606050606060607070706060707070708080808080808090909090809090909090A0A0A0A0A0A0A0A0B0B0B0B0B0B0B0B0B0B0B0C0C0C0C0C0C0C0C0D0D0D0D0D0D0E0D0D0D0D0D0E0E0E0E0E0E0E0E0E0E0E0E0E0F0F0F0F0F0F0F0F0F0F0F0F0F0F10101010101010101010101111111111111111111111111111111111111111111112121211121212121212121212121212121212121313121212121212121212121313131313131313131313131313131313131313131313131313131313131414141414141414141414141414141414141413131313131414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414><EBEBECECECECEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDECECECECEDEDEDECECECECECECECECEDEDEDEDEDEDEDEDEDEDEDEDEEEEEEEEEEEEEEEEEEEEEEEFEFEFEFEFF0F0F0F0F0F0F1F1F1F2F2F2F2F3F3F3F3F3F3F3F3F3F3F3F3F3F2F2F2F2F2F3F3F3F3F3F3F3F3F2F2F2F2F2F2F1F1F1F1F1F0F0F0F0EFEFEFF0F0EFEFEFEFEFEFEFEFEFEFEEEFEFEFEFEFEFEFEFEFEFEEEEEEEEEEEEEEEEEEEFEEEEEEEEEEEEEEEEEEEEEFEEEEEEEEEEEEEEEEEEEDEDEDEDEDEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEFEFEFEFEFEFF0F0F0F0F0F0F0F0F0F0F0F1F1F1F1F1F1F0F0F0F0F0F0F0F0F0F0F0F0F0F0EFEFEFEFEFEFEFEEEEEEEEEEEEEEEDEDEDEDEEEEEEEDEDEDEDEEEEEEEEEDEDEEEEEEEEEDEDEDEDEEEDEDEDEDEDEDEDEDEDECECECECECECECECECECECECECECECECECECECECECECEBEBEBEBEBEBEBEAEAEAEAEAEAEAEAEAE9E9E9EAEAEAEAEAE9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E8E8E8E8E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9EAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBECECECECECEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEAEAEAEAEAEAEAEAEAEAEAEAEAE9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7><121211111111101010100F0F0F0E0E0E0F0E0E0E0E0D0D0D0D0D0D0D0D0D0D0D0D0C0C0C0C0C0C0C0C0C0C0C0C0B0B0B0B0B0B0B0B0A0A0A0B0A0A0A0A09090A0A09090909080809090908080808080808080808080808080808090808090909090909090A0909090A0909090A0A09090A0A0A0A0A0A0A09090A0A0A09090A0A0A0909090909090909090908080808090908080809090808080909080808090908080809090908090909090909090909090909090A0A0A09090A0A0A0A0A0A0A0A0A0B0A0A0A0B0B0B0A0A0B0B0B0B0A0B0B0B0B0B0C0B0B0B0C0C0C0C0C0C0C0C0C0D0C0C0D0D0D0D0D0C0D0D0D0D0D0D0C0C0D0D0D0D0D0C0C0C0D0D0D0D0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0B0B0B0B0B0B0B0B0A0A0A0A0A0A0A0A09090909090909090908080808080808080808080808080808080808080808080808080808080708080808080808080808070707070707070707070707070707070707070707070707060606060606060606060606060606060606060606060606060606050505050505050505050505050505050505050505050505050505050505050505050505040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040403030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303><000102030405060708090A0B0C0D0E0F10111213141516161718191A1B1C1D1E1F20212223242525262728292A2B2C2D2E2F2F30313233343536373738393A3B3C3D3E3E3F4041424344444546474849494A4B4C4D4E4E4F5051525353545556575758595A5B5B5C5D5E5F5F606162626364656666676869696A6B6C6C6D6E6F6F70717172737474757677777879797A7B7C7C7D7E7E7F8080818282838485858687878889898A8B8B8C8D8D8E8E8F909091929293949495959697979899999A9A9B9C9C9D9D9E9F9FA0A0A1A2A2A3A3A4A4A5A6A6A7A7A8A8A9AAAAABABACACADADAEAFAFB0B0B1B1B2B2B3B3B4B4B5B5B6B6B7B7B8B8B9B9BABABBBBBCBCBDBDBEBEBFBFC0C0C1C1C2C2C3C3C4C4C4C5C5C6C6C7C7C8C8C8C9C9CACACBCBCCCCCCCDCDCECECECFCFD0D0D0D1D1D2D2D2D3D3D4D4D4D5D5D6D6D6D7D7D7D8D8D8D9D9DADADADBDBDBDCDCDCDDDDDDDEDEDEDFDFDFE0E0E0E1E1E1E2E2E2E2E3E3E3E4E4E4E5E5E5E5E6E6E6E7E7E7E7E8E8E8E8E9E9E9EAEAEAEAEBEBEBEBECECECECEDEDEDEDEDEEEEEEEEEFEFEFEFEFF0F0F0F0F1F1F1F1F1F2F2F2F2F2F2F3F3F3F3F3F4F4F4F4F4F4F5F5F5F5F5F5F6F6F6F6F6F6F6F7F7F7F7F7F7F7F8F8F8F8F8F8F8F8F9F9F9F9F9F9F9F9FAFAFAFAFAFAFAFAFAFAFAFBFBFBFBFBFBFBFBFBFBFBFBFBFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFD><969697979797989898989999999A9A9A9A9B9B9B9B9C9C9C9C9D9D9D9D9E9E9E9E9F9F9F9FA0A0A0A0A1A1A1A1A2A2A2A2A3A3A3A3A4A4A4A4A5A5A5A5A6A6A6A6A7A7A7A7A8A8A8A8A8A9A9A9A9AAAAAAAAAAABABABABACACACACADADADADADAEAEAEAEAEAFAFAFAFB0B0B0B0B0B1B1B1B1B1B2B2B2B2B3B3B3B3B3B4B4B4B4B4B5B5B5B5B5B6B6B6B6B6B7B7B7B7B7B7B8B8B8B8B8B9B9B9B9B9BABABABABABBBBBBBBBBBBBCBCBCBCBCBCBDBDBDBDBDBEBEBEBEBEBEBFBFBFBFBFBFC0C0C0C0C0C0C1C1C1C1C1C1C2C2C2C2C2C2C3C3C3C3C3C3C3C4C4C4C4C4C4C5C5C5C5C5C5C5C6C6C6C6C6C6C6C7C7C7C7C7C7C7C8C8C8C8C8C8C8C9C9C9C9C9C9C9CACACACACACACACACBCBCBCBCBCBCBCBCCCCCCCCCCCCCCCCCDCDCDCDCDCDCDCDCECECECECECECECECECFCFCFCFCFCFCFCFCFD0D0D0D0D0D0D0D0D0D0D1D1D1D1D1D1D1D1D1D1D2D2D2D2D2D2D2D2D2D2D2D3D3D3D3D3D3D3D3D3D3D3D4D4D4D4D4D4D4D4D4D4D4D4D4D5D5D5D5D5D5D5D5D5D5D5D5D5D6D6D6D6D6D6D6D6D6D6D6D6D6D6D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D8D8D8D8D8D8D8D8D8D8D8D8D8D8D8D8D8D8D8D9D9D9D9D9D9D9D9D9D9D9D9D9D9D9D9D9D9D9D9D9D9D9D9DADADADADADADADADADADADADADADADADADADADADADADADADADADADADADADADADADADADBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB><46464646464645454545454545454545444444444444444444444343434343434343434343424242424242424242424241414141414141414141414140404040404040404040403F3F3F3F3F3F3F3F3F3F3F3F3E3E3E3E3E3E3E3E3E3E3E3E3E3D3D3D3D3D3D3D3D3D3D3D3D3D3C3C3C3C3C3C3C3C3C3C3C3C3C3B3B3B3B3B3B3B3B3B3B3B3B3B3A3A3A3A3A3A3A3A3A3A3A3A3A3A3A393939393939393939393939393939383838383838383838383838383838373737373737373737373737373737373736363636363636363636363636363636363535353535353535353535353535353535353434343434343434343434343434343434343434333333333333333333333333333333333333333333323232323232323232323232323232323232323232323232313131313131313131313131313131313131313131313131313131303030303030303030303030303030303030303030303030303030303030302F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2E2E2E2E2E2E2E2E2E2E2E2E2E2E2E2E2E2E2E2E2E2E2E2E2E2E2E2E2E2E2E2E2E2E2E2E2E2E2E2E2E2E2E2E2E2E2E2E2E2E2E2E2E2E2E2E2E2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D>4 %_Br[0.811154 0.033875 0.92343 0.071901 0 0.588235 0.27451 2 50 100 %_BS%_0.811154 0.033875 0.92343 0.071901 0 0.588235 0.27451 2 50 100 Bs0.009491 0.717555 0.915465 0.026123 0.878431 0.364706 0.14902 2 50 80.117 %_BS%_0.009491 0.717555 0.915465 0.026123 0.878431 0.364706 0.14902 2 50 80.117 Bs0.006622 0.079103 0.906645 0.012848 0.992157 0.858824 0.176471 2 50 64 %_BS%_0.006622 0.079103 0.906645 0.012848 0.992157 0.858824 0.176471 2 50 64 Bs0.811154 0.033875 0.92343 0.071901 0 0.588235 0.27451 2 50 47 %_BS%_0.811154 0.033875 0.92343 0.071901 0 0.588235 0.27451 2 50 47 Bs0.009491 0.717555 0.915465 0.026123 0.878431 0.364706 0.14902 2 50 30 %_BS%_0.009491 0.717555 0.915465 0.026123 0.878431 0.364706 0.14902 2 50 30 Bs0.006622 0.079103 0.906645 0.012848 0.992157 0.858824 0.176471 2 50 15 %_BS%_0.006622 0.079103 0.906645 0.012848 0.992157 0.858824 0.176471 2 50 15 Bs0.811154 0.033875 0.92343 0.071901 0 0.588235 0.27451 2 28 0 %_BS%_0.811154 0.033875 0.92343 0.071901 0 0.588235 0.27451 2 28 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Purple Radial)(Purple Radial) 1 2 Bd[<00010203040505070707090A0B0B0C0D0D0E0F0F101011111213131515161616181819191A1A1A1B1B1C1D1D1E1F1F2021212222232424252526262727282829292A2B2B2C2C2D2E2E2F2F303131323233343435353536363838383839393A3A3B3C3C3D3C3D3D3E3E3F3F4040404041424243424343444445454646474749484A494A4A4C4C4D4D4D4E4E4F4F5050515253535554565656575759595A5A5B5B5B5C5C5E5D5F5F5F60606262636363646466656667676869686A6A6B6B6B6C6C6D6D6E6F6F6F71707072717173727474747576767777777878787A79797B7B7B7C7C7C7C7E7E7D7F7F7F80808082818181828282848484848585858587878686888888898989898A8A8A8A8B8B8B8C8C8D8D8D8D8F8F8E8E8E9090908F8F919191919192929292929394949494949595959595959696969696969798979797979799999999989898989A9A9A9A9A9A9A9A9A9B9B9B9B9B9B9B9B9C9B9B9B9C9C9C9C9C9D9D9D9D9D9D9D9D9D9C9D9D9D9D9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E><0000020204040506060708090A0B0B0C0D0E0E0F100F111112131415161718191A1A1C1C1C1D1D1E1F2021222324242425262728292A2B2B2B2D2D2E2F3030313233343534363738393A3A3B3B3D3E3E3E3F41414142444445454648494A4A4B4C4D4D4E5051515253545455575858595A5A5B5D5E5E5F606061626464656566676868696A6A6B6C6C6D6F6E7071717273727475757677777878797B7A7C7B7D7E7E7F7F808181838284858586868888898A8A8C8B8D8D8E8E8F91919292949495959696989899999A9A9C9C9D9D9E9EA0A0A1A1A3A3A5A4A6A6A6A8A8A9A9ABABACACACAEAEAFAFB1B1B1B2B2B4B4B6B6B6B7B7B7B9B9BABABABCBCBDBDBDBFBFBFC0C0C0C2C2C1C3C3C3C4C4C4C6C6C6C7C7C7C9C9C9CACACACACCCCCCCDCDCDCDCFCFCFCFD0D0D0D2D2D2D2D2D3D3D3D3D4D4D4D4D6D6D6D6D6D7D7D7D7D7D8D8D8D8D8D8D9D9D9D9D9D9DADADADADADADCDCDCDCDCDCDCDCDDDDDDDDDDDDDDDDDDDEDEDEDEDEDEDEDEDEDEDEDEDEDEDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDF><000001010101020202020203030303030304040404040405050505050606060606060606070707070707070707080808080808080808080909080908090809080908090809090908090809090909090909090809090908090808080808070807080708070706070607050706050505050305040403040302030203030303030303030303030304040404040404040405050506060606060606070707070707070708080808080808080808080909080909090909090909090A09090A09090A0A090A090A0A0A090A0A0A0A0A090A0A0A090A0A0A0A0A0A0B0A0A0A0A0A0A0B0A0A0A0B0B0A0A0A0A0A0A0B0A0A090A09090A0A0A0A090A090909090909090A090909080909080809080808070808070707080808060608070707070607070606060706060606050606050505050505050505040404050404040404030505050504040404040504040404040403030304040403030303030303030304040404040404040303030303030303030404040404030303030303030303030303030303030303><000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010101010101010101010101010101010101010101010101010101010101010101010101010101010101010202020202020202020202020202020202020202030303020303030303030303030303030303030303030303030303030303030304030303030404030304040404030404040403040404030304040403030304040303030403030303030403030303030303030303030303030303030303030404040404040404040504040404040404040405050504040404040404040405050505050505050505050505050505050606060606050505050505050505050505050505050505><FFFEFEFDFCFBFBFAF9F9F8F7F6F6F5F4F4F3F2F2F1F0F0EFEEEEEDECECEBEAEAE9E8E8E7E6E6E5E4E4E3E2E2E1E0E0DFDEDEDDDDDCDBDBDAD9D9D8D8D7D6D6D5D5D4D3D3D2D2D1D0D0CFCFCECDCDCCCCCBCACAC9C9C8C8C7C6C6C5C5C4C4C3C3C2C1C1C0C0BFBFBEBEBDBDBCBCBBBBBAB9B9B8B8B7B7B6B6B5B5B4B4B3B3B2B2B1B1B0B0AFAFAEAEADADADACACABABAAAAA9A9A8A8A7A7A7A6A6A5A5A4A4A3A3A3A2A2A1A1A0A0A09F9F9E9E9D9D9D9C9C9B9B9B9A9A9999999898979797969696959594949493939392929291919090908F8F8F8E8E8E8D8D8D8C8C8C8B8B8B8A8A8A8A89898988888887878786868686858585848484848383838382828282818181808080807F7F7F7F7F7E7E7E7E7D7D7D7D7C7C7C7C7C7B7B7B7B7B7A7A7A7A7A797979797978787878787877777777777776767676767675757575757575747474747474747473737373737373737372727272727272727272727271717171717171717171717171717170707070707070707070707070707070707070707070><FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDDDCDBDAD9D8D7D6D5D4D4D3D2D1D0CFCECDCCCCCBCAC9C8C7C6C6C5C4C3C2C1C1C0BFBEBDBCBCBBBAB9B8B8B7B6B5B4B4B3B2B1B0B0AFAEADACACABAAA9A9A8A7A6A6A5A4A3A3A2A1A0A09F9E9E9D9C9B9B9A9999989796969594949392929190908F8E8E8D8C8C8B8A8A898888878686858484838382818180807F7E7E7D7D7C7B7B7A7A79787877777676757474737372727171706F6F6E6E6D6D6C6C6B6B6A6A6969686867676666656564646363626261616060605F5F5E5E5D5D5C5C5C5B5B5A5A59595958585757565656555555545453535352525151515050504F4F4F4E4E4E4D4D4D4C4C4C4B4B4B4A4A4A4949494848484847474746464646454545454444444343434343424242424141414140404040403F3F3F3F3F3E3E3E3E3E3E3D3D3D3D3D3D3C3C3C3C3C3C3B3B3B3B3B3B3B3B3A3A3A3A3A3A3A3A3A3939393939393939393939393939383838383838383838383838383838383838><FFFEFEFDFDFCFBFBFAF9F9F8F8F7F6F6F5F5F4F3F3F2F2F1F0F0EFEFEEEEEDECECEBEBEAEAE9E8E8E7E7E6E6E5E4E4E3E3E2E2E1E1E0E0DFDEDEDDDDDCDCDBDBDADAD9D9D8D8D7D7D6D6D5D4D4D3D3D2D2D1D1D0D0CFCFCECECECDCDCCCCCBCBCACAC9C9C8C8C7C7C6C6C5C5C5C4C4C3C3C2C2C1C1C0C0C0BFBFBEBEBDBDBDBCBCBBBBBABABAB9B9B8B8B7B7B7B6B6B5B5B5B4B4B3B3B3B2B2B1B1B1B0B0B0AFAFAEAEAEADADADACACABABABAAAAAAA9A9A9A8A8A8A7A7A7A6A6A6A5A5A5A4A4A4A3A3A3A2A2A2A1A1A1A0A0A09F9F9F9F9E9E9E9D9D9D9C9C9C9C9B9B9B9A9A9A9A9999999998989898979797979696969595959595949494949393939392929292929191919190909090908F8F8F8F8F8E8E8E8E8E8D8D8D8D8D8D8C8C8C8C8C8B8B8B8B8B8B8A8A8A8A8A8A8A89898989898989888888888888888787878787878787878686868686868686868685858585858585858585858584848484848484848484848484848484848383838383838383838383838383838383838383838383>4 %_Br[0 0 0 0 1 1 1 2 30 63.1579 %_BS%_0 0 0 0 1 1 1 2 30 63.1579 Bs0.618585 0.875364 0.013275 0.020569 0.439216 0.219608 0.513726 2 50 100 %_BS%_0.618585 0.875364 0.013275 0.020569 0.439216 0.219608 0.513726 2 50 100 BsBD%AI5_EndGradient%AI5_BeginGradient: (Super Soft Black Vignette)(Super Soft Black Vignette) 1 3 Bd[0.7649190.7039440.65890.7730980.0235290.0274510.0235294 %_Br0.7649190.7039440.65890.7730980.0235290.0274510.0235294 %_Br[0.764919 0.703944 0.6589 0.773098 0.023529 0.027451 0.023529 2 56.0729 57.4443 %_BS%_0.764919 0.703944 0.6589 0.773098 0.023529 0.027451 0.023529 2 56.0729 57.4443 Bs0.764919 0.703944 0.6589 0.773098 0.023529 0.027451 0.023529 2 31.8603 79.7713 %_BS%_0.764919 0.703944 0.6589 0.773098 0.023529 0.027451 0.023529 2 31.8603 79.7713 Bs0.764919 0.703944 0.6589 0.773098 0.023529 0.027451 0.023529 2 50 100 %_BS%_0.764919 0.703944 0.6589 0.773098 0.023529 0.027451 0.023529 2 50 100 BsBD%AI5_EndGradient%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI3_BeginPattern: (Laguna)(Laguna) 0 3.1914 84.1563 84.791 [%AI3_Tile(0 O 0 R 0.012146 0.934478 0.904173 0.033722 0.847059 0.121569 0.152941 Xa 0.012146 0.934478 0.904173 0.033722 0.847059 0.121569 0.152941 XA) @(%AI6_BeginPatternLayer0 J 0 j 1 w 10 M []0 d0 XR42.0781 30.3906 m12.2227 12.8779 9.0488 12.4082 V7.2871 14.1709 0 30.3906 Y13.1641 20.5186 29.1484 23.3389 42.0781 30.3906 Cf42.0781 57.5908 m12.2227 40.0781 9.0488 39.6094 V7.2871 41.3711 0 57.5908 Y13.1641 47.7178 29.1484 50.5391 42.0781 57.5908 Cf42.0781 84.791 m12.2227 67.2773 9.0488 66.8096 V7.2871 68.5703 0 84.791 Y13.1641 74.918 29.1484 77.7402 42.0781 84.791 Cf%AI6_EndPatternLayer) &(0 O 0 R 0.618585 0.875364 0.013275 0.020569 0.439216 0.219608 0.513726 Xa 0.618585 0.875364 0.013275 0.020569 0.439216 0.219608 0.513726 XA) @(%AI6_BeginPatternLayer0 J 0 j 1 w 10 M []0 d0 XR84.1563 30.3906 m54.3008 12.8779 51.127 12.4082 V49.3652 14.1709 42.0781 30.3906 Y55.2422 20.5186 71.2266 23.3389 84.1563 30.3906 Cf84.1563 57.5908 m54.3008 40.0781 51.127 39.6094 V49.3652 41.3711 42.0781 57.5908 Y55.2422 47.7178 71.2266 50.5391 84.1563 57.5908 Cf84.1563 84.791 m54.3008 67.2773 51.127 66.8096 V49.3652 68.5703 42.0781 84.791 Y55.2422 74.918 71.2266 77.7402 84.1563 84.791 Cf%AI6_EndPatternLayer) &(0 O 0 R 0.811154 0.033875 0.92343 0.071901 0 0.588235 0.27451 Xa 0.811154 0.033875 0.92343 0.071901 0 0.588235 0.27451 XA) @(%AI6_BeginPatternLayer0 J 0 j 1 w 10 M []0 d0 XR21.0391 33.582 m19.2773 33.582 17.8477 32.1523 17.8477 30.3906 c17.8477 28.6289 19.2773 27.2002 21.0391 27.2002 c22.8008 27.2002 24.2285 28.6289 24.2285 30.3906 c24.2285 32.1523 22.8008 33.582 21.0391 33.582 cf21.0391 6.3818 m19.2773 6.3818 17.8477 4.9531 17.8477 3.1914 c17.8477 1.4287 19.2773 0 21.0391 0 c22.8008 0 24.2285 1.4287 24.2285 3.1914 c24.2285 4.9531 22.8008 6.3818 21.0391 6.3818 cf21.0391 60.7822 m19.2773 60.7822 17.8477 59.3525 17.8477 57.5908 c17.8477 55.8291 19.2773 54.3994 21.0391 54.3994 c22.8008 54.3994 24.2285 55.8291 24.2285 57.5908 c24.2285 59.3525 22.8008 60.7822 21.0391 60.7822 cf21.0391 87.9824 m19.2773 87.9824 17.8477 86.5547 17.8477 84.791 c17.8477 83.0283 19.2773 81.5996 21.0391 81.5996 c22.8008 81.5996 24.2285 83.0283 24.2285 84.791 c24.2285 86.5547 22.8008 87.9824 21.0391 87.9824 cf63.1172 33.582 m61.3555 33.582 59.9258 32.1523 59.9258 30.3906 c59.9258 28.6289 61.3555 27.2002 63.1172 27.2002 c64.8789 27.2002 66.3066 28.6289 66.3066 30.3906 c66.3066 32.1523 64.8789 33.582 63.1172 33.582 cf63.1172 6.3818 m61.3555 6.3818 59.9258 4.9531 59.9258 3.1914 c59.9258 1.4287 61.3555 0 63.1172 0 c64.8789 0 66.3066 1.4287 66.3066 3.1914 c66.3066 4.9531 64.8789 6.3818 63.1172 6.3818 cf63.1172 60.7822 m61.3555 60.7822 59.9258 59.3525 59.9258 57.5908 c59.9258 55.8291 61.3555 54.3994 63.1172 54.3994 c64.8789 54.3994 66.3066 55.8291 66.3066 57.5908 c66.3066 59.3525 64.8789 60.7822 63.1172 60.7822 cf63.1172 87.9824 m61.3555 87.9824 59.9258 86.5547 59.9258 84.791 c59.9258 83.0283 61.3555 81.5996 63.1172 81.5996 c64.8789 81.5996 66.3066 83.0283 66.3066 84.791 c66.3066 86.5547 64.8789 87.9824 63.1172 87.9824 cf%AI6_EndPatternLayer) &(0 O 0 R 0.618585 0.875364 0.013275 0.020569 0.439216 0.219608 0.513726 Xa 0.618585 0.875364 0.013275 0.020569 0.439216 0.219608 0.513726 XA) @(%AI6_BeginPatternLayer0 J 0 j 1 w 10 M []0 d0 XR0 3.1914 m29.8535 20.7041 33.0273 21.1738 V34.79 19.4111 42.0781 3.1914 Y28.9141 13.0645 12.9277 10.2422 0 3.1914 Cf0 30.3906 m29.8535 47.9033 33.0273 48.374 V34.79 46.6104 42.0781 30.3906 Y28.9141 40.2646 12.9277 37.4434 0 30.3906 Cf0 57.5908 m29.8535 75.1035 33.0273 75.5752 V34.79 73.8105 42.0781 57.5908 Y28.9141 67.4648 12.9277 64.6436 0 57.5908 Cf%AI6_EndPatternLayer) &(0 O 0 R 0.012146 0.934478 0.904173 0.033722 0.847059 0.121569 0.152941 Xa 0.012146 0.934478 0.904173 0.033722 0.847059 0.121569 0.152941 XA) @(%AI6_BeginPatternLayer0 J 0 j 1 w 10 M []0 d0 XR42.0781 3.1914 m71.9316 20.7041 75.1055 21.1738 V76.8691 19.4111 84.1563 3.1914 Y70.9922 13.0645 55.0059 10.2422 42.0781 3.1914 Cf42.0781 30.3906 m71.9316 47.9033 75.1055 48.374 V76.8691 46.6104 84.1563 30.3906 Y70.9922 40.2646 55.0059 37.4434 42.0781 30.3906 Cf42.0781 57.5908 m71.9316 75.1035 75.1055 75.5752 V76.8691 73.8105 84.1563 57.5908 Y70.9922 67.4648 55.0059 64.6436 42.0781 57.5908 Cf%AI6_EndPatternLayer) &] E%AI3_EndPattern%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginBrushPattern(New Pattern 1)0 Au0 J 0 j 1 w 4 M []0 d0 XR-7326 7539 m-7326 7480.0254 L-7310.4902 7480.0254 L-7310.4902 7539 L-7326 7539 Ln0 O0.789425 0.732296 0.680781 0.689296 0.070588 0.070588 0.070588 Xa10 M-7326 7490.0581 m-7326 7489.5742 L-7310.4878 7489.5742 L-7310.4878 7490.0581 L-7326 7490.0581 Lf-7326 7507.3838 m-7326 7506.8965 L-7310.4878 7506.8965 L-7310.4878 7507.3838 L-7326 7507.3838 Lf-7325.9995 7492.3677 m-7325.9995 7491.6494 L-7310.4878 7491.6494 L-7310.4878 7492.3677 L-7325.9995 7492.3677 Lf-7325.9995 7502.6328 m-7325.9995 7501.9116 L-7310.4878 7501.9116 L-7310.4878 7502.6328 L-7325.9995 7502.6328 Lf-7325.9995 7500.4951 m-7325.9995 7499.4141 L-7310.4878 7499.4141 L-7310.4878 7500.4951 L-7325.9995 7500.4951 Lf-7325.9995 7494.9395 m-7325.9995 7493.8589 L-7310.4878 7493.8589 L-7310.4878 7494.9395 L-7325.9995 7494.9395 Lf-7325.9995 7497.9854 m-7325.9995 7496.334 L-7310.4878 7496.334 L-7310.4878 7497.9854 L-7325.9995 7497.9854 Lf*u1 D-7310.4888 7506.1455 m-7325.9995 7506.1455 L-7325.9995 7505.6816 L-7325.6514 7505.6816 L-7325.6514 7504.4844 L-7325.9995 7504.4844 L-7325.9995 7504.0215 L-7310.4888 7504.0215 L-7310.4888 7504.4844 L-7310.8408 7504.4844 L-7310.8408 7505.6846 L-7310.4888 7505.6846 L-7310.4888 7506.1455 Lf0 D-7322.1255 7505.6846 m-7321.4199 7505.6846 L-7321.4199 7504.4844 L-7322.1255 7504.4844 L-7322.1255 7505.6846 Lf-7322.8306 7504.4844 m-7323.5361 7504.4844 L-7323.5361 7505.6846 L-7322.8306 7505.6846 L-7322.8306 7504.4844 Lf-7320.7144 7505.6846 m-7320.0098 7505.6846 L-7320.0098 7504.4844 L-7320.7144 7504.4844 L-7320.7144 7505.6846 Lf-7319.3042 7505.6846 m-7318.5986 7505.6846 L-7318.5986 7504.4844 L-7319.3042 7504.4844 L-7319.3042 7505.6846 Lf-7317.8936 7505.6846 m-7317.1885 7505.6846 L-7317.1885 7504.4844 L-7317.8936 7504.4844 L-7317.8936 7505.6846 Lf-7316.4834 7505.6846 m-7315.7778 7505.6846 L-7315.7778 7504.4844 L-7316.4834 7504.4844 L-7316.4834 7505.6846 Lf-7315.0718 7505.6846 m-7314.3672 7505.6846 L-7314.3672 7504.4844 L-7315.0718 7504.4844 L-7315.0718 7505.6846 Lf-7313.6616 7505.6846 m-7312.9575 7505.6846 L-7312.9575 7504.4844 L-7313.6616 7504.4844 L-7313.6616 7505.6846 Lf-7312.2515 7505.6846 m-7311.5454 7505.6846 L-7311.5454 7504.4844 L-7312.2515 7504.4844 L-7312.2515 7505.6846 Lf-7324.9463 7505.6846 m-7324.2407 7505.6846 L-7324.2407 7504.4844 L-7324.9463 7504.4844 L-7324.9463 7505.6846 Lf*UU%AI8_EndBrushPattern%AI8_BeginBrushPattern(New Pattern 2)0 Au0 J 0 j 1 w 4 M []0 d0 XR-7326 7538.998 m-7326 7480.0225 L-7267.0254 7480.0225 L-7267.0254 7538.998 L-7326 7538.998 Ln*u1 D0 O0.789425 0.732296 0.680781 0.689296 0.070588 0.070588 0.070588 Xa10 M-7299.4902 7498.4453 m-7297.9678 7499.9678 -7298.5166 7502.9829 -7300.7153 7505.1836 c-7302.9146 7507.3804 -7305.9302 7507.9292 -7307.4526 7506.4077 c-7308.9751 7504.8853 -7308.4263 7501.8677 -7306.2271 7499.6709 c-7304.0288 7497.4717 -7301.0127 7496.9238 -7299.4902 7498.4453 cf0 D-7300.1519 7499.0781 m-7301.5728 7497.6582 -7304.2241 7498.0054 -7306.0728 7499.8545 c-7307.9214 7501.7031 -7308.2695 7504.3545 -7306.8486 7505.7749 c-7305.4282 7507.1948 -7302.7769 7506.8486 -7300.9282 7505 c-7299.0786 7503.1504 -7298.7314 7500.5 -7300.1519 7499.0781 cf*U-7317.5327 7489.2607 m-7316.7969 7489.1309 l-7316.71 7488.4385 l-7311.9458 7493.9814 l-7317.5327 7489.2607 lf-7306.9409 7486.3145 m-7307.1235 7484.7261 L-7306.7002 7484.4512 -7306.3184 7484.1309 -7305.9346 7483.8145 C-7305.6841 7486.9189 L-7305.3535 7486.9453 L-7305.4678 7483.4395 L-7305.0503 7483.1157 -7304.6089 7482.8213 -7304.0913 7482.6152 C-7304.1235 7487.7261 L-7303.9063 7487.7734 L-7303.5938 7482.4517 L-7303.2007 7482.3521 -7302.7632 7482.3008 -7302.2642 7482.3213 C-7303.0376 7491.4463 L-7301.7666 7482.3589 L-7301.3359 7482.4063 -7300.96 7482.4741 -7300.6289 7482.5625 C-7301.4551 7489.334 L-7301.2998 7489.2109 L-7300.1465 7482.7148 L-7299.7471 7482.8623 -7299.4238 7483.0444 -7299.1528 7483.25 C-7299.7334 7488.0757 L-7299.4688 7487.9414 L-7298.7114 7483.6421 L-7298.2256 7484.1494 -7297.9194 7484.7344 -7297.5127 7485.2822 C-7298.0713 7487.3496 L-7297.6001 7487.1709 L-7297.1338 7485.7383 L-7296.8096 7486.082 -7296.4063 7486.3945 -7295.8394 7486.6406 c-7295.8506 7486.6357 -7294.7393 7486.6821 -7294.7466 7486.6533 c-7294.7959 7486.4375 -7295.6655 7486.2998 -7295.6455 7486.3101 c-7298.2974 7484.8965 -7297.3232 7482.3301 -7301.8735 7481.8735 c-7305.4072 7481.5176 -7306.2515 7484.75 -7309.0962 7485.0615 c-7309.1152 7485.0625 -7309.7632 7485.3174 -7309.8442 7485.4502 C-7309.8486 7485.6255 -7309.4595 7485.5181 -7309.2417 7485.4766 c-7308.6001 7485.3477 -7308.0498 7485.2397 -7307.5728 7484.9912 C-7307.4023 7486.1909 L-7306.9409 7486.3145 Lf-7319.6626 7498.9463 m-7321.2495 7498.7637 L-7321.5254 7499.1865 -7321.8462 7499.5693 -7322.1626 7499.9517 C-7319.0576 7500.2031 L-7319.0322 7500.5352 L-7322.5376 7500.4189 L-7322.8608 7500.8364 -7323.1558 7501.2783 -7323.3618 7501.7959 C-7318.2505 7501.7637 L-7318.2031 7501.9814 L-7323.5249 7502.2935 L-7323.6265 7502.6865 -7323.6758 7503.1255 -7323.6558 7503.623 C-7314.5298 7502.8496 L-7323.6177 7504.1196 L-7323.5713 7504.5493 -7323.5024 7504.9277 -7323.4146 7505.2573 C-7316.6426 7504.4316 L-7316.7656 7504.5869 L-7323.2622 7505.7397 L-7323.1138 7506.1406 -7322.9312 7506.4629 -7322.7271 7506.7344 C-7317.9014 7506.1533 L-7318.0352 7506.418 L-7322.3335 7507.1768 L-7321.8271 7507.6621 -7321.2417 7507.9688 -7320.6943 7508.375 C-7318.6274 7507.8145 L-7318.8066 7508.2871 L-7320.2383 7508.752 L-7319.8945 7509.0757 -7319.5825 7509.4814 -7319.3359 7510.0479 c-7319.3408 7510.0352 -7319.2935 7511.1484 -7319.3242 7511.1416 c-7319.54 7511.0908 -7319.6768 7510.2222 -7319.6675 7510.2412 c-7321.0806 7507.5894 -7323.6475 7508.5645 -7324.1045 7504.0127 c-7324.4595 7500.4805 -7321.2271 7499.6367 -7320.9165 7496.791 c-7320.9136 7496.7725 -7320.6602 7496.1255 -7320.5273 7496.043 C-7320.3535 7496.0381 -7320.4575 7496.4277 -7320.5015 7496.6455 c-7320.6294 7497.2871 -7320.7368 7497.8364 -7320.9858 7498.3145 C-7319.7842 7498.4854 L-7319.6626 7498.9463 Lf-7290.0127 7497.2285 m-7285.2495 7498.6353 -7283.9502 7500.9199 -7283.9746 7502.5654 C-7283.5366 7499.459 -7281.6558 7501.8652 -7281.1313 7503.0029 C-7282.0498 7499.4165 -7279.4463 7502.5439 -7279.2715 7502.8496 C-7280.2593 7499.4063 -7287.3955 7496.9404 -7290.0127 7497.2285 Cf-7295.9775 7496.2197 m-7299.3242 7490.1733 -7296.4233 7488.5703 -7295.7354 7488.3774 c-7295.9233 7488.4287 -7296.3135 7489.2949 -7296.2026 7489.6367 C-7295.9482 7489.0928 -7295.4111 7488.8188 -7294.8994 7488.6094 C-7296.1626 7489.6094 -7296.6943 7492.4111 -7295.9082 7495.9512 c-7295.9775 7496.2197 lf-7298.2222 7496.5254 m-7300.6035 7494.1016 -7302.0474 7493.2773 -7300.1035 7490.6685 c-7300.2202 7490.8262 -7300.3838 7491.7168 -7300.1758 7492.0117 C-7300.0942 7491.418 -7299.6626 7490.998 -7299.2358 7490.6455 C-7300.9395 7494.0732 -7298.2222 7496.5254 yf-7290.6577 7495.4199 m-7290.9897 7493.5615 -7289.4922 7492.4688 -7287.8662 7491.8496 C-7288.4194 7491.8662 -7289.0176 7491.9302 -7289.4482 7492.3496 C-7289.4302 7491.9893 -7288.7598 7491.3184 -7288.5654 7491.3359 c-7289.2778 7491.2744 -7291.4951 7490.8447 -7290.8408 7495.6191 c-7290.6577 7495.4199 lf-7287.5576 7496.1133 m-7287.1538 7494.7261 -7284.9502 7494.459 V-7285.5342 7494.2871 -7286.2314 7494.3662 -7286.6626 7494.7856 C-7286.6455 7494.4253 -7285.8408 7493.7173 -7285.6479 7493.7568 c-7287.3921 7493.4141 -7287.6782 7495.9072 y-7287.5576 7496.1133 lf-7284.1152 7497.3213 m-7283.8408 7496.627 -7283.0942 7496.1196 -7282.2646 7496 C-7282.6475 7495.8975 -7283.0854 7495.9868 -7283.4297 7496.3237 C-7283.4175 7496.0352 -7282.7744 7495.4863 -7282.6182 7495.5024 c-7284.2729 7495.3496 -7284.1152 7497.3213 Yf-7293.5562 7495.4629 m-7293.6504 7492.1309 -7292.4175 7490.4541 -7290.9761 7489.6509 C-7291.5264 7489.7148 -7292.1162 7489.8271 -7292.5103 7490.2783 C-7292.5249 7489.9189 -7291.9087 7489.1948 -7291.7134 7489.1973 c-7292.4287 7489.1943 -7295.0034 7489.0894 -7293.7866 7495.7109 c-7293.5562 7495.4629 lf-7308.7944 7516.0127 m-7307.3882 7520.7749 -7305.1006 7522.0757 -7303.4575 7522.0518 C-7306.5635 7522.4893 -7304.1567 7524.3701 -7303.0195 7524.8945 C-7306.6074 7523.9766 -7303.4795 7526.5791 -7303.1729 7526.7549 C-7306.6162 7525.7676 -7309.0825 7518.6309 -7308.7944 7516.0127 Cf-7309.8022 7510.0488 m-7315.8481 7506.6997 -7317.4521 7509.6021 -7317.6465 7510.291 c-7317.5938 7510.1021 -7316.7295 7509.7119 -7316.3857 7509.8237 C-7316.9297 7510.0781 -7317.2017 7510.6152 -7317.4126 7511.127 C-7316.4126 7509.8623 -7313.6113 7509.334 -7310.0703 7510.1182 c-7309.8022 7510.0488 lf-7309.4966 7507.8037 m-7311.9214 7505.4229 -7312.7446 7503.9805 -7315.3535 7505.9229 c-7315.1968 7505.8062 -7314.3057 7505.6421 -7314.0112 7505.8496 C-7314.6064 7505.9302 -7315.0239 7506.3628 -7315.3774 7506.79 C-7311.9487 7505.0879 -7309.4966 7507.8037 yf-7310.6025 7515.3677 m-7312.4614 7515.0352 -7313.5537 7516.5342 -7314.1729 7518.1597 C-7314.1558 7517.6069 -7314.0918 7517.0093 -7313.6719 7516.5791 C-7314.0327 7516.5957 -7314.7041 7517.2656 -7314.6865 7517.4604 c-7314.7485 7516.75 -7315.1777 7514.5313 -7310.4038 7515.1846 c-7310.6025 7515.3677 lf-7309.9087 7518.4688 m-7311.2959 7518.8735 -7311.5649 7521.0757 V-7311.7354 7520.4917 -7311.6558 7519.7949 -7311.2368 7519.3628 C-7311.5967 7519.3804 -7312.3042 7520.1865 -7312.2666 7520.3789 c-7312.6079 7518.6353 -7310.1152 7518.3477 y-7309.9087 7518.4688 lf-7308.7007 7521.9111 m-7309.3955 7522.1846 -7309.9009 7522.9302 -7310.0234 7523.7612 C-7310.1265 7523.3789 -7310.0337 7522.9404 -7309.6982 7522.5967 C-7309.9873 7522.6104 -7310.5361 7523.2524 -7310.5215 7523.4077 c-7310.6729 7521.752 -7308.7007 7521.9111 Yf-7310.5591 7512.4688 m-7313.8921 7512.3774 -7315.5679 7513.6094 -7316.3696 7515.0508 C-7316.3081 7514.5024 -7316.1953 7513.9102 -7315.7422 7513.5142 C-7316.1035 7513.5029 -7316.8262 7514.1157 -7316.8257 7514.3135 c-7316.8286 7513.5967 -7316.9321 7511.0229 -7310.3115 7512.2397 c-7310.5591 7512.4688 lfuu-7320.0234 7488.7095 m-7320.2856 7488.1948 -7320.0479 7487.6685 -7318.2905 7487.6504 C-7319.0322 7486.9077 L-7320.9927 7486.9941 -7321.3423 7488.1772 -7321.1665 7488.7573 c-7320.9736 7489.3901 -7320.5488 7489.9023 -7320.2085 7490.25 C-7321.2031 7490.6108 -7321.2505 7491.3916 -7321.0479 7491.79 c-7320.7729 7492.334 -7320.2998 7492.752 -7319.9487 7493.0176 C-7320.9448 7493.3774 -7320.8623 7494.1133 -7320.6074 7494.4575 c-7320.2856 7494.8901 -7319.8174 7495.2031 -7319.4751 7495.4023 C-7320.4585 7495.8301 -7320.3022 7496.5229 -7320.0239 7496.8149 c-7319.6929 7497.166 -7319.2466 7497.3916 -7318.9199 7497.5317 C-7319.7695 7498.0225 -7319.5537 7498.6318 -7319.2715 7498.8623 c-7318.9458 7499.1318 -7318.5342 7499.2837 -7318.23 7499.3774 C-7318.9395 7499.9077 -7318.6802 7500.4287 -7318.4014 7500.6069 c-7318.0698 7500.8174 -7317.6714 7500.9077 -7317.3857 7500.9541 C-7317.9673 7501.5093 -7317.6768 7501.9478 -7317.4097 7502.0757 c-7316.9326 7502.3037 -7316.3511 7502.2764 -7316.1768 7502.2813 c-7315.6343 7502.2959 -7314.8838 7502.1255 -7314.4272 7502.0703 c-7313.3442 7501.9429 -7309.5718 7501.2749 -7307.9023 7501.4385 C-7308.1704 7501.2285 -7308.1714 7501.2285 v-7310.1304 7501.0415 -7313.0479 7501.4678 -7314.1294 7501.5957 c-7314.9839 7501.6943 -7316.1182 7501.9951 -7316.9951 7501.7295 c-7317.2593 7501.6494 -7317.3696 7501.4453 -7316.8906 7501.0215 C-7316.3135 7501.0732 -7315.5737 7501.0024 -7315.1118 7501.0039 c-7313.9009 7501.0093 -7309.6504 7500.7832 -7307.8311 7501.1895 C-7308.0986 7500.9199 l-7310.2344 7500.4492 -7313.5098 7500.5254 -7314.7202 7500.5181 c-7315.6758 7500.5132 -7316.9673 7500.6909 -7317.8984 7500.2783 c-7318.1777 7500.1558 -7318.2729 7499.918 -7317.6953 7499.5166 C-7317.0615 7499.6597 -7316.2153 7499.6816 -7315.6968 7499.7471 c-7314.3623 7499.918 -7309.6431 7500.2437 -7307.6929 7500.9375 C-7307.9502 7500.6064 -7307.9512 7500.6064 v-7310.2422 7499.7964 -7313.8647 7499.4375 -7315.1992 7499.2656 c-7316.2529 7499.1309 -7317.7007 7499.1504 -7318.6719 7498.5703 c-7318.9624 7498.3975 -7319.0352 7498.123 -7318.3481 7497.7573 C-7317.6704 7497.998 -7316.7578 7498.1328 -7316.2026 7498.2749 c-7314.7534 7498.6445 -7309.5938 7499.6421 -7307.5361 7500.6685 C-7307.7754 7500.2695 -7307.7759 7500.2695 v-7310.1934 7499.0664 -7314.1392 7498.1797 -7315.5879 7497.8101 c-7316.7314 7497.5181 -7318.3311 7497.3452 -7319.3242 7496.5718 c-7319.6182 7496.3452 -7319.6626 7496.0352 -7318.8745 7495.73 C-7318.1606 7496.082 -7317.1802 7496.3535 -7316.5889 7496.5845 c-7315.0415 7497.1865 -7309.4863 7498.9863 -7307.3564 7500.3984 C-7307.5654 7499.9253 -7307.5674 7499.9248 v-7310.0698 7498.2695 -7314.3018 7496.7573 -7315.8486 7496.1543 c-7317.0703 7495.6768 -7318.8115 7495.2695 -7319.8018 7494.2837 c-7320.0786 7494.0093 -7320.1006 7493.6846 -7319.3384 7493.4551 C-7318.5942 7493.9404 -7317.5234 7494.3584 -7316.8926 7494.6895 c-7315.2446 7495.5518 -7309.2441 7498.2246 -7307.1055 7500.0957 C-7307.2407 7499.5181 -7307.2417 7499.5181 v-7309.7559 7497.3276 -7314.2954 7495.127 -7315.9438 7494.2607 c-7317.2456 7493.5791 -7319.1602 7492.9248 -7320.0815 7491.6709 c-7320.3135 7491.3555 -7320.2974 7491.0127 -7319.6118 7490.8101 C-7318.8594 7491.4668 -7317.6641 7492.0757 -7316.9888 7492.5317 c-7315.27 7493.6943 -7308.9126 7497.3774 -7306.8442 7499.7637 C-7307.1377 7498.9902 -7307.1382 7498.9893 v-7309.5718 7496.1934 -7314.0825 7493.2837 -7315.8018 7492.1221 c-7317.1582 7491.2031 -7319.2295 7490.2607 -7320.0234 7488.7095 cfUu-7317.2329 7485.918 m-7317.7446 7485.6543 -7318.2715 7485.8926 -7318.2905 7487.6504 C-7319.0313 7486.9077 L-7318.9473 7484.9468 -7317.7622 7484.5967 -7317.1826 7484.7749 c-7316.5503 7484.9653 -7316.0386 7485.3916 -7315.6919 7485.7324 C-7315.3306 7484.7373 -7314.5498 7484.6904 -7314.1504 7484.8901 c-7313.6064 7485.1685 -7313.1895 7485.6406 -7312.9224 7485.9917 C-7312.5649 7484.9951 -7311.8281 7485.0781 -7311.4834 7485.334 c-7311.0498 7485.6543 -7310.7368 7486.123 -7310.5376 7486.4648 C-7310.1113 7485.4824 -7309.4175 7485.6382 -7309.1255 7485.918 c-7308.7759 7486.2485 -7308.5488 7486.6943 -7308.4082 7487.0215 C-7307.9185 7486.1719 -7307.3086 7486.3877 -7307.0767 7486.6685 c-7306.8086 7486.9951 -7306.6553 7487.4053 -7306.5649 7487.7109 C-7306.0327 7487.0024 -7305.5103 7487.2607 -7305.3345 7487.5391 c-7305.1235 7487.8701 -7305.0322 7488.2695 -7304.9858 7488.5532 C-7304.4312 7487.9727 -7303.9912 7488.2637 -7303.8638 7488.5313 c-7303.6367 7489.0078 -7303.6655 7489.5894 -7303.6592 7489.7637 c-7303.6431 7490.3062 -7303.8159 7491.0566 -7303.8696 7491.5132 c-7303.9966 7492.5957 -7304.6655 7496.3677 -7304.5034 7498.0381 C-7304.7129 7497.7695 l-7304.8999 7495.8101 -7304.4727 7492.8926 -7304.3457 7491.8101 c-7304.2446 7490.9575 -7303.9458 7489.8223 -7304.2114 7488.9453 c-7304.2915 7488.6816 -7304.4946 7488.5703 -7304.9199 7489.0508 C-7304.8682 7489.6279 -7304.9395 7490.3662 -7304.9375 7490.8271 c-7304.9302 7492.04 -7305.1567 7496.29 -7304.7524 7498.1094 C-7305.0195 7497.8428 -7305.0195 7497.8413 v-7305.4922 7495.7061 -7305.4155 7492.4316 -7305.4214 7491.2207 c-7305.4272 7490.2646 -7305.25 7488.9736 -7305.6616 7488.043 c-7305.7847 7487.7637 -7306.0234 7487.6685 -7306.4238 7488.2461 C-7306.2798 7488.8789 -7306.2593 7489.7246 -7306.1929 7490.2437 c-7306.0225 7491.5781 -7305.6958 7496.2959 -7305.0034 7498.2485 C-7305.3345 7497.9902 -7305.3354 7497.9893 v-7306.1455 7495.6982 -7306.5039 7492.0757 -7306.6753 7490.7397 c-7306.8096 7489.6885 -7306.79 7488.2397 -7307.3706 7487.2695 c-7307.5435 7486.9785 -7307.8174 7486.9053 -7308.1816 7487.5933 C-7307.9434 7488.2695 -7307.8081 7489.1836 -7307.6665 7489.7383 c-7307.2969 7491.1865 -7306.2993 7496.3477 -7305.27 7498.4053 C-7305.6704 7498.166 -7305.6714 7498.166 v-7306.8745 7495.7471 -7307.7607 7491.8008 -7308.1294 7490.3535 c-7308.4214 7489.2095 -7308.5962 7487.6094 -7309.3662 7486.6172 c-7309.5962 7486.3232 -7309.9058 7486.2783 -7310.2114 7487.0664 C-7309.8594 7487.7788 -7309.5874 7488.7612 -7309.3574 7489.3521 c-7308.7534 7490.8984 -7306.9546 7496.4541 -7305.5415 7498.5854 C-7306.0161 7498.375 l-7307.6704 7495.8711 -7309.1826 7491.6382 -7309.7866 7490.0918 c-7310.2622 7488.8701 -7310.6714 7487.1279 -7311.6558 7486.1382 c-7311.9312 7485.8623 -7312.2559 7485.8398 -7312.4858 7486.6016 C-7312.0015 7487.3452 -7311.5825 7488.418 -7311.2529 7489.0469 c-7310.3887 7490.6943 -7307.7158 7496.6973 -7305.8447 7498.8359 C-7306.4209 7498.6992 -7306.4214 7498.6992 v-7308.6128 7496.1846 -7310.8145 7491.6455 -7311.6782 7489.9951 c-7312.3599 7488.6943 -7313.0161 7486.7788 -7314.2695 7485.8589 c-7314.5854 7485.627 -7314.9272 7485.6421 -7315.1313 7486.3276 C-7314.4736 7487.082 -7313.8638 7488.2764 -7313.4072 7488.9512 c-7312.2441 7490.6709 -7308.5635 7497.0269 -7306.1768 7499.0967 C-7306.9502 7498.8037 -7306.9512 7498.8013 v-7309.7471 7496.3677 -7312.6558 7491.8584 -7313.8184 7490.1382 c-7314.7368 7488.7822 -7315.6802 7486.7119 -7317.2329 7485.918 cfUU*u1 D-7267.0264 7490.0566 m-7273.5264 7490.0566 L-7273.1826 7490.4189 -7272.7622 7490.7573 -7272.1777 7491.0332 c-7272.1978 7491.0229 -7271.3994 7491.1558 -7271.2622 7491.3325 c-7271.0967 7491.5415 -7272.7886 7491.582 -7273.6929 7490.5342 C-7274.3486 7493.7095 L-7274.8135 7494.0269 L-7274.0918 7490.0972 L-7274.5249 7489.5703 -7274.8594 7489.0024 -7275.3687 7488.5181 C-7276.0337 7494.6284 L-7276.29 7494.7749 L-7275.8286 7488.1475 L-7276.1104 7487.9575 -7276.4424 7487.791 -7276.8486 7487.6621 C-7277.7119 7495.0225 L-7277.9482 7495.0078 L-7277.3369 7487.5317 L-7277.6729 7487.4604 -7278.0518 7487.4111 -7278.4834 7487.3853 C-7279.0303 7494.9541 L-7279.1992 7494.9517 L-7278.9814 7487.3711 L-7279.4814 7487.3774 -7279.9175 7487.4463 -7280.3042 7487.5669 C-7280.4155 7494.7061 L-7280.6338 7494.6685 L-7280.7935 7487.7549 L-7281.2998 7487.9863 -7281.7266 7488.3013 -7282.1279 7488.6455 C-7282.0454 7494.2412 L-7282.3774 7494.0269 L-7282.5752 7489.043 L-7282.9434 7489.3774 -7283.3096 7489.7168 -7283.7178 7490.0127 C-7283.7217 7493.3389 L-7284.1455 7493.0645 L-7284.1553 7490.2988 L-7284.6191 7490.5693 -7285.5854 7491.0093 -7286.4014 7490.8672 C-7285.1714 7490.543 -7284.7925 7490.3301 -7284.5034 7490.0566 C-7287.7295 7490.0566 L-7283.8955 7494.4512 -7277.3394 7498.6865 -7272.3018 7492.0225 C-7272.1807 7491.8838 -7271.8174 7491.5625 -7271.1255 7491.6475 C-7267.0264 7491.6475 L-7267.0264 7492.3672 L-7270.4834 7492.3672 L-7270.1318 7492.6768 -7269.8223 7493.4863 -7270.0386 7493.8574 C-7267.0264 7493.8574 L-7267.0264 7494.9385 L-7270.1689 7494.9385 L-7270.2935 7495.4492 -7270.5439 7495.8853 -7270.8218 7496.3311 C-7267.0264 7496.3311 L-7267.0264 7497.9868 L-7271.7354 7497.9868 L-7271.9424 7498.4453 -7272.1016 7498.9077 -7272.1768 7499.4111 C-7267.0264 7499.4111 L-7267.0264 7500.4917 L-7272.1714 7500.4917 L-7272.1074 7500.9829 -7271.9614 7501.4668 -7271.7378 7501.9111 C-7267.0264 7501.9111 L-7267.0264 7502.6309 L-7271.2744 7502.6309 L-7270.9375 7503.0039 -7269.8535 7503.5933 -7269.9375 7504.0225 C-7267.0239 7504.0225 L-7267.0239 7504.4824 L-7267.3721 7504.4824 L-7267.3721 7505.6821 L-7267.0239 7505.6821 L-7267.0239 7506.1421 L-7274.9736 7506.1421 L-7275.4082 7506.4375 -7276.2192 7506.4517 -7276.9897 7506.1421 C-7280.8564 7506.1421 L-7281.1162 7506.4604 -7282.1807 7506.5693 -7282.6846 7506.1421 C-7283.8232 7506.1421 L-7284.0439 7506.3989 -7284.3174 7506.6382 -7284.6782 7506.8975 C-7267.0264 7506.8975 L-7267.0264 7507.3804 L-7285.8394 7507.3804 L-7286.1982 7507.5615 -7287.2417 7507.8389 -7288.3774 7507.3804 C-7298.6406 7507.3804 L-7298.6406 7517.6494 L-7298.1826 7518.7861 -7298.4614 7519.8271 -7298.6455 7520.1895 C-7298.6455 7539 L-7299.1279 7539 L-7299.1279 7521.3477 L-7299.3838 7521.7095 -7299.6235 7521.9824 -7299.8794 7522.2031 C-7299.8794 7523.3413 L-7299.4536 7523.8447 -7299.5615 7524.9077 -7299.8794 7525.1685 C-7299.8794 7529.0352 L-7299.5698 7529.8076 -7299.5854 7530.6182 -7299.8833 7531.0518 C-7299.8833 7538.998 L-7300.3394 7538.998 L-7300.3394 7538.6543 L-7301.5435 7538.6543 L-7301.5435 7538.998 L-7302.0039 7538.998 L-7302.0039 7536.0879 L-7302.4287 7536.1733 -7303.0186 7535.0894 -7303.3955 7534.752 C-7303.3955 7538.9951 L-7304.1113 7538.9951 L-7304.1113 7534.2886 L-7304.5552 7534.0654 -7305.0376 7533.9189 -7305.5298 7533.8555 C-7305.5298 7538.9951 L-7306.6138 7538.9951 L-7306.6138 7533.8496 L-7307.1143 7533.9248 -7307.5767 7534.0854 -7308.0391 7534.29 C-7308.0391 7538.9951 L-7309.6958 7538.9951 L-7309.6958 7535.2031 L-7310.1362 7535.4824 -7310.5728 7535.7324 -7311.0854 7535.8555 C-7311.0854 7538.9951 L-7312.1689 7538.9951 L-7312.1689 7535.9893 L-7312.5552 7536.1279 -7313.3486 7535.8945 -7313.6543 7535.543 C-7313.6543 7538.9951 L-7314.3794 7538.9951 L-7314.3794 7534.9014 L-7314.4634 7534.2095 -7314.1382 7533.8447 -7314.0015 7533.7222 C-7307.3359 7528.6885 -7311.5713 7522.1309 -7315.9658 7518.2959 C-7315.9658 7521.5244 L-7315.6919 7521.2344 -7315.48 7520.8555 -7315.1558 7519.6255 C-7315.0127 7520.4414 -7315.4526 7521.4077 -7315.7246 7521.8711 C-7312.9575 7521.8828 L-7312.6831 7522.3047 L-7316.0103 7522.3062 L-7316.3066 7522.7168 -7316.6455 7523.0845 -7316.98 7523.4512 C-7311.9951 7523.6475 L-7311.7817 7523.9814 L-7317.3774 7523.8984 L-7317.7202 7524.2998 -7318.0361 7524.7261 -7318.2681 7525.2314 C-7311.3535 7525.3926 L-7311.3169 7525.6108 L-7318.4546 7525.7222 L-7318.5742 7526.1094 -7318.6465 7526.5439 -7318.6514 7527.0444 C-7311.0688 7526.8262 L-7311.0688 7526.9951 L-7318.6362 7527.543 L-7318.6113 7527.9741 -7318.5615 7528.3545 -7318.4888 7528.6895 C-7311.0142 7528.0781 L-7310.9995 7528.3145 L-7318.3599 7529.1772 L-7318.2314 7529.5854 -7318.0654 7529.9165 -7317.8755 7530.1973 C-7311.2485 7529.7349 L-7311.3945 7529.9937 L-7317.5034 7530.6572 L-7317.0215 7531.1685 -7316.4521 7531.5024 -7315.9238 7531.9336 C-7311.9946 7531.2134 L-7312.3135 7531.6768 L-7315.4878 7532.334 L-7314.4409 7533.2373 -7314.4814 7534.9292 -7314.6914 7534.7637 c-7314.8657 7534.627 -7314.9985 7533.8271 -7314.9897 7533.8486 c-7315.2656 7533.2637 -7315.6035 7532.8438 -7315.9697 7532.5024 C-7315.9697 7539 L-7316.4536 7539 L-7316.4536 7532.0854 L-7317.6582 7531.1372 -7318.9551 7530.5669 -7319.1167 7527.4111 c-7319.25 7524.8311 -7317.5562 7523.7656 -7316.4497 7522.2871 C-7316.4497 7517.7437 L-7317.5767 7516.418 -7318.5225 7514.9912 -7318.9614 7513.1455 C-7319.8809 7508.3662 -7316.7568 7502.8545 -7311.7959 7502.4863 C-7311.7183 7502.6133 L-7316.1494 7503.5352 -7318.8442 7508.6636 -7317.9814 7513.1455 C-7317.0635 7517.0029 -7313.9395 7519.0229 -7311.5503 7522.1475 C-7309.8975 7524.5356 -7309.3457 7527.1094 -7310.0806 7529.8652 c-7310.8545 7532.6133 -7313.25 7533.5967 -7313.5649 7534.5303 c-7313.8506 7535.375 -7312.6689 7535.6997 -7311.6968 7535.6348 C-7309.5454 7535.4395 -7308.1602 7532.4917 -7304.3184 7533.7559 c-7303.2222 7534.1157 -7302.5913 7534.9375 -7302.3042 7535.5469 c-7302.1104 7535.9575 -7300.7241 7535.4395 -7301.9165 7533.2207 C-7304.8774 7533.0879 -7304.4521 7531.0645 -7304.2026 7531.2109 c-7302.5015 7532.2095 -7301.1826 7530.3047 -7302.1055 7529.2959 c-7304.2129 7526.9902 -7305.8481 7527.2861 -7307.9248 7523.3174 c-7310.2095 7518.9517 -7311.2695 7513.0718 -7308.7959 7508.9077 C-7308.7954 7508.1382 L-7309.0479 7507.5439 -7309.0249 7507.0854 -7309.2134 7506.1685 c-7309.3818 7505.3535 -7309.6689 7505.0854 -7309.9575 7504.9116 C-7310.1304 7504.7964 -7310.5015 7504.9053 -7310.5054 7505.1445 c-7310.52 7505.7461 -7309.7842 7505.5225 -7309.8271 7505.5845 c-7310.1895 7506.0869 -7310.7329 7505.7295 -7310.8345 7505.3774 c-7310.9648 7504.9287 -7310.6606 7504.5757 -7310.3145 7504.4902 C-7309.6655 7504.3589 -7309.1968 7504.9277 -7308.9575 7505.4575 c-7308.4365 7506.6069 -7308.4746 7508.2524 -7307.2607 7508.8574 c-7306.4385 7509.2471 -7305.5537 7508.9277 -7304.7271 7508.6328 c-7301.8296 7507.6016 -7298.3096 7504.082 -7297.2783 7501.1836 c-7296.9834 7500.3574 -7296.6641 7499.4727 -7297.0537 7498.6494 c-7297.6606 7497.4375 -7299.3042 7497.4741 -7300.4546 7496.9541 c-7300.9834 7496.7148 -7301.5513 7496.2461 -7301.4214 7495.5967 C-7301.3345 7495.25 -7300.9824 7494.9468 -7300.5327 7495.0757 c-7300.1826 7495.1797 -7299.8242 7495.7222 -7300.3281 7496.0845 c-7300.3882 7496.127 -7300.1655 7495.3901 -7300.7681 7495.4053 c-7301.0054 7495.4111 -7301.1143 7495.7813 -7300.9995 7495.9541 C-7300.8257 7496.2422 -7300.5591 7496.5293 -7299.7422 7496.6973 c-7298.7085 7496.9102 -7298.2578 7496.8535 -7297.5386 7497.2261 C-7297.1167 7497.2261 L-7292.9546 7494.752 -7287.0674 7495.8008 -7282.7095 7498.0972 c-7282.0527 7498.4551 -7281.4834 7498.8008 -7280.9126 7499.1475 c-7279.5488 7499.9766 -7277.5542 7502.8853 Y-7277.1782 7503.3325 -7276.9521 7503.7974 -7276.5225 7504.0625 c-7275.3569 7504.7783 -7273.8184 7503.5215 -7274.8154 7501.8188 c-7274.9614 7501.5703 -7272.9385 7501.1455 -7272.8057 7504.1064 C-7270.5874 7505.2988 -7270.0698 7503.9116 -7270.4795 7503.7173 c-7271.0889 7503.4316 -7271.9087 7502.7998 -7272.2705 7501.7036 c-7273.5342 7497.8623 -7270.3599 7496.0229 -7270.4463 7494.3262 C-7270.3008 7493.5317 -7270.6514 7492.1719 -7271.4961 7492.459 c-7272.4282 7492.7725 -7273.4126 7495.1685 -7276.1606 7495.9414 c-7278.9175 7496.6768 -7281.4897 7496.1255 -7283.8774 7494.4717 C-7287.0034 7492.0845 -7289.0234 7488.959 -7292.8818 7488.0415 C-7297.3623 7487.1772 -7302.4902 7489.8735 -7303.4126 7494.3037 C-7303.5391 7494.2261 L-7303.1729 7489.2656 -7297.6592 7486.1421 -7292.8818 7487.0615 C-7291.0361 7487.5024 -7289.6104 7488.4453 -7288.2822 7489.5718 C-7283.7393 7489.5718 L-7282.2607 7488.4668 -7281.1943 7486.7725 -7278.6143 7486.9053 c-7275.4585 7487.0664 -7274.8882 7488.3628 -7273.9409 7489.5718 C-7267.0264 7489.5718 L-7267.0264 7490.0566 Lf0 D-7296.1362 7499.4111 m-7288.5166 7499.4111 L-7289.5635 7498.8301 -7290.5435 7498.3184 -7291.8057 7497.9868 C-7296.6079 7497.9868 L-7296.2998 7498.3804 -7296.1055 7498.8701 -7296.1362 7499.4111 Cf-7297.0591 7501.9111 m-7285.5254 7501.9111 L-7285.6338 7501.6191 -7286.0063 7500.9404 -7286.8042 7500.4917 C-7296.4321 7500.4917 L-7296.6118 7500.9727 -7296.8232 7501.4463 -7297.0591 7501.9111 Cf-7285.8096 7504.0225 m-7285.3174 7503.4395 -7285.2568 7503.2207 -7285.3857 7502.6309 C-7297.4521 7502.6309 L-7297.7295 7503.1069 -7298.0322 7503.5718 -7298.3599 7504.0225 C-7290.2568 7504.0225 L-7289.9111 7503.2031 -7289.1665 7503.3711 -7288.8218 7504.0225 C-7285.8096 7504.0225 Lf-7287.1201 7504.4824 m-7287.1201 7504.8237 L-7286.5664 7504.7861 -7286.4995 7504.752 -7286.1982 7504.4824 C-7287.1201 7504.4824 Lf-7288.4863 7504.4824 m-7288.3311 7504.6719 -7288.0264 7504.8149 -7287.8257 7504.8447 C-7287.8257 7504.4824 L-7288.4863 7504.4824 Lf-7291.3535 7504.4824 m-7291.3535 7505.6821 L-7290.6465 7505.6821 L-7290.6465 7504.4824 L-7291.3535 7504.4824 Lf-7292.7622 7504.4824 m-7292.7622 7505.6821 L-7292.0576 7505.6821 L-7292.0576 7504.4824 L-7292.7622 7504.4824 Lf-7294.1729 7504.4824 m-7294.1729 7505.6821 L-7293.4678 7505.6821 L-7293.4678 7504.4824 L-7294.1729 7504.4824 Lf-7295.5835 7504.4824 m-7295.5835 7505.6821 L-7294.8774 7505.6821 L-7294.8774 7504.4824 L-7295.5835 7504.4824 Lf-7296.9946 7504.4824 m-7296.9946 7505.6821 L-7296.2886 7505.6821 L-7296.2886 7504.4824 L-7296.9946 7504.4824 Lf-7302 7515.7695 m-7302 7507.6504 L-7302.4497 7507.9756 -7302.9146 7508.2749 -7303.3911 7508.5439 C-7303.3911 7520.6406 L-7302.8018 7520.7695 -7302.5825 7520.7095 -7302 7520.2158 C-7302 7517.2031 L-7302.6514 7516.8613 -7302.8169 7516.1152 -7302 7515.7695 Cf-7301.5391 7515.3799 m-7300.3394 7515.3799 L-7300.3394 7514.6748 L-7301.5391 7514.6748 L-7301.5391 7515.3799 Lf-7300.3394 7513.9688 m-7300.3394 7513.2637 L-7301.5391 7513.2637 L-7301.5391 7513.9688 L-7300.3394 7513.9688 Lf-7300.3394 7512.5581 m-7300.3394 7511.8535 L-7301.5391 7511.8535 L-7301.5391 7512.5581 L-7300.3394 7512.5581 Lf-7300.3394 7511.1484 m-7300.3394 7510.4429 L-7301.5391 7510.4429 L-7301.5391 7511.1484 L-7300.3394 7511.1484 Lf-7300.3394 7509.7373 m-7300.3394 7509.0313 L-7301.5391 7509.0313 L-7301.5391 7509.7373 L-7300.3394 7509.7373 Lf-7300.3394 7508.3262 m-7300.3394 7507.6191 L-7301.5391 7507.6191 L-7301.5391 7508.3262 L-7300.3394 7508.3262 Lf-7300.3394 7506.918 m-7300.3394 7506.2725 L-7300.5728 7506.4941 -7300.8135 7506.7095 -7301.0591 7506.918 C-7300.3394 7506.918 Lf-7298.4058 7505.6821 m-7297.6992 7505.6821 L-7297.6992 7504.4824 L-7298.4058 7504.4824 L-7298.4058 7505.6821 Lf-7299.7495 7505.6821 m-7299.1094 7505.6821 L-7299.1094 7504.9741 L-7299.3159 7505.2158 -7299.5288 7505.4517 -7299.7495 7505.6821 Cf-7305.5298 7509.5269 m-7305.5298 7519.2222 L-7305.0815 7520.0181 -7304.4014 7520.3926 -7304.1113 7520.5024 C-7304.1113 7508.9253 L-7304.5762 7509.1558 -7305.0488 7509.3564 -7305.5298 7509.5269 Cf-7308.0352 7509.2095 m-7308.0352 7514.2207 L-7307.7041 7515.4844 -7307.1929 7516.4629 -7306.6094 7517.5093 C-7306.6094 7509.7725 L-7307.1606 7509.77 -7307.6494 7509.5439 -7308.0352 7509.2095 Cf-7300.3394 7537.2437 m-7301.5391 7537.2437 L-7301.5391 7537.9478 L-7300.3394 7537.9478 L-7300.3394 7537.2437 Lf-7300.3394 7535.834 m-7301.3896 7535.834 L-7301.4375 7535.8838 -7301.4878 7535.9292 -7301.5391 7535.9678 C-7301.5391 7536.5381 L-7300.3394 7536.5381 L-7300.3394 7535.834 Lf-7300.3394 7534.4204 m-7301.0039 7534.4204 L-7300.9702 7534.6475 -7300.9595 7534.9116 -7301.0137 7535.1279 C-7300.3394 7535.1279 L-7300.3394 7534.4204 Lf-7300.3394 7533.0117 m-7301.5015 7533.0117 L-7301.3872 7533.2461 -7301.2798 7533.4814 -7301.1919 7533.7168 C-7300.3394 7533.7168 L-7300.3394 7533.0117 Lf-7300.3394 7531.9023 m-7300.4614 7532.0625 -7300.5938 7532.2197 -7300.6753 7532.3062 C-7300.3394 7532.3062 L-7300.3394 7531.9023 Lf-7300.4399 7516.4395 m-7300.6968 7516.2886 -7302.0845 7515.8135 -7302.0737 7516.5381 c-7302.0674 7516.9502 -7301.4512 7517.2412 -7301.2495 7517.4463 c-7300.6338 7518.0703 -7300.1885 7519.5254 -7301.2974 7520.4238 c-7303.6328 7522.3145 -7305.1865 7520.5879 Y-7309.1118 7516.7324 -7309.1104 7511.1104 Y-7310.2295 7515.334 -7308.9663 7520.3936 -7307.4048 7523.1421 c-7304.8818 7527.5845 -7303.9575 7526.0566 -7301.6113 7528.9478 c-7300.8047 7529.9429 -7301.1294 7532.3813 -7303.9546 7531.75 c-7304.2026 7531.6934 -7303.7759 7532.2949 -7303.2681 7532.5493 c-7301.1104 7533.6406 -7299.8618 7531.1631 -7300.1338 7529.8589 c-7300.4761 7528.2109 -7301.0986 7527.3662 -7303.1616 7526.2246 C-7302.8311 7526.2373 -7301.2134 7526.5415 -7300.2295 7525.0088 c-7300.0195 7524.6821 -7299.8745 7523.7573 -7300.3042 7523.8774 c-7300.3906 7523.9023 -7300.6416 7524.1973 -7300.9414 7524.3613 c-7302.9321 7525.3945 -7303.7075 7523.0127 Y-7301.4165 7522.8413 -7300.7515 7522.7637 -7299.2559 7520.7637 c-7299.0542 7520.4941 -7298.1162 7517.8047 -7300.4399 7516.4395 cf-7301.5391 7523.1367 m-7301.5391 7524.0225 L-7301.2993 7523.998 -7300.9302 7523.9575 -7300.3394 7523.4028 C-7300.3394 7523.1367 L-7301.5391 7523.1367 Lf-7302.9946 7523.23 m-7302.8042 7523.7031 -7302.4185 7523.9468 -7302 7524.0127 C-7302 7523.1709 L-7302.3857 7523.2349 -7302.9946 7523.23 Yf-7300.3394 7526.666 m-7300.3394 7525.959 L-7300.6382 7525.959 L-7300.9136 7526.1475 -7301.2246 7526.2935 -7301.5391 7526.3813 C-7301.5391 7526.666 L-7300.3394 7526.666 Lf-7300.9897 7527.3677 m-7300.7935 7527.5342 -7300.5576 7527.7813 -7300.3394 7528.1084 C-7300.3394 7527.3677 L-7300.9897 7527.3677 Lf-7302.2495 7526.4741 m-7302.1914 7526.5269 -7302.1025 7526.5967 -7302 7526.6719 C-7302 7526.4668 L-7302.0835 7526.4741 -7302.1675 7526.4785 -7302.2495 7526.4741 Cf-7301.5391 7518.9063 m-7301.5391 7519.8262 L-7301.2715 7519.5269 -7301.2358 7519.46 -7301.1982 7518.9063 C-7301.5391 7518.9063 Lf-7301.1758 7518.2012 m-7301.2065 7518.0024 -7301.3506 7517.6943 -7301.5391 7517.54 C-7301.5391 7518.2012 L-7301.1758 7518.2012 Lf-7289.1865 7506.8975 m-7289.4233 7506.6943 -7289.6401 7506.4463 -7289.8271 7506.1421 C-7299.8794 7506.1421 L-7299.8794 7516.1992 L-7299.5762 7516.3853 -7299.3271 7516.6021 -7299.1255 7516.8408 C-7299.1265 7506.8975 L-7289.1865 7506.8975 Lf-7282.6226 7505.6821 m-7282.0698 7505.0928 -7282.0298 7504.7222 -7282.0034 7504.4824 C-7282.8887 7504.4824 L-7282.8887 7505.6821 L-7282.6226 7505.6821 Lf-7282.8564 7504.0225 m-7282.0127 7504.0225 L-7282.0791 7503.6045 -7282.3232 7503.2192 -7282.7959 7503.0269 C-7282.7915 7503.6367 -7282.8564 7504.0225 Vf-7279.3623 7504.4824 m-7279.6455 7504.4824 L-7279.7334 7504.7974 -7279.8799 7505.1084 -7280.0674 7505.3838 C-7280.0674 7505.6821 L-7279.3623 7505.6821 L-7279.3623 7504.4824 Lf-7279.3545 7504.0225 m-7279.4302 7503.9199 -7279.4995 7503.8311 -7279.5518 7503.7734 C-7279.5479 7503.8555 -7279.5518 7503.9395 -7279.5601 7504.0225 C-7279.3545 7504.0225 Lf-7277.9185 7505.6821 m-7278.2446 7505.4648 -7278.4912 7505.23 -7278.6577 7505.0332 C-7278.6577 7505.6821 L-7277.9185 7505.6821 Lf-7273.7202 7505.3477 m-7273.8066 7505.4287 -7273.9639 7505.5615 -7274.1226 7505.6821 C-7273.7202 7505.6821 L-7273.7202 7505.3477 Lf-7273.4751 7502.7549 m-7273.7329 7502.2461 -7274.0913 7501.8945 -7274.2778 7502.0688 c-7274.4248 7502.2031 -7273.4424 7503.9429 -7274.9009 7504.7725 c-7275.7158 7505.2349 -7276.8721 7504.8735 -7277.2842 7504.3062 c-7279.5615 7501.1836 -7279.4746 7500.5581 -7282.8848 7498.6172 c-7285.6318 7497.0527 -7290.6943 7495.7935 -7294.9155 7496.9116 C-7289.2935 7496.9102 -7285.4385 7500.8359 V-7283.7119 7502.3901 -7285.6025 7504.7246 v-7286.5015 7505.834 -7287.9551 7505.3887 -7288.5791 7504.7734 c-7288.7842 7504.5703 -7289.0752 7503.9551 -7289.4873 7503.9478 c-7290.2134 7503.9385 -7289.7378 7505.3237 -7289.5874 7505.582 c-7288.2217 7507.9063 -7285.5322 7506.9678 -7285.2622 7506.7656 c-7283.2622 7505.27 -7283.1846 7504.6064 -7283.0127 7502.3145 C-7280.6328 7503.0894 -7281.6655 7505.0796 v-7281.8286 7505.3804 -7282.1245 7505.6318 -7282.1489 7505.7173 c-7282.2695 7506.1475 -7281.3423 7506.0029 -7281.0176 7505.7949 c-7279.4858 7504.8086 -7279.7881 7503.1909 -7279.8018 7502.8613 C-7278.6602 7504.9248 -7277.8154 7505.5469 -7276.1675 7505.8887 c-7274.8633 7506.1597 -7272.3857 7504.9116 -7273.4751 7502.7549 cf-7272.3096 7504.8301 m-7272.5454 7504.7422 -7272.7817 7504.6357 -7273.0142 7504.5215 C-7273.0142 7505.6821 L-7272.3096 7505.6821 L-7272.3096 7504.8301 Lf-7270.8994 7505.0088 m-7271.1143 7505.0625 -7271.3794 7505.0518 -7271.6055 7505.0181 C-7271.6055 7505.6821 L-7270.8994 7505.6821 L-7270.8994 7505.0088 Lf-7268.7822 7505.6821 m-7268.0767 7505.6821 L-7268.0767 7504.4824 L-7268.7822 7504.4824 L-7268.7822 7505.6821 Lf-7270.1934 7505.6821 m-7269.4878 7505.6821 L-7269.4878 7504.4824 L-7270.0586 7504.4824 L-7270.0967 7504.5342 -7270.1426 7504.5854 -7270.1934 7504.6328 C-7270.1934 7505.6821 Lf*UU%AI8_EndBrushPattern%AI8_BeginBrushPattern(Unnamed 3)0 Auu0 J 0 j 1 w 4 M []0 d0 XR-3453.5 3666.291 m-3354.5696 3666.291 L-3354.5696 3649.9272 L-3453.5 3649.9272 L-3453.5 3666.291 Lnuu0 O0.789425 0.732296 0.680781 0.689296 0.070588 0.070588 0.070588 Xa-3357.0071 3655.6096 m-3356.7832 3655.5535 -3356.5879 3655.8643 -3356.6721 3656.0039 C-3356.2161 3655.6272 -3356.2063 3656.0552 -3356.1472 3655.3264 C-3355.8545 3654.9683 -3355.5422 3655.4639 -3355.8752 3655.76 C-3355.0313 3655.3135 L-3355.5359 3655.1995 L-3355.3984 3654.5933 -3354.7295 3655.3806 -3354.5696 3654.6743 C-3355.4832 3654.7334 L-3355.4375 3654.5313 L-3355.6455 3654.749 -3356.0496 3654.6582 -3356.1904 3654.5732 C-3356.1682 3654.4734 -3356.1824 3654.3115 -3356.0212 3654.2935 C-3357.1243 3654.2471 -3356.3184 3655.3542 -3357.2336 3655.5552 C-3357.1763 3655.541 -3357.1052 3655.5491 -3357.0071 3655.6096 Cf-3357.9441 3654.125 m-3358.3289 3654.8853 L-3358.9744 3654.6895 L-3358.9817 3654.9512 -3359.4519 3655.1638 -3359.1335 3655.3955 C-3359.0713 3655.3542 -3358.9482 3655.2759 -3358.8489 3655.2998 C-3358.9209 3655.8672 -3359.7073 3655.583 -3359.5176 3656.1572 C-3359.0071 3656.0063 -3358.9287 3656.1318 -3358.6145 3655.6707 C-3358.1465 3655.7231 -3357.8057 3655.8542 -3357.5872 3656.0615 C-3357.4482 3655.9751 -3357.4287 3655.6272 -3357.2522 3655.5576 C-3357.2913 3655.5664 -3357.3271 3655.5752 -3357.3721 3655.5796 C-3357.3911 3654.7256 L-3357.5383 3654.9063 -3357.6775 3654.8213 -3357.8408 3654.8384 C-3357.0852 3653.8423 L-3357.3289 3653.0435 -3358.0713 3653.5127 -3358.3679 3653.1807 C-3358 3653.8982 -3358.6609 3653.5376 -3357.9441 3654.125 Cf-3357.2522 3655.5576 m-3357.2473 3655.5576 -3357.2393 3655.5566 -3357.2336 3655.5552 C-3357.2393 3655.5566 -3357.2473 3655.5566 -3357.2522 3655.5576 Cf-3413.7073 3660.5222 m-3413.8679 3660.5376 -3413.9153 3660.7393 -3413.9385 3660.8408 C-3412.1296 3660.8247 L-3412.1863 3660.6006 -3412.7073 3660.3232 -3412.3591 3660.1895 C-3412.5144 3659.9414 -3412.9873 3660.1531 -3413.0559 3660.4558 C-3412.9248 3660.1143 L-3413.3416 3660.5522 -3413.6262 3659.6919 -3413.3545 3659.4336 C-3413.3896 3659.4382 L-3414.5439 3661.123 L-3414.1201 3661.2212 -3414.2175 3660.5435 -3413.7073 3660.5222 Cf-3450.8567 3659.665 m-3450.6223 3659.5867 -3450.5935 3659.5059 -3450.6201 3659.4224 C-3450.7041 3659.4856 -3450.7839 3659.5576 -3450.8567 3659.665 Cf-3414.8137 3661.5176 m-3415.1753 3662.0454 L-3415.0305 3661.9031 -3414.9033 3661.7139 -3414.8137 3661.5176 Cf-3412.3088 3653.499 m-3412.3081 3653.4712 -3412.3042 3653.4463 -3412.3137 3653.4087 C-3412.4761 3653.6782 L-3412.4736 3653.6782 -3412.4729 3653.6782 -3412.4719 3653.6782 C-3412.4121 3653.6187 -3412.3584 3653.5591 -3412.3088 3653.499 Cf-3423.0212 3663.499 m-3423.0601 3663.5127 -3423.0935 3663.5176 -3423.1399 3663.5352 C-3423.0967 3663.5313 -3423.0576 3663.5176 -3423.0212 3663.499 Cf-3407.4087 3650.4856 m-3408.2129 3650.9927 L-3408.1057 3650.752 -3408.4937 3650.8247 -3408.3242 3650.5447 C-3408.3855 3650.583 -3408.6729 3650.6782 -3408.5945 3650.8013 C-3408.4304 3650.7854 L-3408.8545 3651.4856 -3408.5977 3651.7544 -3409.3008 3652.2871 C-3408.8643 3652.7014 -3408.6729 3652.3223 -3408.4417 3652.0039 C-3408.3633 3651.9551 -3408.2976 3651.9336 -3408.2312 3651.9072 C-3407.5625 3650.9292 L-3407.4087 3650.4856 Lf-3439.6504 3655.6936 m-3439.6416 3655.6392 L-3439.6497 3655.6582 -3439.6511 3655.6763 -3439.6504 3655.6936 Cf-3439.6064 3655.415 m-3439.6416 3655.6392 L-3439.5984 3655.5264 -3439.4329 3655.4199 -3439.6064 3655.415 Cf-3414.6809 3661.0654 m-3414.6919 3661.1951 -3414.7383 3661.3542 -3414.8137 3661.5176 C-3414.5439 3661.123 L-3414.5823 3661.1152 -3414.6328 3661.0879 -3414.6809 3661.0654 Cf-3414.0671 3659.5376 m-3413.3896 3659.4382 L-3413.1399 3659.0752 L-3413.3992 3659.2124 -3413.7024 3659.3064 -3414.0671 3659.5376 Cf-3421.9512 3663.9104 m-3423.3545 3664.0176 -3421.6064 3663.0867 -3422.2512 3662.8887 C-3422.6409 3662.9856 -3422.7783 3663.376 -3423.0212 3663.499 C-3421.9082 3663.165 -3423.1721 3664.7854 -3422.0496 3664.5791 C-3422.2092 3665.2854 -3422.8591 3665.3496 -3423.24 3665.1582 C-3423.6711 3664.4771 -3422.8633 3664.6592 -3422.7656 3663.9912 C-3423.2161 3664.1016 -3423.1367 3664.2256 -3423.3279 3664.6062 C-3424.0352 3664.4482 -3424.7913 3665.4424 -3425.2136 3664.499 C-3425.7256 3664.6494 -3425.6919 3664.9751 -3425.9863 3665.3342 C-3426.0449 3666.063 -3425.2249 3665.7168 -3425.0352 3666.291 C-3425.0745 3666.2295 -3425.1511 3666.1062 -3425.1289 3666.0039 C-3424.6863 3666.1572 L-3425.1064 3665.9031 -3424.6279 3665.4287 -3424.4033 3665.3716 C-3424.24 3665.356 -3423.9153 3665.3232 -3423.96 3665.5254 C-3424.2073 3665.6814 L-3423.8889 3665.9126 -3423.5049 3665.1504 -3423.1687 3665.5454 C-3423.1511 3665.7092 -3423.2783 3665.7854 -3423.2976 3665.8875 C-3422.9209 3665.3894 -3422.5576 3665.4182 -3422 3665.0664 C-3422.3232 3665.7896 L-3421.8772 3664.9893 -3420.8672 3665.2168 -3420.1672 3665.6392 C-3420.2449 3665.5166 -3420.3848 3665.4307 -3420.3008 3665.291 C-3419.8896 3665.1184 -3419.5791 3665.6143 -3419.7695 3665.9951 C-3419.3679 3665.3955 -3418.2393 3666.5 -3417.6919 3665.7207 C-3415.1753 3662.0454 L-3415.2695 3662.1375 -3415.3704 3662.2124 -3415.4744 3662.2432 C-3415.7031 3661.6096 -3415.8264 3661.6863 -3415.4255 3661.0879 C-3415.8191 3661.4238 -3415.6687 3661.9336 -3416.26 3661.96 C-3416.0281 3661.6406 -3415.9695 3660.9119 -3416.5359 3660.8367 C-3417.9519 3661.4712 -3418.8904 3663.2759 -3420.2129 3664.1982 C-3420.2617 3663.7092 -3421.3 3663.8462 -3421.8047 3663.7312 C-3421.6121 3663.2056 -3421.2375 3663.0566 -3420.8489 3662.9502 C-3421.0928 3662.917 -3421.5127 3662.9031 -3421.8242 3662.8799 C-3421.9512 3663.9104 Lf-3418.6631 3662.2659 m-3418.6985 3662.2227 -3418.7351 3662.1982 -3418.7727 3662.1753 C-3418.7527 3662.2158 -3418.72 3662.2471 -3418.6631 3662.2659 Cf-3420.7305 3662.9646 m-3420.7256 3662.9473 -3420.7273 3662.9326 -3420.7256 3662.9126 C-3420.7664 3662.9238 -3420.8071 3662.9382 -3420.8489 3662.9502 C-3420.8071 3662.9539 -3420.76 3662.96 -3420.7305 3662.9646 Cf-3415.0127 3659.96 m-3414.9287 3659.8213 -3414.8665 3659.7822 -3414.7825 3659.6416 C-3414.8342 3659.6895 -3414.8992 3659.7271 -3414.9617 3659.7695 C-3415.0212 3659.8352 -3415.0496 3659.9016 -3415.0127 3659.96 Cf-3414.7295 3660.8213 m-3414.7744 3661.0222 L-3414.7383 3661.0447 -3414.7129 3661.0491 -3414.6809 3661.0654 C-3414.6711 3660.957 -3414.6816 3660.8662 -3414.7295 3660.8213 Cf-3427.3137 3659.4871 m-3427.4482 3659.5933 L-3427.3672 3659.5854 -3427.3323 3659.5422 -3427.3137 3659.4871 Cf-3423.5144 3663.0796 m-3423.0264 3663.0313 -3423.4561 3662.3496 -3422.7656 3662.3462 C-3422.9683 3662.3013 L-3422.4729 3661.9893 -3421.6023 3662.1328 -3421.0137 3662.1062 C-3421.0801 3662.3982 -3420.6567 3662.46 -3420.7256 3662.9126 C-3420.3232 3662.8064 -3419.9248 3662.7056 -3419.7175 3662.2393 C-3419.4683 3662.3928 -3419.0896 3661.9824 -3418.7727 3662.1753 C-3418.9065 3661.9019 -3418.3215 3661.2515 -3419.0928 3661.5854 C-3419.0305 3661.5479 -3419.0696 3661.4856 -3419.0081 3661.4473 C-3419.5049 3661.0664 -3419.7041 3661.7124 -3420.1321 3661.7212 C-3420.3879 3661.4512 -3419.7136 3661.2854 -3419.9551 3661.1782 C-3420.4895 3661.4292 -3421.6321 3660.8535 -3421.5967 3661.8672 C-3421.9856 3661.9395 -3422.0393 3661.7158 -3422.1553 3661.5303 C-3422.7705 3662.6104 -3424.4385 3661.0664 -3424.4329 3662.4482 C-3424.2083 3662.3936 -3423.8423 3662.4224 -3423.5127 3662.1272 C-3423.5144 3663.0796 Lf-3415.8323 3660.0313 m-3415.8623 3660.0254 -3415.9023 3660.0303 -3415.9272 3660.0176 C-3415.8992 3660.0254 -3415.8643 3660.0303 -3415.8323 3660.0313 Cf*u1 D-3409.6736 3664.0352 m-3409.8777 3664.9395 L-3411.0398 3665.1553 -3411.46 3664.9016 -3412.4761 3664.9375 C-3412.5537 3664.8135 -3412.4304 3664.7344 -3412.3679 3664.6951 C-3413.0823 3664.7998 -3414.1511 3664.6104 -3414.6711 3665.0254 C-3414.8984 3665.0176 -3415.4951 3664.7312 -3415.2693 3664.4646 C-3415.3799 3664.5454 -3415.5063 3664.623 -3415.6335 3664.5942 C-3415.6672 3664.2695 -3415.3489 3664.5015 -3415.3416 3664.2344 C-3415.4424 3664.2136 -3415.4817 3664.1504 -3415.5049 3664.252 C-3415.3352 3663.9734 -3415.6809 3663.1504 -3414.8896 3663.1719 C-3414.5833 3663.9307 -3415.4385 3663.26 -3415.2576 3664.0967 C-3414.9951 3664.1016 -3415.0256 3663.7783 -3415.0032 3663.6763 C-3414.6687 3663.6951 -3414.6775 3663.9053 -3414.6953 3664.0967 C-3414.5671 3663.8367 -3414.1465 3664.1982 -3413.9695 3663.8035 C-3413.3191 3663.7393 -3414.0049 3664.4326 -3413.5801 3664.4224 C-3413.3352 3663.5752 L-3412.6289 3663.7344 L-3411.6064 3663.4375 -3412.7751 3662.2703 -3411.6064 3661.791 C-3411.76 3662.2334 -3411.2913 3662.9768 -3410.7473 3663.1531 C-3411.0728 3663.1848 -3411.6743 3663.7371 -3412.0945 3663.4856 C-3411.5022 3664.1494 -3412.9097 3663.5654 -3412.6023 3664.3252 C-3412.3096 3663.9646 -3411.8215 3663.917 -3411.4409 3664.1104 C-3411.5657 3664.1895 L-3411.1609 3664.2791 -3410.8545 3663.3928 -3410.2959 3663.7312 C-3410.0183 3663.7039 -3410.0703 3663.9424 -3410.1191 3664.1416 C-3409.8843 3664.0144 -3409.6743 3663.8486 -3409.6736 3664.0352 Cf0 D-3410.2783 3664.2136 m-3410.6497 3664.1294 L-3410.5615 3664.2695 -3410.4231 3664.2646 -3410.2783 3664.2136 Cf*U-3363.1377 3654.2344 m-3363.1008 3654.2571 -3363.0583 3654.2803 -3363.0249 3654.3035 C-3363.0496 3654.2646 -3363.0923 3654.2471 -3363.1377 3654.2344 Cf-3396.0967 3653.9104 m-3395.8816 3653.9382 L-3395.9656 3653.9092 -3396.0344 3653.9053 -3396.0967 3653.9104 Cf-3391.2693 3651.1104 m-3390.9551 3650.9126 L-3391.0791 3650.9253 -3391.1763 3651.0039 -3391.2693 3651.1104 Cf-3365.7024 3654.1768 m-3365.7129 3654.1707 L-3365.7305 3654.1848 -3365.7439 3654.2039 -3365.7625 3654.2158 C-3365.7024 3654.1768 Lf-3381.5872 3653.0933 m-3381.5393 3653.165 -3381.4856 3653.23 -3381.4121 3653.2803 C-3381.4209 3653.1963 -3381.4863 3653.1353 -3381.5872 3653.0933 Cf-3391.3271 3651.1475 m-3391.3191 3651.1553 -3391.3145 3651.1572 -3391.3081 3651.1631 C-3391.2959 3651.1455 -3391.2825 3651.1262 -3391.2693 3651.1104 C-3391.3271 3651.1475 Lf-3398.2231 3651.4382 m-3398.2693 3651.4646 -3398.3113 3651.4856 -3398.3608 3651.5222 C-3398.2959 3651.5059 -3398.2561 3651.4739 -3398.2231 3651.4382 Cf-3397.9199 3653.8408 m-3397.9695 3653.8623 -3398.0168 3653.8887 -3398.0537 3653.9253 C-3397.9199 3653.8408 Lf-3405.3577 3652.1936 m-3405.6472 3652.3142 L-3405.5049 3652.3013 -3405.4199 3652.2544 -3405.3577 3652.1936 Cf-3398.6863 3653.2854 m-3398.7031 3653.3252 -3398.72 3653.3633 -3398.7312 3653.4016 C-3398.6912 3653.375 -3398.6721 3653.3252 -3398.6863 3653.2854 Cf-3361.2976 3656.7615 m-3361.3042 3656.7615 -3361.3113 3656.7646 -3361.3152 3656.7646 C-3361.3225 3656.8633 L-3361.2976 3656.7615 Lf-3360.5935 3655.5264 m-3360.5105 3655.5015 -3360.4241 3655.479 -3360.3391 3655.457 C-3360.4336 3655.4512 -3360.5256 3655.4783 -3360.5935 3655.5264 Cf-3377.3809 3654.457 m-3377.3042 3654.5796 -3377.1243 3654.7256 -3377.2083 3654.8662 C-3377.0615 3654.6895 -3377.0713 3654.2603 -3377.3809 3654.457 Cf-3362.7092 3662.0664 m-3362.6631 3661.9512 -3362.6057 3661.8643 -3362.5481 3661.7783 C-3362.6553 3661.9019 -3362.7493 3662.0039 -3362.7092 3662.0664 Cf-3362.5481 3661.7783 m-3362.4951 3661.7173 -3362.4385 3661.6531 -3362.3911 3661.5867 C-3362.4463 3661.6416 -3362.4993 3661.7056 -3362.5481 3661.7783 Cf-3379.3313 3661.4912 m-3379.3503 3661.4336 -3379.3799 3661.3853 -3379.4199 3661.3699 C-3379.4082 3661.4856 -3379.3762 3661.5103 -3379.3313 3661.4912 Cf-3360.1335 3655.5928 m-3360.0879 3655.3911 -3358.9817 3654.9512 -3359.9121 3654.8486 C-3359.8762 3654.2192 -3359.3152 3654.5576 -3359.0671 3654.4019 C-3359.2473 3654.2544 -3358.9775 3653.9983 -3359.0322 3653.7734 C-3359.1553 3653.8496 -3359.3015 3654.0303 -3359.5049 3653.9856 C-3359.5984 3653.6982 -3359.2898 3653.5022 -3359.0488 3653.6104 C-3359.3457 3653.2783 -3358.6721 3653.1118 -3359.0923 3652.8574 C-3359.9905 3653.0791 -3360.6252 3653.3076 -3361.2568 3654.2256 C-3360.7449 3654.0752 -3360.1721 3653.8875 -3359.7522 3654.1406 C-3359.9287 3654.6848 L-3360.4033 3654.2056 -3360.6963 3654.563 -3361.1631 3654.5127 C-3360.1145 3654.8013 L-3359.6233 3655.2544 -3359.9519 3655.3584 -3360.3391 3655.457 C-3360.2439 3655.4639 -3360.1577 3655.4968 -3360.1335 3655.5928 Cf-3360.8401 3660.3662 m-3360.8225 3660.3806 L-3360.8071 3660.3623 -3360.7881 3660.3496 -3360.7783 3660.3267 C-3360.8401 3660.3662 Lf-3405.3042 3663.2014 m-3405.3943 3663.4075 L-3405.3191 3663.3142 -3405.2959 3663.2515 -3405.3042 3663.2014 Cf-3361.4656 3657.7312 m-3361.4648 3657.7312 L-3361.4719 3657.7371 -3361.4736 3657.7371 -3361.4656 3657.7312 Cf-3403.0632 3663.2432 m-3403.0664 3663.2583 -3403.0696 3663.2744 -3403.0752 3663.291 C-3403.0671 3663.2744 -3403.0671 3663.2583 -3403.0632 3663.2432 Cf-3402.4641 3651.5144 m-3402.4683 3651.4893 -3402.4695 3651.4646 -3402.4792 3651.4404 C-3402.5271 3651.4712 -3402.5039 3651.4968 -3402.4641 3651.5144 Cf-3403.0615 3663.1936 m-3403.0615 3663.21 -3403.0601 3663.2256 -3403.0632 3663.2432 C-3403.0615 3663.2256 -3403.0576 3663.2092 -3403.0615 3663.1936 Cf-3392.1641 3661.1963 m-3392.1985 3661.1016 -3392.2527 3661.0127 V-3392.2737 3661.063 -3392.2527 3661.1216 -3392.1641 3661.1963 Cf-3394.3152 3660.3911 m-3394.3152 3660.3911 L-3394.3289 3660.3711 -3394.3369 3660.3535 -3394.3545 3660.3311 C-3394.3152 3660.3911 Lf-3377.8896 3652.0063 m-3377.9961 3651.999 -3378.0759 3652.0127 -3378.1433 3652.0352 C-3378.0657 3652.0491 -3377.9817 3652.0479 -3377.8896 3652.0063 Cf-3403.0752 3663.291 m-3403.0977 3663.3486 -3403.1296 3663.4075 -3403.1824 3663.4814 c-3403.1243 3663.4031 -3403.0935 3663.3433 -3403.0752 3663.291 Cf-3388.8843 3658.4482 m-3388.9072 3658.4692 -3388.9287 3658.4893 -3388.9504 3658.5078 C-3388.9373 3658.5176 -3388.9241 3658.5222 -3388.9111 3658.5352 C-3388.8843 3658.4482 Lf-3387.7617 3658.8486 m-3387.8 3658.9104 -3387.8176 3658.9739 -3387.8391 3659.0303 C-3387.4385 3658.8035 -3386.7024 3659.0491 -3386.6152 3658.4712 C-3386.7512 3658.4856 -3387.4561 3658.1455 -3387.3359 3657.8064 C-3387.6152 3657.9512 -3388.0281 3657.5454 -3388.1785 3657.6406 C-3387.72 3657.957 -3388.1289 3658.1287 -3388.4385 3658.3232 C-3388.72 3658.1553 -3388.3855 3657.8584 -3388.6279 3657.7515 C-3389.2793 3657.8142 L-3388.7119 3657.8916 L-3388.8843 3658.4482 L-3388.8633 3658.4292 -3388.8489 3658.417 -3388.8264 3658.3955 C-3387.8665 3658.1353 -3388.7449 3659.21 -3387.7617 3658.8486 Cf-3387.8391 3659.0303 m-3387.8992 3659.0654 -3387.9519 3659.1079 -3387.9929 3659.167 C-3387.9023 3659.1582 -3387.8672 3659.1016 -3387.8391 3659.0303 Cf-3383.9172 3659.9482 m-3383.8679 3659.9292 -3383.8145 3659.9031 -3383.7473 3659.8599 c-3383.7793 3659.8806 -3383.8535 3659.9075 -3383.9172 3659.9482 Cf-3412.6584 3659.167 m-3412.6416 3659.3311 -3412.0823 3659.668 -3412.0923 3659.2407 C-3412.0923 3659.2407 L-3412.2583 3659.1982 -3412.4255 3659.1531 -3412.5935 3659.1062 C-3412.6584 3659.167 Lf-3373.2336 3657.46 m-3373.2959 3657.4482 -3373.3584 3657.4424 -3373.4209 3657.4502 C-3373.4343 3657.4712 -3373.4473 3657.4951 -3373.4573 3657.5166 C-3373.4192 3657.5796 -3373.2959 3657.5015 -3373.2336 3657.46 Cf-3387.1631 3657.6052 m-3387.2656 3657.6707 -3387.3113 3657.7383 -3387.3359 3657.8064 C-3387.2695 3657.772 -3387.2083 3657.7173 -3387.1631 3657.6052 Cf-3373.1985 3658.4783 m-3373.1191 3658.6006 -3373.0022 3658.7871 -3372.9856 3658.9502 C-3372.8232 3658.9539 -3372.7092 3658.7295 -3372.5439 3658.6494 C-3372.7305 3658.7119 -3372.9463 3658.668 -3373.1985 3658.4783 Cf-3372.5305 3658.6416 m-3372.5352 3658.6455 -3372.5398 3658.6475 -3372.5439 3658.6494 C-3372.5393 3658.6494 -3372.5352 3658.6443 -3372.5305 3658.6416 Cf*u1 D-3412.9912 3658.9856 m-3413.0393 3659.0176 -3413.0889 3659.0479 -3413.1399 3659.0752 C-3413.0625 3658.96 L-3413.1912 3658.9182 -3413.3191 3658.8774 -3413.4473 3658.8311 C-3413.4937 3658.8584 -3413.5439 3658.8843 -3413.6057 3658.8982 C-3413.5808 3658.8843 -3413.5615 3658.8384 -3413.5496 3658.792 C-3413.5913 3658.7764 -3413.6321 3658.7593 -3413.6729 3658.7422 C-3413.9792 3659.1851 -3414.7417 3659.5088 -3414.9617 3659.7695 C-3415.2527 3659.9592 -3415.6089 3660.0664 -3415.8323 3660.0313 C-3415.6252 3660.041 -3415.3503 3659.9512 -3415.4329 3659.707 C-3415.8533 3659.4512 -3416.0576 3658.7173 -3416.7832 3659.3486 C-3416.3577 3659.3384 L-3417.3145 3660.2896 L-3417.6497 3659.8955 -3416.8369 3659.8142 -3416.7041 3659.4727 C-3417.4482 3659.9414 -3418.0671 3658.6895 -3418.4121 3659.5127 C-3418.4607 3659.0244 -3418.5422 3658.21 -3419.0305 3658.2583 C-3418.6785 3658.8142 -3419.3232 3658.6155 -3419.0344 3659.2119 C-3419.2031 3659.4912 -3419.5791 3659.0352 -3419.6072 3659.4016 C-3419.5615 3659.1992 L-3420.3953 3658.4263 -3420.6682 3659.6375 -3421.0249 3660.0352 C-3422.0232 3660.2344 -3422.4817 3659.9182 -3423.2959 3660.0015 C-3423.3279 3659.6743 -3423.5496 3658.7744 -3423.8762 3658.8086 C-3424.0281 3659.2515 -3424.7649 3659.4558 -3424.8401 3660.0222 C-3424.2561 3660.26 -3424.3623 3659.5479 -3424.0127 3659.415 C-3423.7217 3660.0093 -3423.9863 3660.0022 -3423.5889 3660.3584 C-3423.9097 3660.1272 -3425.0383 3660.668 -3425.3896 3660.1104 C-3425.2656 3660.0313 L-3425.8264 3659.6936 -3425.9336 3658.291 -3426.8679 3659.1392 C-3427.3137 3659.4871 L-3427.2922 3659.4307 -3427.2898 3659.3643 -3427.2783 3659.3135 C-3428.0081 3659.2544 -3427.8088 3658.6096 -3428.6145 3659.1184 c-3428.5522 3659.0791 -3428.5913 3659.0166 -3428.5281 3658.9783 C-3428.9873 3658.6592 -3429.4504 3659.2998 -3429.7976 3659.4336 C-3430.0095 3658.96 -3429.7473 3658.9683 -3429.6162 3658.6262 C-3430.4241 3658.4424 -3431.2959 3659.2544 -3431.7976 3659.8311 C-3432.3184 3659.5535 L-3432.0095 3659.3584 -3431.6321 3658.8599 -3431.7263 3658.5742 C-3432.0127 3658.668 -3431.9573 3658.8928 -3432.3623 3658.8013 C-3432.2932 3658.499 -3432.1233 3658.2173 -3431.9329 3657.8367 C-3432.7705 3657.3311 -3432.1201 3658.9092 -3432.7063 3657.9814 C-3432.9695 3657.9751 -3433.1223 3658.417 -3433.1511 3658.7822 C-3433.6279 3658.3035 L-3433.6809 3658.7695 -3434.2695 3658.7959 -3434.6553 3658.8662 C-3434.7024 3659.0664 -3434.3447 3659.3623 -3434.1985 3659.1814 C-3434.2273 3659.5479 -3434.6377 3659.7192 -3434.9016 3659.7124 C-3434.9983 3658.7371 -3436.6296 3659.8535 -3436.3176 3658.7039 C-3437.5032 3659.021 -3439.1687 3659.1199 -3439.9512 3659.5264 C-3440.2092 3659.2571 -3440.7351 3659.2432 -3440.4199 3658.7854 C-3441.3743 3658.7822 -3441.8665 3659.7832 -3442.8137 3659.5166 C-3442.8921 3659.3943 -3442.3855 3659.5078 -3442.4192 3659.1814 C-3443.0383 3659.5732 -3443.5457 3658.7695 -3444.5063 3659.0303 C-3444.3447 3659.0127 -3444.2976 3658.8115 -3444.2751 3658.71 C-3444.2583 3658.8716 -3444.6687 3659.0454 -3444.9172 3659.2014 C-3445.0569 3659.1184 -3444.7312 3659.0854 -3444.8096 3658.96 C-3446.6653 3658.4871 -3448.0791 3659.8135 -3449.9248 3659.7695 c-3449.3977 3659.7822 -3449.1985 3659.1353 -3449.1929 3658.8716 C-3449.7092 3658.8599 L-3449.9082 3659.1814 -3450.2959 3659.1814 -3450.6201 3659.4224 C-3450.6599 3659.3013 -3450.8176 3659.1707 -3450.6567 3659.0176 C-3451.6768 3658.3643 -3452.25 3660.1982 -3453.5 3659.8623 C-3451.9863 3658.5591 L-3452.3608 3658.1052 L-3451.6953 3657.5127 L-3452.0928 3657.1553 -3452.4385 3657.9814 -3452.4863 3657.4912 C-3452.4023 3657.3535 -3452.2 3657.3975 -3452.1936 3657.1328 C-3452.5752 3656.9414 -3452.6052 3657.3064 -3452.8921 3657.4016 C-3452.1362 3656.4053 -3450.6543 3656.4207 -3449.8567 3656.1768 C-3449.7312 3656.0974 -3449.9641 3656.417 -3449.9863 3656.5176 C-3449.6609 3656.4856 -3449.4656 3656.7959 -3449.0559 3656.623 C-3448.8015 3656.2014 -3449.25 3656.3135 -3449.4519 3656.2695 C-3449.4241 3655.9031 -3449.3225 3655.9253 -3449.0977 3655.8699 C-3449.0488 3656.3584 -3447.8633 3656.0435 -3447.5735 3656.6392 C-3446.3721 3656.4856 -3447.7656 3655.375 -3446.5928 3655.5867 C-3446.2424 3656.1455 L-3445.5615 3655.7139 -3444.6809 3655.3311 -3443.9104 3655.4502 C-3444.0728 3655.4683 L-3444.1809 3655.707 -3444.0022 3655.8542 -3443.9231 3655.9768 C-3443.3408 3656.2158 -3442.8176 3655.5376 -3442.4648 3656.0967 C-3441.8008 3655.5022 -3440.6936 3655.063 -3439.9343 3654.7566 C-3439.7295 3655.4932 -3440.9248 3655.3806 -3441.2407 3655.8411 C-3440.5496 3655.8384 L-3440.9768 3655.8486 -3441.1455 3656.1287 -3441.4016 3656.5479 C-3440.7959 3656.6848 -3440.5967 3656.04 -3440.0225 3655.8535 C-3440.0671 3656.0535 -3439.9905 3656.1768 -3439.7256 3656.1814 C-3439.6504 3655.6936 L-3439.6455 3655.7334 -3439.6162 3655.7703 -3439.5344 3655.8013 C-3438.5127 3655.5022 L-3438.7295 3655.2935 -3438.74 3654.8672 -3439.0039 3654.8623 C-3438.9097 3655.1475 -3439.1335 3655.2039 -3439.3977 3655.1963 C-3439.1663 3654.8774 -3439.6553 3654.9272 -3439.6497 3654.6631 C-3439.1201 3654.6763 -3438.4695 3654.6104 -3438.1223 3654.4768 C-3438.0095 3654.9272 L-3437.5049 3655.041 -3436.9719 3654.7896 -3436.6296 3654.9207 C-3436.7375 3655.1592 L-3436.1321 3655.2979 -3435.5359 3655.0078 -3434.9983 3655.4473 C-3434.4583 3654.9326 -3433.7783 3654.5039 -3433.3369 3653.9646 C-3433.1008 3653.3843 -3431.7522 3654.6951 -3431.1433 3653.8774 C-3431.1023 3653.9395 -3431.5615 3654.3142 -3431.7693 3654.5344 C-3431.3643 3654.6243 -3431.0422 3653.9016 -3430.9153 3654.5132 C-3431.8242 3654.3076 -3430.8665 3655.0015 -3431.2759 3655.1753 C-3430.8503 3655.1638 -3430.4016 3655.0535 -3430.1929 3654.8352 C-3430.8816 3654.8398 -3429.9482 3653.9893 -3430.6455 3654.2559 C-3430.1052 3653.7412 -3429.3679 3653.5352 -3428.7241 3653.7344 C-3428.7305 3653.999 -3428.6511 3654.1216 -3428.4111 3654.2312 C-3428.2175 3653.8486 L-3427.9163 3653.9182 -3428.8 3654.3013 -3428.1936 3654.4382 C-3427.5696 3653.7832 -3426.3145 3654.8096 -3426.0413 3653.5974 C-3425.5657 3654.0767 -3426.9463 3654.083 -3426.2295 3654.668 C-3426.6465 3655.1062 -3427.2217 3654.6052 -3427.3591 3655.21 C-3426.9504 3655.0376 -3427.21 3655.7212 -3426.9463 3655.7271 C-3426.4905 3655.3542 L-3426.5913 3655.3311 L-3425.8264 3654.7603 -3424.6145 3655.0344 -3423.6377 3654.9375 C-3422.8103 3654.3279 -3422.2407 3653.4482 -3421.2483 3653.5144 C-3421.5413 3653.8716 -3420.4241 3653.8584 -3421.0488 3654.5132 C-3420.5896 3654.8286 -3420.1362 3654.4551 -3420.1272 3654.1907 C-3420.5313 3654.1006 -3420.2693 3654.1062 -3420.6096 3653.9768 C-3420.3799 3653.6563 -3419.8503 3653.6707 -3419.6328 3653.8799 C-3419.7336 3653.856 -3419.6953 3653.9182 -3419.7175 3654.0176 C-3419.2351 3654.2334 -3419.4863 3653.6995 -3419.1377 3653.5664 C-3419.0271 3654.0144 -3418.3679 3653.6863 -3418.0496 3653.9182 C-3417.5879 3653.2791 L-3417.8416 3653.6992 -3417.1455 3653.4326 -3417.0728 3653.8184 C-3416.7417 3653.5222 -3416.4641 3653.0022 -3415.96 3653.1155 C-3416.1682 3653.3352 -3415.5 3653.4326 -3415.4912 3653.8584 C-3414.6279 3654.2659 -3414.0615 3652.6963 -3413.2439 3653.3064 C-3413.2693 3653.4063 -3413.4343 3653.6863 -3413.1953 3653.7935 C-3413.0071 3653.6743 -3412.6775 3653.7246 -3412.4761 3653.6782 C-3412.4824 3653.6904 L-3412.4785 3653.6863 -3412.4761 3653.6814 -3412.4719 3653.6782 C-3412.3733 3653.6553 -3412.3113 3653.6016 -3412.3088 3653.499 C-3411.9641 3653.0823 -3411.7864 3652.6553 -3411.1079 3652.3013 C-3411.1577 3651.8135 -3411.7305 3652.0022 -3411.9785 3652.1592 C-3412.1929 3652.6416 L-3412.3977 3651.9053 -3412.8047 3652.7695 -3412.9607 3652.521 C-3412.5537 3651.6582 -3411.3816 3651.8699 -3410.6785 3651.3398 C-3411.1072 3650.6592 -3412.0398 3650.5535 -3412.8535 3650.6353 C-3412.4951 3650.9287 L-3412.9209 3650.9382 L-3412.5088 3651.457 L-3412.9121 3651.3662 -3413.2607 3651.499 -3413.6252 3651.4692 C-3413.1985 3651.46 -3413.0322 3652.1328 -3413.2737 3652.0264 C-3413.7493 3651.5479 -3413.7693 3652.3384 -3414.1328 3652.3096 C-3413.9304 3652.3542 -3413.6672 3652.3623 -3413.8369 3652.6416 C-3414.5537 3652.0552 -3414.7473 3652.4375 -3415.3992 3651.8115 C-3415.3184 3652.625 -3416.2136 3651.8928 -3416.3113 3652.5591 C-3416.0088 3652.6272 L-3416.6504 3653.1187 L-3417.2424 3652.4558 -3416.1262 3652.4424 -3417.0271 3651.9739 C-3417.8584 3651.8928 -3417.8369 3652.7471 -3418.4905 3652.8096 C-3418.2751 3652.3286 -3417.7568 3651.915 -3417.2295 3651.9287 C-3417.5488 3651.6963 L-3417.3799 3651.417 -3416.6504 3651.4756 -3416.2864 3651.5044 C-3416.8879 3652.0576 -3416.0049 3651.6743 -3415.7312 3652.1062 C-3415.6809 3651.6406 -3416.0671 3651.7139 -3415.6111 3651.3398 C-3416.0383 3651.3486 -3416.1008 3651.3875 -3416.6443 3651.2119 C-3415.4695 3651.4238 -3415.5879 3649.5933 -3414.5625 3649.9856 C-3415.0352 3650.1963 -3414.3977 3650.6582 -3414.3408 3650.8843 C-3414.1184 3650.8279 -3413.6672 3650.7173 -3413.4817 3650.6006 C-3413.6497 3649.9272 L-3413.0522 3649.6353 -3412.8447 3651.0623 -3412.1553 3650.3672 C-3412.0657 3649.9646 -3412.7617 3650.2312 -3412.6377 3650.1531 C-3411.6943 3649.73 -3411.3545 3650.8142 -3410.5168 3651.3223 C-3410.4695 3651.1199 -3410.4792 3650.6936 -3410.1863 3650.3367 C-3410.2783 3650.7412 -3410.0615 3650.9482 -3410.3911 3651.2432 C-3410.1111 3651.415 -3409.7793 3651.1184 -3409.5322 3650.96 C-3410.1152 3650.7231 -3409.2937 3650.3799 -3409.1863 3650.1375 C-3408.8843 3650.2056 -3409.2783 3650.541 -3409.4641 3650.6582 C-3409.2217 3650.7659 -3408.9336 3651.3623 -3408.7959 3650.7566 C-3408.7864 3651.1814 -3409.4736 3651.8774 -3409.9231 3651.9871 C-3409.6201 3652.0552 L-3409.8289 3652.2734 -3409.8679 3652.2119 -3410.1687 3652.1455 C-3409.8743 3652.4756 -3409.9033 3652.8398 -3409.9719 3653.1431 C-3410.0105 3653.0811 -3409.9504 3653.0422 -3409.9873 3652.9814 C-3410.2295 3652.873 -3410.4153 3652.9893 -3410.3591 3653.2158 C-3410.5769 3653.7876 -3410.0232 3653.5732 -3409.8591 3653.8584 C-3409.7351 3653.8213 -3409.6111 3653.7822 -3409.4895 3653.7432 C-3408.2312 3651.9072 L-3407.6936 3651.6936 -3407.4519 3652.1328 -3407.0481 3652.4104 C-3406.9373 3651.9182 L-3406.4695 3651.9692 -3406.0281 3652.125 -3406.3279 3652.7471 C-3406.3447 3652.583 -3406.4065 3652.6216 -3406.5081 3652.5974 C-3406.5215 3652.665 -3406.5449 3652.7124 -3406.5745 3652.7515 C-3406.5842 3652.7803 -3406.5896 3652.8086 -3406.5977 3652.8367 C-3406.0967 3652.6782 -3405.7839 3652.5752 -3405.7551 3652.5566 C-3406.6057 3653.2695 -3405.7976 3653.4482 -3405.9399 3654.3184 C-3405.0808 3654.0352 L-3405.6016 3653.7593 -3405.0903 3653.6096 -3404.9055 3653.4912 C-3404.8545 3653.9814 -3404.2136 3653.4871 -3403.9121 3653.5552 C-3403.9343 3653.6563 L-3403.6553 3653.8264 -3403.1663 3653.7783 -3402.8184 3653.6455 C-3402.8342 3653.4814 -3402.3879 3652.6807 -3402.1736 3652.1982 C-3402.7705 3652.0144 -3402.4163 3651.8184 -3402.4641 3651.5144 C-3402.4023 3651.5422 -3402.2913 3651.5479 -3402.2783 3651.4856 C-3402.1929 3651.3462 -3402.3943 3651.2998 -3402.4111 3651.1375 C-3403.0457 3651.3662 -3403.6985 3651.4307 -3403.9573 3652.1143 C-3403.7625 3652.4238 -3403.6252 3651.8184 -3403.4072 3652.0254 C-3403.7217 3652.4856 -3404.1272 3652.3943 -3404.6543 3652.3806 C-3404.8271 3651.9712 L-3405.3577 3652.1936 L-3405.1362 3651.9768 -3405.2695 3651.5479 -3404.7129 3651.4646 C-3404.7839 3651.0791 -3405.2649 3651.5535 -3405.6057 3651.4238 C-3405.78 3651.9683 L-3405.7129 3651.665 -3406.4424 3651.6062 -3405.9241 3651.1924 C-3405.0808 3650.7471 L-3405.3152 3650.375 L-3404.6023 3650.2703 L-3404.7705 3650.5522 L-3403.6252 3650.1753 -3404.4329 3651.6353 -3403.28 3650.9927 C-3402.9192 3650.333 -3402.5313 3650.2622 -3401.8247 3650.4224 C-3402.3359 3650.5703 -3401.8772 3650.8875 -3402.0696 3651.2695 C-3401.5481 3651.5447 -3401.3721 3651.0015 -3401.1016 3650.7432 C-3400.9688 3651.0923 -3400.8743 3651.3774 -3401.3401 3651.3264 C-3401.3984 3652.0552 -3400.7273 3651.1995 -3400.6848 3651.9512 C-3399.1416 3651.9287 -3399.4482 3649.5254 -3397.6443 3650.4639 C-3397.7119 3650.7659 L-3396.5664 3650.3894 -3395.9055 3650.7515 -3394.8447 3650.5127 C-3394.0095 3651.2832 L-3394.1963 3651.4016 -3394.6985 3651.9771 -3394.4641 3652.3486 C-3394.8704 3651.5686 -3395.3015 3651.8411 -3395.7393 3651.4238 C-3395.7839 3651.6262 -3395.6057 3651.772 -3395.5281 3651.8975 C-3395.7922 3651.8894 -3395.9248 3651.541 -3396.2737 3651.6763 C-3396.2568 3651.8367 -3395.8762 3652.0303 -3396.1631 3652.125 C-3396.6377 3651.6455 L-3397.2727 3651.8743 -3396.9504 3652.7935 -3397.6963 3652.5732 C-3397.5576 3652.1455 -3397.2744 3651.5264 -3396.9856 3651.4238 C-3397.3264 3651.3311 -3396.5313 3651.165 -3396.8423 3650.9092 C-3397.3333 3651.5435 -3397.5703 3651.041 -3398.2231 3651.4382 C-3398.1465 3651.3496 -3398.1262 3651.2256 -3397.9656 3651.1863 C-3398.9128 3650.9182 L-3398.6785 3651.2896 -3399.6953 3651.3264 -3399.6072 3651.8774 C-3398.5977 3652.1052 -3398.8943 3651.772 -3397.7439 3652.0854 C-3398.0696 3652.21 -3398.4895 3652.7703 -3398.6863 3653.2854 C-3398.6963 3653.2646 -3398.7129 3653.2471 -3398.7483 3653.2371 C-3398.9241 3653.7822 -3398.7449 3653.9287 -3398.7483 3654.8806 C-3398.2231 3654.2039 -3397.8721 3654.7615 -3397.2527 3654.3716 C-3397.1362 3653.8496 -3397.6121 3653.7056 -3397.9199 3653.8408 C-3397.3743 3653.4951 L-3397.4817 3653.7344 L-3396.0967 3653.9104 L-3396.3591 3653.9382 -3396.4482 3654.2407 -3396.5852 3654.4688 C-3396.4065 3654.4893 -3396.2295 3654.6272 -3396.0413 3654.7783 C-3396.0808 3654.2803 -3396.0559 3653.9287 -3395.8816 3653.9382 C-3394.9905 3654.0566 -3394.4951 3654.5039 -3394.1663 3655.0728 C-3394.1321 3655.0615 -3394.0935 3655.0491 -3394.0625 3655.0376 C-3394.2119 3654.5264 -3393.4297 3654.1199 -3393.1536 3653.5974 C-3393.1672 3654.1262 -3392.6943 3653.915 -3392.4375 3654.1848 C-3392.3008 3653.5791 -3392.4832 3652.7432 -3392.7959 3652.2483 C-3393.3984 3652.8013 -3393.1335 3652.8064 -3393.4182 3653.5923 C-3394.3848 3654.1155 L-3394.1687 3653.6328 L-3394.6511 3653.4199 -3395.1145 3654.0576 -3395.0791 3653.4292 C-3394.8242 3653.0103 -3394.4033 3653.2646 -3394.1504 3652.8442 C-3394.4695 3652.6143 L-3393.9065 3651.9968 -3394.1809 3653.2092 -3393.4993 3652.7783 C-3393.75 3652.2432 -3393.4375 3652.7393 -3393.1455 3652.3806 C-3393.3799 3652.0093 -3394.3457 3652.5344 -3394.1409 3651.6262 C-3393.7864 3651.2295 -3392.9482 3652.6904 -3392.4792 3651.7876 C-3392.5022 3651.8894 L-3391.8103 3652.0078 -3391.5671 3651.4893 -3391.3081 3651.1631 C-3391.0137 3651.457 -3390.6072 3651.0435 -3390.2881 3651.0103 C-3390.2959 3651.2744 L-3389.8457 3651.1638 L-3390.0601 3651.6455 -3390.3733 3651.1504 -3390.76 3651.2212 C-3390.7119 3651.7119 L-3391.1577 3651.1294 -3391.4551 3652.0144 -3391.8008 3652.4375 C-3391.2976 3652.0127 -3390.3799 3652.5576 -3390.2617 3651.5974 C-3389.9504 3652.0942 L-3389.8015 3651.915 L-3389.5696 3652.2871 -3389.8064 3652.8699 -3390.2561 3652.9814 C-3390.3342 3652.8574 -3390.3733 3652.7959 -3390.3496 3652.6936 C-3390.5583 3652.9126 -3390.75 3653.2935 -3391.2551 3653.1807 C-3390.9856 3652.9207 L-3391.6145 3652.8853 -3392.1863 3653.0752 -3392.4016 3653.5576 C-3391.4937 3653.7622 -3390.6008 3653.8054 -3389.7483 3653.7832 C-3389.4968 3652.6743 -3389.1985 3652.0522 -3389.0703 3651.021 C-3388.4983 3650.8311 -3387.7217 3650.6895 -3387.2249 3651.0664 C-3387.2705 3651.2695 L-3387.0281 3651.375 -3386.8047 3651.3184 -3386.6184 3651.2014 C-3386.3623 3651.4727 -3386.7937 3651.7471 -3386.6152 3651.8936 C-3385.7959 3651.5479 L-3385.8464 3652.0144 -3386.5359 3652.0166 -3386.8633 3652.0491 C-3386.8015 3652.0103 -3386.6768 3651.9326 -3386.7168 3651.8699 C-3387.0977 3651.6782 -3387.8071 3652.4727 -3387.9736 3651.7979 C-3388.1592 3651.915 -3387.5967 3651.2998 -3388.2249 3651.2646 C-3388.6455 3651.0103 -3388.7825 3651.6155 -3388.8264 3651.8184 C-3388.8333 3652.083 -3388.1663 3652.1807 -3388.3977 3652.499 C-3388.0703 3652.4646 -3387.9399 3652.125 -3387.5212 3652.3799 C-3387.8457 3652.4119 -3388.2864 3652.9482 -3388.4592 3652.5376 C-3389.1008 3653.0303 -3389.0088 3654.2703 -3388.7063 3654.3384 C-3388.7783 3653.9502 -3387.5359 3653.8599 -3388.3772 3653.3535 C-3387.9993 3652.8535 -3387.3088 3652.8496 -3386.8145 3652.5376 C-3386.8369 3652.6375 L-3386.2231 3652.5127 L-3386.3096 3652.6504 -3386.4951 3652.7695 -3386.5012 3653.0313 C-3385.6511 3652.3232 L-3386.1296 3652.7998 -3385.3545 3652.6543 -3385.1367 3652.8643 C-3385.0457 3652.46 -3384.7136 3652.1638 -3385.0322 3651.9326 C-3385.3904 3651.6392 -3385.2407 3652.1504 -3385.5664 3652.1814 C-3385.1052 3651.5447 L-3385.0657 3651.6062 L-3384.7881 3651.0854 L-3384.1599 3651.1216 -3385.0625 3652.2979 -3384.2576 3651.7876 C-3384.3623 3651.0767 L-3383.4304 3651.1814 -3382.2336 3651.9814 -3381.5752 3651.6531 C-3381.7568 3652.0576 -3381.8369 3652.7083 -3381.5872 3653.0933 C-3381.8711 3652.9712 -3382.4417 3652.9968 -3382.8489 3653.063 C-3382.9272 3652.9382 -3382.3401 3652.2227 -3381.8977 3652.376 C-3382.1121 3651.2119 -3383.0105 3653.0791 -3383.0625 3651.8982 C-3384.1897 3651.4871 -3383.9033 3653.0352 -3384.8601 3652.3433 C-3384.8733 3652.8699 -3385.1321 3652.6006 -3385.1824 3653.0654 C-3384.8992 3653.9253 -3383.9033 3653.0352 -3383.2825 3653.3367 C-3383.3433 3653.375 -3383.4656 3653.4539 -3383.4895 3653.5535 C-3383.0457 3653.7083 -3382.8623 3653.5908 -3382.5522 3653.3955 C-3382.5913 3653.333 L-3382.0496 3652.8184 -3382.2561 3653.7256 -3381.9373 3653.9583 C-3381.8137 3653.8799 -3381.3704 3654.0313 -3381.4417 3653.6455 C-3380.8643 3654.1462 L-3380.8921 3653.5576 L-3380.5664 3653.5222 -3380.4951 3653.9119 -3380.2 3653.5535 C-3380.1863 3653.0264 L-3380.9951 3652.8442 L-3380.5852 3652.6719 -3380.8809 3652.3398 -3380.4304 3652.2295 C-3380.9336 3652.8054 -3380.0745 3652.5215 -3380.0249 3653.0103 C-3379.6936 3652.7139 L-3379.7783 3652.8542 L-3379.5183 3653.125 -3379.4688 3652.6582 -3379.1653 3652.7271 C-3379.5232 3652.4336 -3379.7576 3652.063 -3380.2136 3652.4375 C-3379.8816 3652.1416 -3379.2231 3651.8135 -3379.0615 3651.7959 C-3378.7129 3651.5752 -3378.4695 3651.9768 -3378.1433 3652.0352 C-3378.7693 3652.2471 -3377.9241 3653.6328 -3379.1785 3653.2544 C-3379.1553 3653.1531 -3379.0537 3653.1763 -3379.0144 3653.2383 C-3379.1816 3652.5654 -3379.7664 3653.2803 -3380.0383 3653.5376 C-3379.9683 3653.9253 -3380.2527 3654.021 -3379.7705 3654.2344 C-3379.9287 3653.9871 -3379.3643 3653.3716 -3378.9055 3653.6895 C-3378.9863 3654.5176 L-3378.3184 3654.6155 L-3378.3809 3654.6553 L-3378.1296 3655.1895 -3377.6682 3654.5522 -3377.2083 3654.8662 C-3376.8762 3654.5703 -3375.6023 3654.8054 -3376.1504 3653.9382 C-3375.7375 3654.457 -3375.3752 3653.7959 -3374.9248 3653.6848 C-3375.4863 3653.3462 L-3374.8225 3652.752 -3375.0137 3653.1353 -3374.4824 3652.1924 C-3374.4287 3652.4182 -3374.3103 3652.6052 -3374.4182 3652.8442 C-3373.5264 3652.8875 -3372.2527 3653.1216 -3371.7295 3652.4424 C-3371.1008 3652.479 -3371.0022 3653.4558 -3370.1201 3653.0728 C-3369.9343 3652.9558 -3370.2649 3652.2979 -3369.6809 3652.5352 C-3369.6416 3652.5974 -3370.2432 3653.1504 -3369.5928 3653.0854 C-3369.1296 3652.4473 -3368.5049 3653.4375 -3367.9023 3652.8843 C-3367.5842 3653.1143 -3367.0322 3653.0264 -3367.1472 3653.5313 C-3367.6511 3653.417 -3368.3643 3653.5222 -3368.4729 3653.7646 C-3368.4033 3653.46 -3368.8313 3653.4692 -3368.46 3653.2344 C-3369.2217 3652.8535 -3368.9543 3653.5479 -3369.6377 3653.2871 C-3369.6848 3653.4893 -3369.2864 3653.8455 -3369.1399 3653.665 C-3369.1367 3654.3542 -3370.4873 3653.9983 -3369.8799 3654.8247 C-3369.1497 3654.8843 -3368.9329 3653.4473 -3368.3 3654.1726 C-3368.5537 3654.5923 -3368.9504 3654.2371 -3369.2727 3654.96 C-3368.7527 3655.2383 L-3368.3752 3654.7393 L-3368.3977 3654.8411 L-3367.4792 3655.4727 -3367.5481 3654.1318 -3366.7263 3653.7854 C-3367.2024 3653.3076 -3366.6162 3652.5908 -3366.9744 3652.2979 C-3366.4248 3652.21 -3366.0212 3652.3013 -3366.0176 3652.9912 C-3367.0457 3653.5535 -3366.0759 3653.7207 -3367.0264 3654.4075 C-3366.8704 3654.6553 -3367.2527 3655.417 -3366.6863 3655.4932 C-3366.0481 3655.0015 -3366.8772 3654.9182 -3366.2407 3654.6907 C-3366.2031 3654.752 -3366.1641 3654.8142 -3366.1863 3654.9163 C-3365.8936 3654.5576 -3365.8447 3655.0454 -3365.4905 3654.6494 C-3365.5745 3654.7876 L-3365.1377 3655.2056 -3365.0967 3654.3135 -3364.7207 3654.7695 C-3364.8711 3654.2571 -3364.4683 3654.3496 -3364.2351 3654.0303 C-3364.6162 3653.8367 -3364.8225 3653.1016 -3365.5745 3653.1431 C-3365.6653 3653.5479 -3365.6104 3653.772 -3365.9192 3653.9683 C-3365.4304 3653.9182 L-3365.5359 3653.9856 -3365.6162 3654.0896 -3365.7129 3654.1707 C-3366.1824 3653.96 L-3365.5872 3653.6719 -3365.8601 3653.2393 -3365.6072 3652.8184 C-3365.0625 3652.9951 -3365.1577 3652.707 -3364.8152 3652.8384 C-3364.8496 3653.4326 -3363.7649 3653.8535 -3363.1377 3654.2344 C-3363.2351 3654.2119 -3363.3608 3654.2271 -3363.4287 3654.2119 C-3363.8843 3654.5867 -3363.1152 3654.707 -3363.0984 3654.8699 C-3362.7664 3654.5732 L-3362.8289 3654.6143 -3362.9153 3654.752 -3362.7737 3654.8367 C-3362.3242 3654.7256 -3362.3503 3654.1375 -3361.9016 3654.0264 C-3361.8679 3654.3535 -3362.2473 3654.8496 -3361.9683 3655.021 C-3361.8721 3655.3064 -3361.5657 3656.0654 -3360.9695 3655.7764 C-3360.9272 3655.6504 -3360.7727 3655.5811 -3360.5935 3655.5264 C-3360.6184 3655.5447 -3360.6497 3655.5576 -3360.6609 3655.5811 C-3360.2649 3655.9375 L-3360.6023 3656.4951 -3360.9473 3655.6743 -3361.2864 3656.2344 C-3361.3152 3656.7646 L-3361.5791 3656.7659 -3361.9375 3656.9956 -3362.1023 3657.2703 C-3361.7 3657.3604 -3361.6152 3657.2212 -3361.1653 3657.1104 C-3361.1023 3657.4463 -3361.4192 3657.6951 -3361.4648 3657.7312 C-3361.3977 3657.4292 L-3361.9343 3656.9902 -3362.2 3657.9375 -3362.8679 3657.8384 C-3362.9688 3657.8176 -3362.9072 3657.7783 -3362.8848 3657.6772 C-3363.4255 3658.1907 -3363.9561 3657.4871 -3364.4817 3658.165 C-3364.3103 3657.8853 L-3364.6682 3658.1104 -3365.3679 3658.6328 -3366.0671 3659.1375 C-3366.0728 3659.3442 L-3365.9951 3659.4683 -3366.2576 3659.46 -3366.3984 3659.3774 C-3366.3977 3659.3743 L-3366.7483 3659.6262 -3367.0852 3659.8584 -3367.3608 3660.0313 C-3367.2727 3660.1592 -3367.1599 3660.2659 -3367.0305 3660.2959 C-3366.9209 3660.0535 -3366.2783 3660.252 -3366.3665 3659.7014 C-3366.0696 3660.0344 -3365.5913 3659.5576 -3365.3733 3659.7659 C-3365.7705 3659.4126 -3365.0967 3659.2471 -3365.0271 3658.9424 C-3364.8936 3659.291 -3364.4385 3658.917 -3364.4905 3659.3843 C-3364.4121 3659.5059 -3364.6855 3659.0742 -3364.8545 3659.3542 C-3365.2705 3659.7896 -3364.0928 3659.7371 -3364.6111 3660.1504 C-3363.9519 3659.8232 -3363.0833 3659.9646 -3362.4033 3659.5352 C-3362.7839 3659.3442 L-3362.4817 3659.4126 -3361.7664 3659.3086 -3361.7129 3659.5344 C-3361.9375 3659.5886 -3362.2 3659.583 -3362.4873 3659.6768 C-3362.5012 3660.2039 -3361.7969 3659.6726 -3361.7649 3659.999 C-3360.9304 3659.1262 L-3361.2959 3659.0967 L-3361.0657 3658.7764 -3360.3015 3659.1631 -3359.7351 3659.2371 C-3360.0601 3659.9592 -3360.5896 3659.2559 -3361.1855 3659.5454 C-3361.6184 3659.8184 -3360.9182 3660.2422 -3361.3279 3660.415 C-3361.2217 3660.583 -3360.9543 3660.563 -3360.8225 3660.3806 C-3360.6609 3660.5127 L-3361.0264 3661.168 -3361.8457 3661.0222 -3362.3911 3661.5867 C-3362.3433 3661.5166 -3362.3015 3661.4424 -3362.2864 3661.3662 C-3362.7063 3661.1118 -3363.1328 3661.1216 -3363.5422 3661.2959 C-3363.3257 3661.5022 -3363.24 3661.3623 -3363.1162 3661.2854 C-3363.1008 3661.4482 -3363.4873 3661.5176 -3363.6335 3661.6982 C-3363.2527 3661.8894 -3363.5625 3662.0854 -3363.3215 3662.1936 C-3363.5696 3662.3496 -3363.7705 3662.3035 -3364.0728 3662.2344 C-3364.2295 3661.9871 -3363.9431 3661.8936 -3363.9751 3661.5686 C-3364.2864 3661.7646 -3364.4287 3660.9871 -3364.8843 3661.3623 C-3364.2783 3661.499 -3365.0439 3662.0686 -3365.2527 3662.2876 C-3365.1511 3662.3096 L-3365.3433 3662.6907 -3365.5063 3662.707 -3365.6392 3662.3584 C-3365.3911 3662.2014 -3365.1511 3662.3096 -3365.2217 3661.9224 C-3365.3855 3661.9395 -3365.5488 3661.9558 -3365.7344 3662.0728 C-3365.5657 3661.7935 L-3366.3799 3661.8743 L-3366.5088 3662.2158 -3366.7241 3662.6982 -3366.8369 3663.2014 C-3367.0322 3662.8928 -3367.3042 3663.1504 -3367.4895 3663.2695 C-3367.4033 3663.1272 L-3367.7625 3662.8352 -3368.5615 3663.0791 -3368.6289 3663.3806 C-3368.8855 3663.1118 -3366.8152 3661.457 -3368.6289 3661.7371 C-3369.3184 3661.7393 -3369.0583 3662.7014 -3369.4519 3663.0352 C-3369.4297 3662.9375 -3369.4688 3662.8743 V-3369.7705 3662.8035 -3369.8008 3663.1707 -3370.0488 3663.3264 C-3369.8679 3663.4727 -3369.6057 3663.479 -3369.5212 3663.3398 C-3369.6121 3663.7432 -3370.1497 3663.3035 -3370.3809 3663.6216 C-3370.0808 3663 -3370.9641 3663.3848 -3370.7312 3663.0654 C-3371.3313 3662.665 -3371.9729 3663.1572 -3372.2881 3663.6155 C-3372.6953 3662.8352 -3373.0022 3663.7192 -3373.6631 3663.3584 C-3373.5615 3663.3806 -3373.3772 3663.2646 -3373.2351 3663.3486 C-3372.8584 3662.8535 -3373.9199 3663.0886 -3373.3401 3662.6353 C-3373.4641 3662.7139 -3373.3489 3662.8982 -3373.2217 3662.8213 C-3372.9993 3662.7656 -3372.7898 3662.5479 -3372.8457 3662.3223 C-3373.3843 3661.8843 L-3373.1963 3661.7646 L-3374.0137 3661.1582 L-3374.0359 3661.2571 -3373.9592 3661.3806 -3373.9199 3661.4424 C-3374.8679 3661.1768 -3375.9519 3661.5144 -3376.7825 3661.4336 C-3376.9385 3662.8311 -3378.8271 3662.0313 -3379.4983 3662.8894 C-3379.3184 3662.4893 -3379.22 3661.7822 -3379.3313 3661.4912 C-3379.1816 3661.4326 -3378.8752 3660.8672 -3378.5359 3660.9856 C-3378.4817 3661.21 -3378.0625 3661.4639 -3378.3323 3661.7207 C-3377.3943 3661.5615 -3378.4592 3661.1079 -3378.1824 3660.5879 C-3379.2217 3660.7231 -3379.8313 3661.5422 -3380.4873 3661.8711 C-3380.5039 3661.7056 L-3380.9993 3662.0176 L-3380.5945 3662.1104 -3380.6145 3662.9031 -3381.1362 3662.6262 C-3381.0728 3662.5867 L-3381.3704 3662.2544 -3381.9895 3662.6455 -3382.4543 3662.5942 C-3382.7695 3663.0522 L-3383.2351 3663 -3383.2551 3662.1475 -3383.4065 3661.6367 C-3384.1362 3661.5767 -3384.5576 3662.2759 -3385.0759 3662.6907 C-3385.3103 3662.3184 -3386.4033 3662.2312 -3385.8242 3661.7803 C-3386.4824 3662.1079 -3386.3496 3664.1006 -3387.4785 3662.9968 C-3387.1855 3662.6375 L-3388.2649 3662.7124 -3389.8042 3663.4263 -3390.3015 3663.0488 C-3389.9033 3661.76 -3391.6497 3661.7371 -3391.8416 3660.4734 c-3391.7881 3660.7622 -3392.1936 3660.8584 -3392.2527 3661.0127 C-3392.3416 3660.8643 -3392.4895 3660.7207 -3392.6465 3660.9814 C-3392.2256 3661.2344 -3392.9424 3662.2935 -3392.1377 3661.7832 C-3392.5449 3662.6494 -3393.0696 3663.3264 -3393.9617 3663.2832 C-3393.9482 3662.7559 L-3393.2424 3662.9163 L-3393.3137 3662.5264 -3392.9504 3662.5566 -3392.8015 3662.3774 C-3394.1145 3662.0811 -3392.6296 3661.1431 -3393.9719 3661.2119 C-3394.1016 3661.5535 -3394.0176 3661.4126 -3394.3665 3661.5479 C-3394.2024 3661.5303 -3394.1729 3661.167 -3394.4373 3661.1592 C-3394.6912 3661.5811 L-3395.1599 3660.7014 -3393.9153 3661.0088 -3394.3152 3660.3911 C-3393.7969 3659.9771 -3392.8992 3659.7559 -3393.0664 3659.083 C-3393.9128 3658.8384 -3393.8279 3660.3433 -3394.7129 3660.0376 C-3394.8071 3659.7515 L-3395.1184 3659.9463 -3395.1687 3660.4104 -3395.3391 3660.6902 C-3395.3545 3660.5264 -3395.4336 3660.4053 -3395.6335 3660.3584 C-3396.1592 3661.0352 -3396.5081 3661.168 -3396.9929 3661.9075 C-3395.7024 3661.3535 -3395.8896 3662.4224 -3394.5576 3661.9287 C-3394.7664 3662.1475 -3395.7041 3662.3076 -3395.7617 3663.0352 C-3395.7493 3662.5078 L-3396.1824 3662.7822 -3396.6152 3663.0535 -3397.1592 3662.8799 C-3396.8271 3662.583 L-3397.5481 3662.9502 -3398.0256 3661.7822 -3398.5945 3662.6592 C-3398.3936 3662.707 -3398.2305 3662.6907 -3398.1064 3662.6104 c-3398.4775 3662.8462 -3398.9431 3662.7935 -3399.3464 3662.7039 C-3400.1809 3663.5752 L-3400.1736 3663.3135 -3400.7024 3663.2979 -3400.4473 3662.8799 C-3401.0481 3662.4783 -3401.3313 3663.2646 -3401.6785 3663.3955 C-3402.2937 3662.8352 -3401.1455 3663.1455 -3401.0852 3662.417 C-3401.9329 3662.1726 -3402.8313 3662.3936 -3403.3096 3662.8672 C-3403.1367 3662.9739 -3403.0527 3663.0654 -3403.0615 3663.1936 C-3403.0872 3663.0264 -3403.4287 3663.0703 -3403.6191 3663.0654 C-3403.75 3663.4075 L-3404.0671 3663.1763 -3404.0225 3662.9739 -3403.7527 3662.7158 C-3404.0559 3662.6494 -3404.4172 3663.3086 -3404.7295 3662.8142 C-3404.2119 3662.4016 -3403.5522 3662.7615 -3403.2825 3662.5044 C-3404.3643 3662.8423 -3404.3711 3661.46 -3405.7424 3661.8955 C-3405.7593 3661.7312 -3405.5271 3661.4126 -3405.7913 3661.4075 C-3406.4033 3661.5344 -3405.9512 3662.1143 -3406.1423 3662.4951 C-3405.6711 3662.2822 -3405.4519 3662.4912 -3405.1785 3662.9238 C-3405.3042 3663.2014 L-3405.3232 3663.0576 -3405.6191 3663.0491 -3405.7063 3662.9104 C-3405.7825 3663.4771 L-3405.7473 3662.8496 -3406.2207 3662.3716 -3406.5928 3662.6062 C-3406.2168 3663.0615 -3406.3184 3663.0376 -3406.2161 3663.752 C-3406.7393 3664.4292 -3406.8064 3663.0867 -3407.3928 3663.8035 C-3407.3489 3663.6016 -3406.8369 3663.4512 -3407.2793 3663.2979 C-3407.6455 3663.2703 -3407.5967 3663.7593 -3407.8423 3663.915 C-3407.5657 3663.3928 -3407.6367 3663.0044 -3407.3369 3662.3843 C-3406.6863 3662.3184 -3407.0745 3662.3911 -3406.4385 3662.1631 C-3406.9768 3661.7212 L-3406.4255 3661.6353 -3406.5759 3661.123 -3406.5305 3660.9224 C-3407.4719 3660.3911 -3407.24 3661.7168 -3407.8457 3661.5796 C-3408.1377 3661.9382 -3407.2783 3661.6553 -3407.7351 3662.0303 C-3408.3015 3661.9539 -3407.8643 3662.3716 -3408.5 3662.5974 C-3408.3936 3662.3584 L-3408.5879 3662.0479 -3408.78 3662.4307 -3409.0049 3662.4827 C-3409.2522 3662.6416 -3408.7249 3664.2998 -3409.7417 3664.3352 C-3409.6919 3664.1895 -3409.6736 3664.0967 -3409.6736 3664.0352 C-3408.6816 3659.6455 L-3409.7119 3659.6563 -3410.8992 3659.5344 -3412.0923 3659.2393 C-3412.3733 3658.3806 -3411.2407 3658.5313 -3411.3137 3658.1455 C-3410.7695 3658.3213 L-3410.8 3658.6851 -3411.9097 3658.4336 -3411.4182 3659.0767 C-3410.4573 3658.8142 -3410.0212 3659.2334 -3409.1096 3658.4827 C-3409.3928 3657.623 -3410.3103 3658.6353 -3410.9033 3657.9712 C-3410.6543 3658.0264 -3410.4441 3657.9326 -3410.24 3657.8096 C-3410.7969 3657.6995 -3411.3928 3657.5811 -3412.0264 3657.4482 C-3412.1687 3657.6563 L-3411.7417 3657.752 -3411.4463 3657.8264 -3411.4082 3657.8574 C-3411.9744 3657.7822 -3412.4519 3658.2583 -3412.4895 3658.8875 C-3412.3889 3658.9104 L-3412.5935 3659.1062 L-3412.7263 3659.0664 -3412.8591 3659.0264 -3412.9912 3658.9856 Cf-3449.6936 3658.8367 m-3449.6592 3658.7764 -3449.6321 3658.7056 -3449.6121 3658.6184 c-3449.6328 3658.71 -3449.6096 3658.7695 -3449.6936 3658.8367 Cf0 D-3401.9033 3656.875 m-3402.6584 3656.7832 -3403.4199 3656.6118 -3404.1455 3656.5352 C-3402.8359 3657.7791 -3401.9153 3658.7207 -3404.1008 3658.6963 C-3404.2439 3658.7854 L-3403.9583 3658.9382 -3403.4656 3658.957 -3403.0022 3658.8672 C-3402.6272 3658.4263 -3401.4172 3656.8064 -3401.4304 3656.6631 C-3401.5632 3656.3142 -3401.7568 3656.6951 -3401.9983 3656.5886 C-3401.9033 3656.875 Lf-3401.3665 3658.9583 m-3400.9385 3659.0967 -3401.0359 3658.8213 -3400.9695 3658.5732 C-3401.1201 3658.6052 -3401.2705 3658.6375 -3401.4192 3658.667 C-3401.3623 3658.7295 -3401.3342 3658.8176 -3401.3665 3658.9583 Cf1 D-3400.9951 3658.3252 m-3401.0432 3658.3184 -3401.0842 3658.3076 -3401.1057 3658.2744 C-3400.9951 3658.3252 Lf0 D-3409.3191 3658.0103 m-3409.3 3658.0044 -3409.2932 3657.999 -3409.2751 3657.9951 C-3409.3762 3657.9751 -3409.4775 3657.957 -3409.5833 3657.9375 C-3409.5422 3657.9771 -3409.4641 3658.0078 -3409.3191 3658.0103 Cf-3408.4504 3658.6184 m-3408.3489 3658.1638 L-3408.4431 3658.1475 -3408.5393 3658.1294 -3408.6377 3658.1118 C-3408.6052 3658.3176 -3408.5713 3658.4968 -3408.4504 3658.6184 Cf-3405.6584 3660.1118 m-3405.4824 3659.5664 -3404.8928 3659.5422 -3404.8567 3658.9126 C-3404.8191 3658.7515 -3404.9431 3658.6895 -3405.0823 3658.6375 C-3405.2375 3658.623 -3405.4033 3658.6055 -3405.5791 3658.5854 C-3405.5852 3658.6768 -3405.6201 3658.7622 -3405.6785 3658.8442 C-3405.5049 3658.9224 -3405.3889 3659.0791 -3405.4592 3659.4646 C-3405.9055 3658.623 -3405.8591 3660.0654 -3406.3416 3659.8496 C-3406.4951 3660.2935 -3405.8047 3660.2896 -3405.6584 3660.1118 Cf1 D-3368.5752 3658.4727 m-3368.5615 3658.5264 -3368.5144 3658.668 -3368.4482 3658.8442 C-3368.7881 3659.1553 L-3369.3943 3659.0176 -3369.8799 3658.1143 -3370.4255 3658.8916 C-3370.6809 3658.6963 -3370.8176 3658.2832 -3370.9482 3657.9424 C-3370.8232 3657.9683 -3370.7063 3658.0015 -3370.6089 3658.0535 C-3369.0791 3656.915 -3369.8113 3659.2544 -3368.5752 3658.4727 Cf0 D-3375.5449 3657.3643 m-3375.4824 3657.3252 -3375.46 3657.2227 Y-3376.8145 3658.3774 -3377.9297 3658.7119 -3378.6599 3658.667 C-3378.5183 3659.125 -3377.8633 3659.479 -3377.5522 3659.668 C-3377.8279 3660.1902 L-3378 3659.7803 L-3378.4785 3660.2544 L-3378.3447 3660.6052 -3377.9583 3660.5313 -3377.7 3660.8013 C-3377.6775 3660.7014 -3376.8503 3660.0933 -3376.6191 3659.772 C-3377.28 3659.4119 L-3377.1016 3659.5576 -3376.2249 3659.4375 -3375.8772 3659.3035 C-3375.8704 3659.0422 -3376.4695 3658.6392 -3376.5449 3659.207 C-3376.6162 3658.8184 -3375.9255 3658.8142 -3376.3623 3658.3982 C-3375.8447 3657.9856 -3375.0212 3658.3311 -3374.6392 3658.5222 C-3374.5745 3659.1753 L-3374.1553 3659.4287 -3374.2913 3658.3894 -3373.7932 3658.7659 C-3374.4055 3658.8936 -3373.6897 3659.4814 -3374.1768 3659.5303 C-3374.0212 3659.7764 -3374.1736 3660.2192 -3373.6855 3660.1707 C-3373.2793 3659.3076 -3373.1711 3660.7119 -3372.7871 3659.9502 C-3372.5305 3660.2192 -3373.0632 3660.4692 -3372.5583 3660.5854 C-3371.9792 3660.1318 -3372.0127 3659.8064 -3371.9768 3659.1782 C-3372.5183 3659.0022 -3372.5852 3659.9951 -3373.0281 3659.8423 C-3372.1472 3658.7659 L-3372.3096 3658.6143 -3372.4297 3658.5974 -3372.5305 3658.6416 C-3372.3535 3658.5791 -3372.2031 3658.4199 -3372.0745 3658.1995 c-3372.0012 3658.0767 -3371.9336 3657.9712 -3371.8711 3657.8806 C-3372.3704 3657.875 -3372.8137 3657.8599 -3372.8921 3657.5923 C-3372.8232 3657.2876 L-3373 3657.0078 -3373.2881 3657.2271 -3373.4209 3657.4502 C-3373.8679 3657.4827 -3374.3145 3657.9075 -3374.4121 3657.5132 C-3374.2424 3657.2344 L-3374.7922 3657.3223 -3374.8535 3657.3604 -3375.5449 3657.3643 Cf-3393.5625 3656.6707 m-3393.2295 3657.7876 -3392.8623 3658.7744 -3391.3081 3658.5791 C-3391.4304 3658.6563 L-3390.6472 3659.3574 -3389.9033 3657.7295 -3388.9504 3658.5078 C-3389.4128 3658.9287 -3389.3879 3658.8894 -3389.8984 3659.8535 C-3389.4023 3659.5376 L-3389.5398 3660.1455 -3389.0449 3659.8311 -3388.6809 3659.8599 C-3389.0022 3660.583 L-3389.2207 3660.375 -3389.7871 3660.2998 -3389.7705 3660.4646 C-3389.6465 3660.3848 -3390.5183 3659.5522 -3390.9919 3659.7622 C-3390.9431 3660.252 -3389.9431 3660.0535 -3390.3896 3660.8542 C-3389.9961 3660.5176 -3389.9473 3661.0063 -3389.5359 3660.8352 C-3389.9304 3661.1707 -3389.6335 3661.5022 -3389.9272 3661.8599 C-3389.2527 3661.6936 L-3389.2351 3661.856 -3390.2351 3662.0552 -3389.6824 3662.6582 C-3389.4121 3662.4016 -3388.6904 3662.7231 -3388.6775 3662.1963 C-3388.6609 3662.3584 L-3388.1553 3662.4727 -3388.4385 3661.6118 -3387.8176 3661.9126 C-3387.8103 3661.6475 -3387.9287 3661.4639 -3388.1511 3661.5176 C-3388.3391 3661.6353 -3388.3679 3661.999 -3388.7551 3662.0728 C-3388.9287 3661.6592 -3388.2881 3662.1243 -3388.5569 3661.4263 c-3388.6904 3661.0791 -3389.5791 3661.7256 -3389.2959 3660.9424 C-3388.7913 3661.0552 L-3388.7783 3660.5264 -3388.4128 3660.5576 -3388.4231 3660.1318 C-3388.1145 3659.9375 -3387.8232 3660.5313 -3387.5081 3660.0728 C-3387.3772 3659.7312 -3387.6057 3659.0967 -3387.0842 3659.373 C-3386.6768 3660.1543 -3385.4761 3660.0022 -3385.0264 3659.8894 C-3384.6328 3659.5535 L-3384.6663 3659.2295 -3385.3848 3659.5974 -3385.1321 3659.1768 C-3384.5183 3659.0491 L-3384.5657 3659.252 L-3384.3623 3659.2979 -3384.1543 3659.0796 -3383.9688 3658.9639 C-3384.1599 3659.3442 -3384.6023 3659.1907 -3384.5144 3659.7412 C-3384.2263 3659.8496 -3384.1824 3660.0535 -3383.9172 3659.9482 C-3383.9751 3659.9871 -3384.0249 3660.041 -3384.0176 3660.1184 C-3383.4343 3660.356 -3383.4543 3659.5022 -3383.3081 3659.3232 c-3382.7217 3658.6084 -3383.8992 3658.6592 -3383.8242 3658.0933 C-3382.1121 3657.791 L-3382.2583 3657.9692 -3382.4055 3658.1475 -3382.3503 3658.373 C-3381.9304 3658.6272 -3382.3408 3658.7998 -3381.7512 3658.7734 C-3381.7932 3658.0215 -3381.0088 3658.3047 -3380.5923 3657.8699 C-3380.3977 3658.1782 -3380.3577 3658.2393 -3380.7832 3658.249 C-3380.7344 3658.7371 -3380.1631 3658.5491 -3379.96 3658.5942 C-3379.8423 3658.4727 -3379.6416 3658.4019 -3379.5144 3658.2935 C-3379.6848 3658.0491 -3379.6121 3657.7432 -3379.2432 3657.5352 C-3379.2217 3657.4336 L-3379.8264 3657.2998 -3380.7664 3656.7659 -3381.1455 3657.2659 C-3381.0383 3657.0244 L-3381.7383 3656.6016 -3382.5615 3657.9016 -3382.8843 3656.979 C-3382.8545 3656.6143 -3383.0249 3656.8955 -3383.0127 3656.3672 C-3383.5281 3656.7803 L-3383.4209 3656.541 L-3384.2976 3656.6592 L-3384.2744 3656.5615 L-3384.6912 3657.0391 -3385.0176 3657.4287 -3385.2783 3657.7471 C-3385.2793 3657.9771 -3385.2522 3658.0479 -3385.3911 3658.2173 C-3385.5305 3658.3311 -3385.6362 3658.3486 -3385.7305 3658.3184 C-3385.7312 3658.3184 -3385.7312 3658.3184 -3385.7312 3658.3213 C-3385.7312 3658.3184 -3385.7312 3658.3184 Y-3385.9463 3658.2515 -3386.0896 3657.9207 -3386.3545 3657.7854 C-3385.5393 3657.7295 L-3385.4729 3657.3384 -3385.5422 3656.9336 -3385.9417 3656.6592 C-3385.7783 3656.6455 -3385.71 3656.3408 -3385.9121 3656.2959 C-3385.9343 3656.3975 -3386.4463 3656.5454 -3386.2512 3656.856 C-3387.0256 3656.999 -3388.2793 3655.9734 -3389.4551 3656.7158 C-3388.6104 3656.2695 -3390.1321 3656.1924 -3389.1943 3656.0313 C-3389.8489 3655.4072 -3389.7576 3656.6475 -3390.4248 3656.5491 C-3390.4817 3656.3252 -3390.0615 3656.5791 -3389.9082 3656.1353 C-3391.0176 3655.8853 -3391.78 3657.1455 -3392.8533 3656.9558 C-3392.8992 3656.4688 L-3393.1023 3656.5313 -3393.3279 3656.6006 -3393.5625 3656.6707 Cf-3395.6855 3657.2783 m-3395.8921 3657.333 -3396.1016 3657.3894 -3396.3145 3657.4463 C-3396.2937 3657.4539 -3396.2744 3657.4539 -3396.2527 3657.46 C-3396.8733 3657.8535 L-3396.4919 3658.0435 -3396.2407 3658.5791 -3396.7744 3658.8286 C-3396.7295 3658.6272 -3396.8855 3658.3799 -3396.7 3658.2622 C-3397.0576 3657.9692 -3397.8423 3657.6863 -3397.6377 3658.4224 C-3396.9504 3657.7271 -3397.4775 3659.3604 -3396.9375 3658.8442 C-3397.2273 3659.3232 -3397.5144 3659.1079 -3397.7881 3659.3223 C-3397.5032 3658.9207 -3397.8545 3658.4126 -3398.2825 3658.2212 C-3398.4688 3658.3398 -3398.9729 3658.2256 -3399.2825 3658.4207 C-3399.1721 3658.8711 -3399.4417 3659.1287 -3398.9373 3659.2422 C-3399.1223 3659.3604 -3399.4087 3659.4539 -3399.7295 3659.2227 C-3399.6023 3659.1455 -3399.3799 3659.0896 -3399.3953 3658.9272 C-3399.6023 3658.5127 -3399.8447 3658.5313 -3399.9785 3658.3542 C-3400.0852 3658.3799 -3400.1929 3658.4019 -3400.2976 3658.4263 C-3400.2664 3658.4646 -3400.2393 3658.5166 -3400.22 3658.5811 C-3400.5745 3658.9783 L-3400.1023 3658.7659 -3400.3562 3659.1863 -3400.3623 3659.4502 c-3400.3496 3658.9224 -3400.6663 3659.3806 -3400.8279 3659.3982 C-3400.4768 3659.9558 L-3400.6465 3660.2344 -3401.0759 3659.5535 -3400.9873 3660.1052 C-3400.2424 3660.3264 -3399.9561 3660.2312 -3399.2825 3660.0654 C-3399.5559 3659.6328 L-3398.7959 3659.3267 -3399.0872 3660.375 -3398.2344 3660.3542 C-3397.8799 3659.9592 -3396.9519 3660.3267 -3396.9343 3659.5352 C-3397.0413 3659.7764 -3396.4033 3660.2393 -3396.1111 3659.8806 C-3395.7881 3659.1572 -3394.8113 3659.0596 -3395.1072 3658.7295 C-3395.3711 3658.7207 -3395.7263 3659.1184 -3395.9385 3658.6475 C-3395.4265 3658.4968 L-3395.7625 3658.1016 L-3395.5889 3658.2432 -3395.6057 3657.8584 -3395.6855 3657.2783 Cf1 D-3407.1455 3652.8384 m-3407.1511 3652.8352 -3407.1584 3652.833 -3407.1653 3652.8286 C-3407.1577 3652.8311 -3407.1504 3652.8311 -3407.1433 3652.8311 C-3407.1455 3652.8384 Lf*U0 D-3360.9968 3656.8311 m-3360.8496 3656.6504 -3360.4856 3656.6807 -3360.5569 3656.2935 C-3360.5481 3656.7192 -3361.2073 3656.3584 -3360.9968 3656.8311 Cf-3360.5615 3657.2483 m-3360.5359 3657.1462 -3360.5537 3656.9827 -3360.3904 3656.9683 C-3360.8401 3657.0767 L-3360.5615 3657.2483 Lf-3360.1052 3660.1592 m-3359.8733 3659.8423 -3359.7263 3659.6631 -3359.3623 3659.6919 C-3359.2256 3660.7312 -3359.9583 3659.9824 -3360.1233 3660.9512 C-3359.4561 3661.0491 -3359.2512 3660.1416 -3358.7024 3660.0535 C-3358.9744 3659.6199 -3360.0852 3659.3699 -3360.1052 3660.1592 Cf-3360.4016 3661.4734 m-3360.0305 3661.2393 L-3360.0671 3661.1782 L-3360.4385 3661.4126 L-3360.4016 3661.4734 Lf-3368.4385 3652.4424 m-3368.4719 3652.1184 -3368.7031 3652.4382 -3368.8271 3652.5166 C-3368.7263 3652.5376 -3368.5852 3652.623 -3368.4385 3652.4424 Cf-3441.3503 3652.1052 m-3444.1809 3652.4182 L-3443.3665 3652.3367 -3442.6145 3652.2959 -3441.3503 3652.1052 Cf-3377.8313 3654.5664 m-3377.0713 3654.2603 -3376.7336 3653.6995 -3375.9592 3653.5576 C-3376.9775 3652.9031 -3377.3042 3654.5796 -3378.1592 3653.9092 C-3377.8313 3654.5664 Lf-3377.5632 3651.9751 m-3377.4373 3652.5867 -3378.1497 3652.6919 -3378.0393 3653.1406 C-3377.5271 3652.9912 -3377.8008 3652.5576 -3377.3359 3652.6104 C-3377.5632 3651.9751 Lf-3374.1191 3662.0886 m-3374.3496 3662.4072 L-3374.1641 3662.291 L-3374.1191 3662.0886 Lf-3381.0271 3652.5176 m-3380.9431 3652.3799 L-3381.3242 3652.1863 L-3381.0271 3652.5176 Lf-3380.8591 3652.2393 m-3380.9431 3652.3799 L-3380.9431 3652.3799 L-3380.8591 3652.2393 Lf-3374.4153 3663.4016 m-3374.0728 3663.5313 L-3373.9033 3663.2515 L-3374.4153 3663.4016 Lf-3377.4385 3660.1187 m-3377.1321 3659.9224 L-3377.1929 3659.96 -3377.6121 3659.7092 -3377.4385 3660.1187 Cf-3383.3545 3652.2583 m-3383.7273 3652.4932 L-3383.6892 3652.5535 L-3383.3176 3652.3184 L-3383.3545 3652.2583 Lf-3379.8369 3661.8054 m-3379.6252 3662.2759 -3380.4482 3661.9326 -3380.0127 3662.3486 C-3379.6252 3662.2759 -3379.7825 3662.0303 -3379.8369 3661.8054 Cf-3384.3352 3658.6155 m-3384.3855 3658.6155 -3384.4385 3658.6328 -3384.4895 3658.6851 C-3384.4287 3658.665 -3384.3777 3658.6406 -3384.3352 3658.6155 Cf-3384.3352 3658.6155 m-3384.1729 3658.6155 -3384.0105 3658.7959 -3383.8992 3658.6592 C-3384.1016 3658.4473 -3384.1753 3658.5264 -3384.3352 3658.6155 Cf-3386.1953 3658.7256 m-3386.0481 3658.7593 L-3386.1985 3658.9912 -3386.1272 3658.957 -3385.9929 3658.7703 C-3385.8369 3658.7544 -3385.8457 3658.6055 -3385.8271 3658.5039 C-3385.7959 3658.4473 -3385.7649 3658.3853 -3385.7312 3658.3213 C-3385.7793 3658.3806 -3385.8225 3658.4399 -3385.8591 3658.4912 C-3386.1008 3658.4871 -3386.2483 3658.5103 -3386.1953 3658.7256 Cf-3393.1052 3650.7998 m-3392.5615 3650.9751 -3392.4209 3651.0596 -3392.4504 3651.4248 C-3391.9343 3651.541 -3392.0144 3650.9126 -3391.7031 3650.7659 C-3392.2871 3650.8367 -3392.4065 3650.668 -3393.1052 3650.7998 Cf-3391.7031 3650.7659 m-3391.6377 3650.7593 -3391.5752 3650.7515 -3391.4993 3650.7371 C-3391.5842 3650.7256 -3391.6472 3650.7412 -3391.7031 3650.7659 Cf-3384.0212 3662.7173 m-3384.3591 3663.2759 L-3384.2351 3663.1982 L-3384.0212 3662.7173 Lf-3393.9121 3650.6155 m-3393.8113 3650.6392 -3393.6497 3650.623 -3393.5703 3650.7483 C-3393.5413 3650.3806 -3394.0127 3650.5933 -3393.9121 3650.6155 cf-3391.8152 3657.7744 m-3391.76 3657.9983 -3391.4121 3657.8643 -3391.2705 3657.9502 C-3391.4736 3657.9031 -3391.6392 3657.23 -3391.8152 3657.7744 Cf-3395.4719 3652.1216 m-3395.3711 3652.1455 -3395.2161 3652.3911 -3395.2832 3652.6936 C-3395.1367 3652.5144 -3394.9385 3651.8699 -3395.4719 3652.1216 Cf-3392.8088 3657.7092 m-3392.7312 3657.833 L-3392.3591 3657.5974 L-3392.8088 3657.7092 Lf-3391.4817 3663.1006 m-3391.0632 3662.665 -3392.1455 3662.0491 -3391.4248 3661.6807 C-3392.3545 3661.2246 -3391.3535 3662.2979 -3392.0393 3662.2271 C-3391.6377 3662.3743 -3391.4409 3662.9253 -3391.4817 3663.1006 Cf-3392.0393 3662.2271 m-3392.0977 3662.2039 -3392.1609 3662.1907 -3392.2295 3662.1895 C-3392.1536 3662.21 -3392.0923 3662.2212 -3392.0393 3662.2271 Cf-3397.9287 3659.4692 m-3397.8679 3659.4238 -3397.8264 3659.3743 -3397.7881 3659.3223 C-3397.8359 3659.3584 -3397.8816 3659.4031 -3397.9287 3659.4692 Cf-3394.2295 3662.5867 m-3393.6023 3661.9326 L-3394.0212 3662.3672 -3395.0752 3662.3411 -3395.0095 3662.9927 C-3394.6682 3663.125 -3394.2576 3662.9512 -3394.0889 3662.6707 C-3394.2295 3662.5867 Lf-3401.4287 3650.7764 m-3401.1577 3650.5176 L-3401.4961 3650.4424 L-3401.3992 3650.54 -3401.5745 3651.0176 -3401.4287 3650.7764 Cf-3401.5615 3650.4287 m-3401.4961 3650.4424 L-3401.5105 3650.4263 -3401.5313 3650.4199 -3401.5615 3650.4287 Cf-3396.7424 3659.1543 m-3396.5398 3659.1995 -3396.3777 3659.1814 -3396.1929 3659.0664 C-3396.2695 3658.9424 -3396.7744 3658.8286 -3396.7424 3659.1543 Cf-3403.3369 3651.7231 m-3402.8896 3651.6118 L-3403.3777 3651.6592 L-3403.3369 3651.7231 Lf-3405.4241 3650.6155 m-3405.5012 3650.4932 L-3405.8721 3650.7271 L-3405.7937 3650.8496 L-3405.4241 3650.6155 Lf-3402.6943 3663.4326 m-3402.3911 3663.5022 -3402.1543 3662.917 -3402.2336 3662.7935 C-3402.8215 3662.8184 L-3402.6721 3663.3311 -3402.6584 3662.8035 -3402.3176 3662.9336 C-3402.6943 3663.4326 Lf-3420.9153 3651.5732 m-3420.7839 3651.2312 -3420.1409 3651.4292 -3420.1072 3651.7544 C-3420.1936 3651.8955 -3420.5422 3652.0303 -3420.3232 3652.2371 C-3419.8145 3651.3975 L-3419.1377 3651.9207 -3420.3289 3652.5015 -3420.6631 3652.7979 C-3419.9736 3652.9063 -3419.7693 3652.3542 -3419.0359 3652.3574 C-3419.2522 3652.2822 -3419.3889 3652.0728 -3419.5032 3651.8928 C-3419.5281 3651.3013 -3418.8447 3651.563 -3418.3562 3651.5166 C-3418.6672 3651.26 -3418.4873 3651.0435 -3418.2607 3650.8115 C-3418.22 3650.7935 -3418.1929 3650.7593 -3418.1736 3650.7192 C-3418.1472 3650.6919 -3418.1223 3650.665 -3418.0967 3650.6367 C-3418.1553 3650.6375 L-3418.1511 3650.5713 -3418.1641 3650.4912 -3418.2063 3650.3806 C-3418.6162 3650.5535 -3418.9297 3650.0596 -3419.1936 3650.0522 C-3418.9329 3651.0132 -3420.0923 3650.2744 -3420.4241 3650.5703 C-3420.8071 3650.665 L-3420.9504 3650.667 L-3420.9792 3650.5615 -3420.9385 3650.4292 -3420.72 3650.2393 C-3420.9023 3650.4287 -3421.5105 3650.3623 -3421.4543 3650.6707 C-3422.8423 3650.6848 L-3422.8855 3650.6455 -3422.9287 3650.5967 -3422.9607 3650.5264 C-3423.0088 3650.5879 -3423.0168 3650.6375 -3423.0105 3650.6863 C-3429.0576 3650.7483 L-3428.7593 3650.8232 -3428.5012 3651.0435 -3428.1936 3651.1494 C-3428.6553 3651.7876 -3427.6892 3651.2646 -3427.8247 3651.8672 C-3428.0322 3652.0867 -3428.3359 3652.0176 -3428.5168 3651.8716 C-3428.5842 3652.1763 -3428.3264 3652.4463 -3428.3562 3652.8096 C-3427.5935 3653.1936 -3427.4768 3651.7344 -3426.7312 3651.957 C-3426.7607 3652.3223 -3426.9912 3652.6416 -3426.5032 3652.5923 C-3426.6272 3652.6707 L-3425.8457 3652.2622 -3426.0183 3653.4968 -3425.5264 3652.4951 C-3425.5393 3653.0222 L-3425.1848 3652.625 -3424.4951 3652.6216 -3424.1064 3652.5491 C-3424.1296 3652.6504 L-3423.0393 3652.0479 -3423.5176 3652.5222 -3422.2932 3652.2703 C-3422.8567 3652.8853 L-3422.4343 3653.1392 -3422.3391 3652.4712 -3422.0359 3652.54 C-3422.0576 3652.6416 -3421.9873 3653.0264 -3422.2737 3653.123 C-3420.7881 3652.1851 L-3420.4336 3651.7876 -3420.8601 3651.7979 -3420.9153 3651.5732 Cf-3419.0359 3652.3574 m-3418.9573 3652.3853 -3418.8679 3652.3975 -3418.7625 3652.3774 C-3418.8643 3652.3604 -3418.9519 3652.3574 -3419.0359 3652.3574 Cf-3429.4824 3650.752 m-3429.0576 3650.7483 L-3429.1892 3650.7158 -3429.3264 3650.7056 -3429.4824 3650.752 Cf-3416.9065 3651.2056 m-3417.1641 3650.9336 -3416.7136 3650.8247 -3416.6687 3650.6216 C-3417.5913 3650.6318 L-3417.5872 3650.8352 -3417.6785 3651.0623 -3417.6599 3651.2483 C-3416.9065 3651.2056 Lf-3417.8584 3650.249 m-3417.8896 3650.3894 -3417.9873 3650.5166 -3418.0967 3650.6367 C-3417.5913 3650.6318 L-3417.5945 3650.479 -3417.6511 3650.3408 -3417.8584 3650.249 Cf-3417.7607 3661.0896 m-3417.9241 3661.1079 L-3418.1711 3661.2646 L-3417.7607 3661.0896 Lf-3420.3152 3660.1963 m-3420.1201 3660.5044 -3419.75 3660.2703 -3419.6262 3660.1924 C-3420.0527 3660.2014 -3419.8679 3660.0854 -3420.3152 3660.1963 Cf-3419.7881 3663.4968 m-3420.1992 3663.6707 L-3420.1609 3663.7312 L-3419.7881 3663.4968 Lf-3432.6223 3652.8279 m-3432.6897 3652.8398 -3432.7551 3652.8486 -3432.8232 3652.8623 C-3432.7312 3652.8643 -3432.6711 3652.8496 -3432.6223 3652.8279 Cf-3429.0945 3652.3252 m-3430.0752 3651.7334 -3428.4519 3651.833 -3428.76 3651.0752 C-3429.2937 3651.3264 L-3429.2483 3651.123 L-3429.8992 3651.1895 L-3429.7656 3651.5376 -3429.6653 3651.5591 -3429.6943 3651.9248 C-3430.5632 3651.7822 -3429.9683 3651.4912 -3430.6057 3651.0303 C-3431.5769 3651.0967 L-3431.4983 3650.9871 L-3431.5801 3650.9951 -3431.6162 3651.041 -3431.6443 3651.1006 C-3434.9172 3651.3279 L-3435.5127 3651.6184 -3434.5879 3651.9856 -3435.0271 3652.5222 C-3434.3369 3652.521 -3433.3113 3652.9104 -3433.2527 3652.1814 C-3433.2759 3652.2822 -3433.3215 3652.4827 -3433.1816 3652.5686 C-3432.7825 3651.9692 L-3433.1631 3651.7783 L-3432.7617 3651.1807 -3431.4656 3651.3135 -3431.2312 3651.6848 C-3431.9683 3651.8887 -3431.5984 3652.6084 -3432.6252 3652.2173 C-3432.5791 3652.4019 -3432.3911 3652.7271 -3432.6223 3652.8279 C-3431.4192 3652.6155 -3430.3408 3652.9482 -3429.0945 3652.3252 Cf-3441.1631 3652.6763 m-3441.1536 3652.6104 L-3441.1753 3652.6455 -3441.1824 3652.6719 -3441.1631 3652.6763 Cf-3440.7593 3652.7659 m-3440.1729 3652.0522 L-3441.0872 3652.1096 L-3441.1536 3652.6104 L-3441.0728 3652.4827 -3440.7522 3652.2295 -3440.6279 3652.4253 C-3440.7593 3652.7659 Lf-3439.4919 3651.6199 m-3439.9641 3651.833 -3439.9385 3652.4224 -3439.6809 3652.6919 C-3440.1145 3652.9646 -3439.9097 3652.0576 -3440.2083 3652.6807 C-3440.1985 3653.1062 -3439.6641 3652.856 -3439.5413 3652.7783 C-3439.4919 3651.6199 Lf-3436.0081 3651.9307 m-3436.1409 3652.1753 L-3435.8137 3652.2393 L-3436.0081 3651.9307 Lf-3436.1409 3652.1753 m-3436.4656 3652.1096 L-3436.4431 3652.291 -3436.4209 3652.4683 -3436.3679 3652.5923 C-3436.1409 3652.1753 Lf-3437.3176 3651.9395 m-3437.4551 3651.8955 -3437.6072 3651.8623 -3437.7922 3651.8462 C-3437.3176 3651.9395 Lf-3436.9463 3652.0896 m-3436.9573 3652.0127 L-3437.3176 3651.9395 L-3437.1848 3651.9856 -3437.0657 3652.0352 -3436.9463 3652.0896 Cf-3436.4656 3652.1096 m-3436.5183 3651.6963 -3436.5801 3651.2622 -3437.0496 3651.3774 C-3436.9573 3652.0127 L-3436.4656 3652.1096 Lf-3422.7783 3662.8743 m-3423.1497 3663.1079 L-3423.1104 3663.1719 L-3422.7393 3662.9375 L-3422.7783 3662.8743 Lf-3424.9209 3662.4968 m-3425.0127 3662.5686 -3425.0823 3662.6455 -3425.1455 3662.7231 C-3425.0488 3662.6782 -3424.9719 3662.6096 -3424.9209 3662.4968 Cf-3426.5137 3665.3184 m-3426.9504 3664.9031 -3425.9111 3664.7695 -3426.72 3664.5854 C-3426.7913 3664.1982 -3426.4121 3663.6992 -3426.0313 3663.8916 C-3426.0615 3664.2559 -3426.4023 3664.125 -3426.1682 3664.4968 C-3425.9153 3664.0752 -3425.8191 3664.3623 -3425.9072 3663.8135 C-3425.4817 3663.4712 -3425.4343 3663.0811 -3425.1455 3662.7231 C-3425.6599 3662.9646 -3426.74 3662.4019 -3427.3928 3663.1062 C-3427.7527 3663.7659 -3427.5344 3664.667 -3427.5359 3665.6199 C-3427.4817 3665.8442 -3426.5488 3665.9502 -3426.5137 3665.3184 Cf-3425.8264 3666.2703 m-3425.6243 3666.3176 -3425.5625 3666.2791 -3425.4385 3666.1995 C-3425.4719 3665.8743 -3425.6631 3666.2559 -3425.8264 3666.2703 Cf-3430.4719 3659.0942 m-3430.5105 3659.2295 -3430.8762 3659.3975 -3430.7976 3659.6318 C-3430.2432 3659.46 L-3430.3733 3659.4382 -3430.4192 3659.272 -3430.4719 3659.0942 Cf-3430 3659.3875 m-3430.2432 3659.46 L-3430.1824 3659.4727 -3430.1072 3659.4539 -3430 3659.3875 Cf-3430.4983 3659.0093 m-3430.4895 3659.0376 -3430.4817 3659.0664 -3430.4719 3659.0942 C-3430.4641 3659.0654 -3430.4656 3659.0352 -3430.4983 3659.0093 Cf-3438.6631 3651.7014 m-3438.6553 3651.4404 -3438.9023 3651.5967 -3439.0264 3651.6743 C-3438.9255 3651.6963 -3438.7839 3651.7822 -3438.6631 3651.7014 Cf-3447.9641 3652.7312 m-3448.1824 3652.5222 L-3448.1052 3652.6475 -3448.0657 3652.7092 -3447.9641 3652.7312 Cf-3451.3279 3659.876 m-3451.3342 3659.9272 -3451.3503 3659.9692 -3451.3721 3660.0093 C-3451.3503 3659.9771 -3451.3352 3659.9336 -3451.3279 3659.876 cf-3451.3721 3660.0093 m-3451.5212 3660.2271 -3451.9817 3659.8887 -3452.1472 3660.2192 C-3452.1262 3660.1187 L-3452.4343 3660.3142 L-3452.1455 3660.2854 -3451.5393 3660.3267 -3451.3721 3660.0093 CfUUUU%AI8_EndBrushPattern%AI8_BeginBrushPattern(Unnamed Brush Pat 40)0 Au0 J 0 j 1 w 4 M []0 d0 XR-7323.4521 7537.5967 m-6931.6909 7537.5967 L-6931.6909 7445.9077 L-7323.4521 7445.9077 L-7323.4521 7537.5967 Ln0 O0.789425 0.732296 0.680781 0.689296 0.070588 0.070588 0.070588 Xa1 XR-6936.3535 7479.9199 m-6938.1113 7479.9199 -7057.7817 7482.0918 -7133.6519 7483.4717 C-7154.4663 7482.5352 -7175.2529 7481.2222 -7196.0547 7479.5024 C-7198.5327 7479.1509 -7201.3472 7478.7949 -7202.8584 7478.6006 c-7203.7114 7478.4863 -7204.5732 7478.3853 -7205.4375 7478.2935 C-7204.9829 7478.0605 -7204.54 7477.7998 -7204.1167 7477.4941 C-7203.25 7476.7324 -7202.3955 7475.8325 -7201.8735 7474.4541 C-7201.8979 7474.1685 -7201.6997 7473.8188 -7201.6523 7473.5293 c-7201.5532 7472.9116 -7201.6382 7472.1631 -7201.7319 7471.627 c-7201.7939 7471.2725 -7201.9551 7471.0254 -7202.0259 7470.7314 c-7202.0488 7470.6353 -7201.9785 7470.5757 -7202.0059 7470.5024 c-7202.1396 7470.1484 -7202.5313 7469.5518 -7202.7539 7469.2261 c-7202.8579 7469.0757 -7202.9873 7468.9775 -7203.1035 7468.8188 c-7203.1196 7468.7964 -7203.0669 7468.7349 -7203.0928 7468.7061 c-7203.6484 7468.0664 -7204.4312 7467.5415 -7205.3955 7467.0757 c-7205.4546 7467.0508 -7205.4639 7467.1445 -7205.5366 7467.0869 C-7205.8213 7466.9653 -7206.1143 7466.8535 -7206.3945 7466.791 c-7207.8965 7466.4629 -7209.7163 7466.8477 -7210.8027 7467.6328 c-7211.7998 7468.3555 -7212.5308 7469.8623 -7212.4678 7471.0742 c-7212.4126 7472.1094 -7211.6665 7473.2573 -7210.4458 7474.0352 c-7209.3604 7474.7295 -7208.0479 7474.9829 -7207.2373 7474.3589 C-7207.6499 7474.2295 -7207.9688 7474.0332 -7208.0811 7473.752 C-7208.0908 7473.4766 -7208.0967 7473.1992 -7207.8755 7472.8589 C-7207.4517 7472.4863 -7206.7925 7472.2485 -7206.1235 7472.7158 c-7205.1846 7473.3701 -7205.0728 7474.7886 -7206.0342 7475.5356 C-7206.3086 7475.6406 -7206.5586 7475.8789 -7206.75 7475.9829 c-7207.1826 7476.2192 -7207.5586 7476.3853 -7207.9751 7476.543 c-7209.0938 7476.959 -7210.4839 7477.418 -7211.5327 7477.5967 c-7211.7114 7477.6284 -7211.8989 7477.6475 -7212.0806 7477.6733 C-7215.4038 7477.3789 -7218.54 7477.0693 -7221.1416 7476.5264 C-7221.1138 7476.5229 -7221.0908 7476.5244 -7221.0586 7476.5205 c-7220.2378 7476.4199 -7219.6309 7476.2524 -7218.9043 7476.0127 c-7218.6328 7475.9238 -7218.3184 7475.9116 -7218.0825 7475.8149 c-7217.9985 7475.7856 -7217.9409 7475.6597 -7217.8472 7475.6133 c-7217.5371 7475.4604 -7217.2129 7475.3662 -7216.8999 7475.1597 c-7215.9097 7474.5054 -7214.8774 7473.3359 -7214.7617 7471.8677 C-7214.9463 7470.8262 -7215.3643 7469.8525 -7216.5938 7469.0781 c-7216.7217 7468.9951 -7216.8662 7468.96 -7216.9995 7468.8828 C-7218.8516 7468.2168 -7220.5913 7469.3135 -7220.8066 7471.2061 C-7220.7119 7471.375 -7220.6499 7471.5527 -7220.6616 7471.752 C-7220.2939 7472.4492 -7218.9033 7473.0557 -7218.3057 7472.6143 C-7218.6133 7472.5566 -7218.7495 7472.5254 -7218.8638 7472.2637 C-7218.8892 7471.6069 -7218.0679 7471.4336 -7217.6528 7472.0176 C-7217.4966 7472.7021 -7217.7676 7473.2524 -7218.2939 7473.8101 c-7218.5068 7474.0352 -7218.7837 7474.1685 -7219.0566 7474.3545 c-7219.4199 7474.6016 -7219.7495 7474.8828 -7220.1118 7475.0332 c-7220.4385 7475.1685 -7220.8115 7475.2012 -7221.1445 7475.2886 c-7221.2349 7475.3101 -7221.2969 7475.3613 -7221.3706 7475.3789 c-7221.6274 7475.4336 -7221.8359 7475.5142 -7222.0879 7475.5469 c-7222.4209 7475.5854 -7222.7739 7475.5488 -7223.1528 7475.5854 c-7223.3398 7475.6055 -7223.5195 7475.6943 -7223.7144 7475.7109 c-7223.8413 7475.7207 -7223.9722 7475.7207 -7224.1025 7475.7222 C-7226.8135 7474.8213 -7229.0957 7473.6094 -7230.9814 7471.2783 c-7234.6704 7466.7222 -7229.0415 7462.5566 -7227.9902 7466.5967 C-7229.9668 7468.0352 -7233.5874 7471.1196 -7225.8892 7471.2471 C-7217.6045 7469.7549 -7224.6982 7454.4917 -7234.6509 7458.5576 c-7243.0151 7461.9741 -7239.1328 7470.6382 -7233.4658 7474.2935 c-7224.9902 7479.7559 -7215.5376 7480.4917 -7205.7012 7480.5845 C-7216.3862 7485.0488 -7230.9243 7482.4028 -7238.9897 7474.3804 c-7243.1011 7470.2935 -7247.0435 7463.9912 -7245.8193 7457.8896 c-7244.5742 7451.6816 -7238.1616 7457.4238 -7243.0957 7457.4424 C-7242.8896 7463.0054 -7229.6387 7456.9648 -7235.9307 7448.8271 c-7241.6011 7441.4917 -7251.5698 7449.5225 -7253.3242 7455.9478 c-7259.0239 7476.8359 -7229.3545 7482.7119 -7215.3813 7483.4238 C-7227.1143 7486.7749 -7243.3892 7484.2734 -7254.5547 7479.7856 c-7258.9663 7478.0093 -7263.9707 7474.8926 -7266.5479 7470.7773 c-7270.4619 7464.5264 -7263.4268 7460.2837 -7262.8955 7462.4028 c-7262.4697 7464.0957 -7268.3765 7464.623 -7263.8267 7467.6992 c-7259.8091 7470.418 -7256.2759 7464.2095 -7255.4619 7461.0781 c-7251.6782 7446.5317 -7273.0601 7448.4604 -7275.3667 7462.1982 c-7280.5103 7492.8271 -7234.3071 7486.4575 -7218.4902 7485.5928 C-7218.7124 7485.7612 -7218.9331 7485.9189 -7219.1543 7486.082 C-7224.4346 7487.5854 -7229.6416 7489.7861 -7234.46 7492.5469 C-7248.9546 7494.2813 -7261.7495 7483.8901 -7277.5913 7478.6152 c-7286.5635 7475.6284 -7297.0933 7479.9277 -7305.2778 7475.3145 c-7309.6235 7472.8545 -7312.6982 7470.2656 -7314.2959 7465.0518 C-7315.9092 7456.1104 -7306.2979 7454.9717 -7308.1396 7459.6416 C-7309.8428 7459.9688 -7309.1772 7458.834 -7310.3354 7458.8413 C-7314.2861 7462.5479 -7306.0244 7467.7314 -7302.1606 7464.4316 c-7295.4497 7458.7031 -7300.2563 7450.3325 -7307.0864 7448.0557 C-7325.5703 7448.25 -7326 7470.8613 -7320.0474 7483.3589 c-7304.2217 7516.5854 -7270.1445 7504.582 -7242.5376 7497.5479 C-7246.2817 7500.0732 -7248.8975 7503.6421 -7251.5747 7507.2158 c-7256.2197 7513.4165 -7258.6694 7522.8545 -7250.0024 7526.8613 C-7249.1616 7530.9829 -7247.6392 7534.8853 -7243.5669 7536.7695 c-7238.7471 7539 -7233.8457 7536.5581 -7232.5508 7531.4512 C-7232.4766 7528.6729 -7233.1968 7526.8262 -7235.5938 7525.3887 c-7237.1733 7524.4414 -7242.5176 7524.5313 -7239.8574 7527.5342 C-7237.9663 7526.0415 -7238.1323 7528.4863 -7239.0112 7529.6006 C-7241.8823 7529.5693 -7242.5771 7527.4863 -7242.5156 7524.5181 c-7242.5151 7524.4956 -7242.5142 7524.4688 -7242.5146 7524.4429 C-7242.3574 7517.1367 -7241.1343 7511.3237 -7239.0718 7506.7285 C-7239.0713 7506.73 -7239.0708 7506.7314 -7239.0698 7506.7324 c-7238.8242 7507.2158 -7238.4819 7507.5 -7238.2485 7507.8945 c-7238.1729 7508.0229 -7238.2495 7508.1382 -7238.1753 7508.2334 c-7237.8262 7508.6855 -7236.9971 7509.3701 -7236.5313 7509.7397 c-7236.3135 7509.9116 -7236.0835 7509.998 -7235.8477 7510.1729 c-7235.8125 7510.1973 -7235.8613 7510.3101 -7235.8115 7510.3413 c-7234.7256 7511.0176 -7233.3638 7511.4277 -7231.7661 7511.6709 C-7231.6699 7511.6816 -7231.6978 7511.543 -7231.5669 7511.5933 C-7231.1035 7511.6406 -7230.6309 7511.6733 -7230.1982 7511.6382 c-7227.8862 7511.4453 -7225.4316 7510.0845 -7224.2129 7508.4668 c-7223.0942 7506.9854 -7222.7095 7504.4854 -7223.3379 7502.7646 c-7223.8774 7501.2949 -7225.4629 7499.9692 -7227.5684 7499.3901 c-7229.4419 7498.8735 -7231.4492 7499.0845 -7232.3408 7500.3477 C-7231.6875 7500.3535 -7231.1406 7500.4941 -7230.8545 7500.8477 C-7230.7178 7501.2422 -7230.5859 7501.6382 -7230.7539 7502.2261 C-7231.2002 7502.9541 -7232.0469 7503.5894 -7233.2178 7503.2124 c-7234.4604 7502.8135 -7235.2119 7501.5781 -7235.0532 7500.3486 C-7229.7505 7494.2031 -7222.0386 7491.6465 -7213.2539 7491.0527 C-7213.2886 7491.0688 -7213.3218 7491.0796 -7213.3604 7491.0972 c-7214.5015 7491.6064 -7215.3027 7492.1143 -7216.2437 7492.7832 c-7216.5957 7493.0332 -7217.0439 7493.1909 -7217.3428 7493.4316 c-7217.4492 7493.5166 -7217.4766 7493.7222 -7217.5913 7493.8301 c-7217.9707 7494.1895 -7218.3975 7494.4688 -7218.7563 7494.9063 c-7219.8945 7496.2886 -7220.8662 7498.4341 -7220.3809 7500.6016 C-7219.6523 7502.0229 -7218.6162 7503.2437 -7216.4995 7503.8145 c-7216.2788 7503.875 -7216.0542 7503.8623 -7215.8276 7503.918 C-7212.8613 7504.0527 -7210.8369 7501.7021 -7211.3667 7498.875 C-7211.5781 7498.6733 -7211.7471 7498.4429 -7211.8184 7498.1509 C-7212.6582 7497.3101 -7214.9336 7497.0508 -7215.5996 7497.9517 C-7215.1309 7497.9004 -7214.9199 7497.8848 -7214.6387 7498.2109 C-7214.3105 7499.1475 -7215.4189 7499.7612 -7216.2759 7499.1045 C-7216.8052 7498.1865 -7216.6587 7497.2695 -7216.1479 7496.2314 c-7215.9409 7495.8101 -7215.5991 7495.5 -7215.2881 7495.1104 c-7214.8735 7494.5933 -7214.5239 7494.0415 -7214.0669 7493.6621 c-7213.6563 7493.3232 -7213.1318 7493.1094 -7212.6899 7492.8364 c-7212.5708 7492.7646 -7212.5039 7492.6636 -7212.4043 7492.6069 c-7212.0596 7492.4111 -7211.7935 7492.2031 -7211.4438 7492.0469 c-7210.9819 7491.8413 -7210.4561 7491.7373 -7209.9253 7491.5142 c-7209.6636 7491.4063 -7209.4443 7491.1948 -7209.1709 7491.0854 c-7209.0063 7491.0215 -7208.8311 7490.9688 -7208.6592 7490.9141 C-7207.2695 7490.918 -7205.8613 7490.9575 -7204.4375 7491.0342 c-7202.7285 7491.0796 -7200.4653 7491.0933 -7198.5728 7491.166 C-7166.4688 7487.6533 -7133.98 7486.73 -7101.4746 7486.2822 C-7028.0664 7487.6152 -6937.8774 7489.2485 -6936.3535 7489.2485 c-6933.7773 7489.2485 -6931.6909 7487.1597 -6931.6909 7484.5845 c-6931.6909 7482.0078 -6933.7773 7479.9199 -6936.3535 7479.9199 cfU%AI8_EndBrushPattern%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe Brush Manager Order)(Adobe Brush Manager Order)( Adobe Calligraphic Brush Tool/ 2 pt. Oval/ Adobe Calligraphic) -( Brush Tool/ 5 pt. Oval/ Adobe Calligraphic Brush Tool/ 5 pt. ) -(Flat/ Adobe Calligraphic Brush Tool/ 3 pt. Round/ Adobe Callig) -(raphic Brush Tool/ 7 pt. Round/ Adobe Calligraphic Brush Tool/) -( 15 pt. Round/ Adobe ArtOnPath Brush Tool/ Chalk - Scribble/ A) -(dobe ArtOnPath Brush Tool/ Floral Stem/ Adobe PatternOnPath Br) -(ush Tool/ Decorative Border/) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(15 pt. Round)(1 15 15 100 100 15 15 0 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(2 pt. Oval)(1 2 2 26 74 15 15 0 1 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(3 pt. Round)(1 3 3 100 100 0 0 0 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(5 pt. Flat)(1 5 5 0 0 90 90 0 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(5 pt. Oval)(1 5 5 10 90 -65 35 0 1 1 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(7 pt. Round)(1 7 7 100 100 0 0 0 0 0 0) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe ArtOnPath Brush Tool)(Chalk - Scribble)(1 / Unnamed 3/ / / / / 5 0 0 0 /  1 1 1 0 1 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe ArtOnPath Brush Tool)(Floral Stem)(1 / Unnamed Brush Pat 40/ / / / / 0 1 /  1 1 1 0 1 0 0 0) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe PatternOnPath Brush Tool)(Decorative Border)(1 / New Pattern 1/ / New Pattern 2/ / / 5 0 0.00392157 0.00392) -(157 /  1 1 1 0 1 0 0 0) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_BeginPalette0 0 Pb1 1 1 1 ([Registration]) 0 Xs([Registration])Pc0 0 0 0 1 1 1 Xa(White)Pc0.789425 0.732296 0.680781 0.689296 0.070588 0.070588 0.070588 Xa(Black)Pc0.012146 0.934478 0.904173 0.033722 0.847059 0.121569 0.152941 Xa(CMYK Red)Pc0.045228 0.022095 0.79443 0 1 0.945098 0 Xa(CMYK Yellow)Pc0.809201 0.030701 0.91696 0.061219 0 0.596078 0.282353 Xa(CMYK Green)Pc0.680934 0.1608 0.010254 0.003845 0 0.639216 0.858824 Xa(CMYK Cyan)Pc0.955138 0.858091 0.048676 0.136446 0.133333 0.164706 0.470588 Xa(CMYK Blue)Pc0.057588 0.92636 0.057069 0.021057 0.843137 0.043137 0.490196 Xa(CMYK Magenta)Pc0.089784 0.926177 0.769741 0.180697 0.666667 0.12549 0.180392 Xa(C=15 M=100 Y=90 K=10)Pc0.015045 0.871031 0.825284 0.023285 0.858824 0.239216 0.211765 Xa(C=0 M=90 Y=85 K=0)Pc0.01001 0.772183 0.896696 0.027863 0.87451 0.32549 0.176471 Xa(C=0 M=80 Y=95 K=0)Pc0.003937 0.486946 0.934386 0.008637 0.917647 0.545098 0.168627 Xa(C=0 M=50 Y=100 K=0)Pc0.014191 0.333654 0.792416 0.014954 0.941176 0.662745 0.278431 Xa(C=0 M=35 Y=85 K=0)Pc0.065736 0.023957 0.784665 0.002594 0.960784 0.921569 0.239216 Xa(C=5 M=0 Y=90 K=0)Pc0.177432 0.006256 0.903929 0.013947 0.819608 0.858824 0.176471 Xa(C=20 M=0 Y=100 K=0)Pc0.473701 0.008637 0.901335 0.020539 0.509804 0.74902 0.25098 Xa(C=50 M=0 Y=100 K=0)Pc0.71487 0.009339 0.920928 0.01886 0.203922 0.666667 0.27451 Xa(C=75 M=0 Y=100 K=0)Pc0.820737 0.068147 0.920867 0.131716 0 0.541176 0.254902 Xa(C=85 M=10 Y=100 K=10)Pc0.854887 0.210636 0.873564 0.378332 0 0.356863 0.2 Xa(C=90 M=30 Y=95 K=30)Pc0.746487 0.015869 0.714534 0.007141 0.137255 0.670588 0.431373 Xa(C=75 M=0 Y=75 K=0)Pc0.788724 0.074311 0.423133 0.032258 0 0.615686 0.564706 Xa(C=80 M=10 Y=45 K=0)Pc0.69546 0.153597 0.018555 0.007691 0.176471 0.627451 0.807843 Xa(C=70 M=15 Y=0 K=0)Pc0.845029 0.492927 0.031678 0.029419 0.121569 0.411765 0.65098 Xa(C=85 M=50 Y=0 K=0)Pc0.948943 0.842283 0.054749 0.133486 0.129412 0.184314 0.466667 Xa(C=100 M=95 Y=5 K=0)Pc0.908629 0.854246 0.167056 0.395605 0.098039 0.101961 0.290196 Xa(C=100 M=100 Y=25 K=25)Pc0.775021 0.942443 0.019226 0.057679 0.329412 0.152941 0.47451 Xa(C=75 M=100 Y=0 K=0)Pc0.51339 0.932555 0.02472 0.045594 0.498039 0.160784 0.486275 Xa(C=50 M=100 Y=0 K=0)Pc0.222904 0.927245 0.209689 0.244846 0.545098 0.12549 0.333333 Xa(C=35 M=100 Y=35 K=10)Pc0.033051 0.954742 0.425788 0.075898 0.772549 0.117647 0.321569 Xa(C=10 M=100 Y=50 K=0)Pc0.01474 0.921355 0.195163 0.01767 0.854902 0.156863 0.435294 Xa(C=0 M=95 Y=20 K=0)Pc0.254643 0.240269 0.392035 0.005798 0.72549 0.682353 0.572549 Xa(C=25 M=25 Y=40 K=0)Pc0.426764 0.445502 0.502556 0.033814 0.560784 0.494118 0.439216 Xa(C=40 M=45 Y=50 K=5)Pc0.600488 0.557092 0.66067 0.14844 0.392157 0.364706 0.309804 Xa(C=50 M=50 Y=60 K=25)Pc0.63711 0.661433 0.711574 0.30695 0.298039 0.254902 0.223529 Xa(C=55 M=60 Y=65 K=40)Pc0.230808 0.368749 0.613977 0.040558 0.713726 0.572549 0.4 Xa(C=25 M=40 Y=65 K=0)Pc0.300175 0.484474 0.717891 0.107393 0.611765 0.454902 0.305882 Xa(C=30 M=50 Y=75 K=10)Pc0.383886 0.600763 0.790707 0.222965 0.482353 0.333333 0.223529 Xa(C=35 M=60 Y=80 K=25)Pc0.394293 0.615625 0.846708 0.362402 0.392157 0.266667 0.156863 Xa(C=40 M=65 Y=90 K=35)Pc0.389441 0.647394 0.869444 0.518822 0.305882 0.192157 0.090196 Xa(C=40 M=70 Y=100 K=50)Pc0.584771 0.700221 0.741512 0.652155 0.160784 0.105882 0.066667 Xa(C=50 M=70 Y=80 K=70)PcBb2 (Fade to Black) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Fade to Black)PcBb0 0 0 0 Bh2 (Super Soft Black Vignette) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Super Soft Black Vignette)PcBb2 (Green, Yellow, Orange) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Green, Yellow, Orange)PcBb0 0 0 0 Bh2 (Purple Radial) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Purple Radial)Pc(Laguna) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p(Laguna)Pc0.012024 0.931975 0.909422 0.032929 0.846361 0.132328 0.152561 (AutoCAD Color 1) 0 1 Xk(AutoCAD Color 1)Pc0.620752 0.083925 0.029786 0.00177 0.266856 0.700936 0.857181 (AutoCAD Color) 0 1 Xk(AutoCAD Color)Pc0.789425 0.732296 0.680781 0.689296 0.070588 0.070588 0.070588 Xa(C=0 M=0 Y=0 K=100)Pc0.800473 0.720577 0.701808 0.380835 0.188235 0.196078 0.192157 Xa(C=0 M=0 Y=0 K=90)Pc0.745174 0.653254 0.622492 0.188205 0.290196 0.298039 0.294118 Xa(C=0 M=0 Y=0 K=80)Pc0.663722 0.550133 0.527062 0.080568 0.376471 0.388235 0.384314 Xa(C=0 M=0 Y=0 K=70)Pc0.568749 0.457649 0.438788 0.034516 0.454902 0.466667 0.462745 Xa(C=0 M=0 Y=0 K=60)Pc0.469947 0.375402 0.346044 0.011078 0.533333 0.541176 0.541176 Xa(C=0 M=0 Y=0 K=50)Pc0.373541 0.290227 0.274205 0.002625 0.615686 0.623529 0.619608 Xa(C=0 M=0 Y=0 K=40)Pc0.282383 0.202152 0.190463 0.000336 0.698039 0.709804 0.705882 Xa(C=0 M=0 Y=0 K=30)Pc0.191165 0.119814 0.114412 0 0.788235 0.8 0.796078 Xa(C=0 M=0 Y=0 K=20)Pc0.090883 0.057862 0.045747 0 0.886275 0.894118 0.894118 Xa(C=0 M=0 Y=0 K=10)Pc0.040833 0.025299 0.021851 0 0.945098 0.94902 0.945098 Xa(C=0 M=0 Y=0 K=5)Pc0.012146 0.934478 0.904173 0.033722 0.847059 0.121569 0.152941 Xa(C=0 M=100 Y=100 K=0)Pc0.009491 0.717555 0.915465 0.026123 0.878431 0.364706 0.14902 Xa(C=0 M=75 Y=100 K=0)Pc0.006622 0.079103 0.906645 0.012848 0.992157 0.858824 0.176471 Xa(C=0 M=10 Y=95 K=0)Pc0.811154 0.033875 0.92343 0.071901 0 0.588235 0.27451 Xa(C=85 M=10 Y=100 K=0)Pc0.95996 0.819913 0.035309 0.087587 0.105882 0.211765 0.505882 Xa(C=100 M=90 Y=0 K=0)Pc0.618585 0.875364 0.013275 0.020569 0.439216 0.219608 0.513726 Xa(C=60 M=90 Y=0 K=0)PcPB%AI5_EndPalette%%EndSetup%AI5_BeginLayer1 1 1 1 0 0 1 0 79 128 255 0 50 Lb(cut) Ln0 Au1 Ap0 R0.002411 0.840391 0.928649 0.006073 1 0 0 XA0 J 0 j 0.2 w 10 M []0 d0 XR966.6914 -256.6577 m966.6914 -274.27 952.4141 -288.5474 934.8018 -288.5474 c917.1895 -288.5474 902.9121 -274.27 902.9121 -256.6577 c902.9121 -239.0454 917.1895 -224.7681 934.8018 -224.7681 c952.4141 -224.7681 966.6914 -239.0454 966.6914 -256.6577 cs895.1172 -212.7212 m895.1172 -215.0688 893.2129 -216.9731 890.8652 -216.9731 c888.5166 -216.9731 886.6133 -215.0688 886.6133 -212.7212 c886.6133 -210.3726 888.5166 -208.4692 890.8652 -208.4692 c893.2129 -208.4692 895.1172 -210.3726 895.1172 -212.7212 cs895.1172 -300.5952 m895.1172 -302.9429 893.2129 -304.8472 890.8652 -304.8472 c888.5166 -304.8472 886.6133 -302.9429 886.6133 -300.5952 c886.6133 -298.2466 888.5166 -296.3433 890.8652 -296.3433 c893.2129 -296.3433 895.1172 -298.2466 895.1172 -300.5952 cs982.9912 -300.5952 m982.9912 -302.9429 981.0869 -304.8472 978.7393 -304.8472 c976.3906 -304.8472 974.4873 -302.9429 974.4873 -300.5952 c974.4873 -298.2466 976.3906 -296.3433 978.7393 -296.3433 c981.0869 -296.3433 982.9912 -298.2466 982.9912 -300.5952 cs982.9912 -212.7212 m982.9912 -215.0688 981.0869 -216.9731 978.7393 -216.9731 c976.3906 -216.9731 974.4873 -215.0688 974.4873 -212.7212 c974.4873 -210.3726 976.3906 -208.4692 978.7393 -208.4692 c981.0869 -208.4692 982.9912 -210.3726 982.9912 -212.7212 cs1023.1016 -316.6108 m1143.0059 -316.6108 L1143.0059 -196.7046 L1023.1016 -196.7046 L994.7549 -196.7046 L874.8496 -196.7046 L874.8496 -316.6108 L994.7549 -316.6108 L1023.1016 -316.6108 Ls1114.9434 -256.6577 m1114.9434 -274.27 1100.666 -288.5474 1083.0537 -288.5474 c1065.4414 -288.5474 1051.1641 -274.27 1051.1641 -256.6577 c1051.1641 -239.0454 1065.4414 -224.7681 1083.0537 -224.7681 c1100.666 -224.7681 1114.9434 -239.0454 1114.9434 -256.6577 cs1043.3682 -212.7212 m1043.3682 -215.0688 1041.4648 -216.9731 1039.1172 -216.9731 c1036.7686 -216.9731 1034.8652 -215.0688 1034.8652 -212.7212 c1034.8652 -210.3726 1036.7686 -208.4692 1039.1172 -208.4692 c1041.4648 -208.4692 1043.3682 -210.3726 1043.3682 -212.7212 cs1043.3682 -300.5952 m1043.3682 -302.9429 1041.4648 -304.8472 1039.1172 -304.8472 c1036.7686 -304.8472 1034.8652 -302.9429 1034.8652 -300.5952 c1034.8652 -298.2466 1036.7686 -296.3433 1039.1172 -296.3433 c1041.4648 -296.3433 1043.3682 -298.2466 1043.3682 -300.5952 cs1131.2422 -300.5952 m1131.2422 -302.9429 1129.3389 -304.8472 1126.9902 -304.8472 c1124.6426 -304.8472 1122.7383 -302.9429 1122.7383 -300.5952 c1122.7383 -298.2466 1124.6426 -296.3433 1126.9902 -296.3433 c1129.3389 -296.3433 1131.2422 -298.2466 1131.2422 -300.5952 cs1131.2422 -212.7212 m1131.2422 -215.0688 1129.3389 -216.9731 1126.9902 -216.9731 c1124.6426 -216.9731 1122.7383 -215.0688 1122.7383 -212.7212 c1122.7383 -210.3726 1124.6426 -208.4692 1126.9902 -208.4692 c1129.3389 -208.4692 1131.2422 -210.3726 1131.2422 -212.7212 csU0.25714 w811.4834 -151.3506 m804.4385 -151.3506 798.7275 -145.6396 798.7275 -138.5947 c798.7275 -131.5498 804.4385 -125.8389 811.4834 -125.8389 c818.5283 -125.8389 824.2393 -131.5498 824.2393 -138.5947 c824.2393 -145.6396 818.5283 -151.3506 811.4834 -151.3506 cs0.2 w855.4204 -98.9097 m853.0723 -98.9097 851.1685 -97.0059 851.1685 -94.6577 c851.1685 -92.3096 853.0723 -90.4058 855.4204 -90.4058 c857.7686 -90.4058 859.6724 -92.3096 859.6724 -94.6577 c859.6724 -97.0059 857.7686 -98.9097 855.4204 -98.9097 cs767.5464 -98.9097 m765.1982 -98.9097 763.2944 -97.0059 763.2944 -94.6577 c763.2944 -92.3096 765.1982 -90.4058 767.5464 -90.4058 c769.8945 -90.4058 771.7983 -92.3096 771.7983 -94.6577 c771.7983 -97.0059 769.8945 -98.9097 767.5464 -98.9097 cs767.5464 -186.7837 m765.1982 -186.7837 763.2944 -184.8799 763.2944 -182.5317 c763.2944 -180.1836 765.1982 -178.2798 767.5464 -178.2798 c769.8945 -178.2798 771.7983 -180.1836 771.7983 -182.5317 c771.7983 -184.8799 769.8945 -186.7837 767.5464 -186.7837 cs855.4204 -186.7837 m853.0723 -186.7837 851.1685 -184.8799 851.1685 -182.5317 c851.1685 -180.1836 853.0723 -178.2798 855.4204 -178.2798 c857.7686 -178.2798 859.6724 -180.1836 859.6724 -182.5317 c859.6724 -184.8799 857.7686 -186.7837 855.4204 -186.7837 cs0.25714 w811.4834 -299.6025 m804.4385 -299.6025 798.7275 -293.8916 798.7275 -286.8467 c798.7275 -279.8018 804.4385 -274.0908 811.4834 -274.0908 c818.5283 -274.0908 824.2393 -279.8018 824.2393 -286.8467 c824.2393 -293.8916 818.5283 -299.6025 811.4834 -299.6025 cs0.2 w855.4204 -247.1611 m853.0723 -247.1611 851.1685 -245.2578 851.1685 -242.9097 c851.1685 -240.5615 853.0723 -238.6577 855.4204 -238.6577 c857.7686 -238.6577 859.6724 -240.5615 859.6724 -242.9097 c859.6724 -245.2578 857.7686 -247.1611 855.4204 -247.1611 cs767.5464 -247.1611 m765.1982 -247.1611 763.2944 -245.2578 763.2944 -242.9097 c763.2944 -240.5615 765.1982 -238.6577 767.5464 -238.6577 c769.8945 -238.6577 771.7983 -240.5615 771.7983 -242.9097 c771.7983 -245.2578 769.8945 -247.1611 767.5464 -247.1611 cs767.5464 -335.0352 m765.1982 -335.0352 763.2944 -333.1318 763.2944 -330.7832 c763.2944 -328.4355 765.1982 -326.5313 767.5464 -326.5313 c769.8945 -326.5313 771.7983 -328.4355 771.7983 -330.7832 c771.7983 -333.1318 769.8945 -335.0352 767.5464 -335.0352 cs855.4204 -335.0352 m853.0723 -335.0352 851.1685 -333.1318 851.1685 -330.7832 c851.1685 -328.4355 853.0723 -326.5313 855.4204 -326.5313 c857.7686 -326.5313 859.6724 -328.4355 859.6724 -330.7832 c859.6724 -333.1318 857.7686 -335.0352 855.4204 -335.0352 cs837.2778 -55.9644 m837.2778 -56.1216 837.1509 -56.2485 836.9937 -56.2485 c836.8374 -56.2485 836.7104 -56.1216 836.7104 -55.9644 c836.7104 -55.8081 836.8374 -55.6812 836.9937 -55.6812 c837.1509 -55.6812 837.2778 -55.8081 837.2778 -55.9644 cs848.6177 -55.9644 m848.6177 -56.1216 848.4907 -56.2485 848.3335 -56.2485 c848.1772 -56.2485 848.0503 -56.1216 848.0503 -55.9644 c848.0503 -55.8081 848.1772 -55.6812 848.3335 -55.6812 c848.4907 -55.6812 848.6177 -55.8081 848.6177 -55.9644 cs837.2778 -44.6255 m837.2778 -44.7827 837.1509 -44.9097 836.9937 -44.9097 c836.8374 -44.9097 836.7104 -44.7827 836.7104 -44.6255 c836.7104 -44.4692 836.8374 -44.3423 836.9937 -44.3423 c837.1509 -44.3423 837.2778 -44.4692 837.2778 -44.6255 cs848.6177 -44.6255 m848.6177 -44.7827 848.4907 -44.9097 848.3335 -44.9097 c848.1772 -44.9097 848.0503 -44.7827 848.0503 -44.6255 c848.0503 -44.4692 848.1772 -44.3423 848.3335 -44.3423 c848.4907 -44.3423 848.6177 -44.4692 848.6177 -44.6255 cs0 Ap836.9946 -55.9653 m836.9946 -44.6255 L848.3345 -44.6255 L848.3345 -55.9653 L836.9946 -55.9653 LS1 Ap859.6733 -50.2954 m859.6733 -52.644 857.77 -54.5474 855.4214 -54.5474 c853.0728 -54.5474 851.1694 -52.644 851.1694 -50.2954 c851.1694 -47.9468 853.0728 -46.0435 855.4214 -46.0435 c857.77 -46.0435 859.6733 -47.9468 859.6733 -50.2954 cs0 Ap785.9722 -44.6255 m785.9722 -55.9653 L774.6323 -55.9653 L774.6323 -44.6255 L785.9722 -44.6255 LS1 Ap786.2563 -55.9644 m786.2563 -56.1216 786.1294 -56.2485 785.9722 -56.2485 c785.8159 -56.2485 785.689 -56.1216 785.689 -55.9644 c785.689 -55.8081 785.8159 -55.6812 785.9722 -55.6812 c786.1294 -55.6812 786.2563 -55.8081 786.2563 -55.9644 cs774.9155 -55.9644 m774.9155 -56.1216 774.7886 -56.2485 774.6313 -56.2485 c774.4751 -56.2485 774.3481 -56.1216 774.3481 -55.9644 c774.3481 -55.8081 774.4751 -55.6812 774.6313 -55.6812 c774.7886 -55.6812 774.9155 -55.8081 774.9155 -55.9644 cs774.9165 -44.6255 m774.9165 -44.7827 774.7896 -44.9097 774.6323 -44.9097 c774.4761 -44.9097 774.3491 -44.7827 774.3491 -44.6255 c774.3491 -44.4692 774.4761 -44.3423 774.6323 -44.3423 c774.7896 -44.3423 774.9165 -44.4692 774.9165 -44.6255 cs786.2563 -44.6255 m786.2563 -44.7827 786.1294 -44.9097 785.9722 -44.9097 c785.8159 -44.9097 785.689 -44.7827 785.689 -44.6255 c785.689 -44.4692 785.8159 -44.3423 785.9722 -44.3423 c786.1294 -44.3423 786.2563 -44.4692 786.2563 -44.6255 cs771.7993 -50.2954 m771.7993 -52.644 769.896 -54.5474 767.5474 -54.5474 c765.1987 -54.5474 763.2954 -52.644 763.2954 -50.2954 c763.2954 -47.9468 765.1987 -46.0435 767.5474 -46.0435 c769.896 -46.0435 771.7993 -47.9468 771.7993 -50.2954 cs751.5303 -78.6421 m751.5303 -21.9487 L871.4365 -21.9487 L871.4365 -78.6421 L871.4365 -198.5474 L871.4365 -226.894 L871.4365 -346.7988 L871.4365 -403.4922 L751.5303 -403.4922 L751.5303 -346.7988 L751.5303 -226.894 L751.5303 -198.5474 L751.5303 -78.6421 Ls837.2778 -380.8145 m837.2778 -380.9717 837.1509 -381.0986 836.9937 -381.0986 c836.8374 -381.0986 836.7104 -380.9717 836.7104 -380.8145 c836.7104 -380.6582 836.8374 -380.5313 836.9937 -380.5313 c837.1509 -380.5313 837.2778 -380.6582 837.2778 -380.8145 cs848.6177 -380.8145 m848.6177 -380.9717 848.4907 -381.0986 848.3335 -381.0986 c848.1772 -381.0986 848.0503 -380.9717 848.0503 -380.8145 c848.0503 -380.6582 848.1772 -380.5313 848.3335 -380.5313 c848.4907 -380.5313 848.6177 -380.6582 848.6177 -380.8145 cs837.2778 -369.4756 m837.2778 -369.6328 837.1509 -369.7598 836.9937 -369.7598 c836.8374 -369.7598 836.7104 -369.6328 836.7104 -369.4756 c836.7104 -369.3193 836.8374 -369.1924 836.9937 -369.1924 c837.1509 -369.1924 837.2778 -369.3193 837.2778 -369.4756 cs848.6177 -369.4756 m848.6177 -369.6328 848.4907 -369.7598 848.3335 -369.7598 c848.1772 -369.7598 848.0503 -369.6328 848.0503 -369.4756 c848.0503 -369.3193 848.1772 -369.1924 848.3335 -369.1924 c848.4907 -369.1924 848.6177 -369.3193 848.6177 -369.4756 cs0 Ap836.9946 -380.8154 m836.9946 -369.4756 L848.3345 -369.4756 L848.3345 -380.8154 L836.9946 -380.8154 LS1 Ap859.6733 -375.1455 m859.6733 -377.4941 857.77 -379.3975 855.4214 -379.3975 c853.0728 -379.3975 851.1694 -377.4941 851.1694 -375.1455 c851.1694 -372.7969 853.0728 -370.8936 855.4214 -370.8936 c857.77 -370.8936 859.6733 -372.7969 859.6733 -375.1455 cs0 Ap785.9722 -369.4756 m785.9722 -380.8154 L774.6323 -380.8154 L774.6323 -369.4756 L785.9722 -369.4756 LS1 Ap786.2563 -380.8145 m786.2563 -380.9717 786.1294 -381.0986 785.9722 -381.0986 c785.8159 -381.0986 785.689 -380.9717 785.689 -380.8145 c785.689 -380.6582 785.8159 -380.5313 785.9722 -380.5313 c786.1294 -380.5313 786.2563 -380.6582 786.2563 -380.8145 cs774.9155 -380.8145 m774.9155 -380.9717 774.7886 -381.0986 774.6313 -381.0986 c774.4751 -381.0986 774.3481 -380.9717 774.3481 -380.8145 c774.3481 -380.6582 774.4751 -380.5313 774.6313 -380.5313 c774.7886 -380.5313 774.9155 -380.6582 774.9155 -380.8145 cs774.9165 -369.4756 m774.9165 -369.6328 774.7896 -369.7598 774.6323 -369.7598 c774.4761 -369.7598 774.3491 -369.6328 774.3491 -369.4756 c774.3491 -369.3193 774.4761 -369.1924 774.6323 -369.1924 c774.7896 -369.1924 774.9165 -369.3193 774.9165 -369.4756 cs786.2563 -369.4756 m786.2563 -369.6328 786.1294 -369.7598 785.9722 -369.7598 c785.8159 -369.7598 785.689 -369.6328 785.689 -369.4756 c785.689 -369.3193 785.8159 -369.1924 785.9722 -369.1924 c786.1294 -369.1924 786.2563 -369.3193 786.2563 -369.4756 cs771.7993 -375.1455 m771.7993 -377.4941 769.896 -379.3975 767.5474 -379.3975 c765.1987 -379.3975 763.2954 -377.4941 763.2954 -375.1455 c763.2954 -372.7969 765.1987 -370.8936 767.5474 -370.8936 c769.896 -370.8936 771.7993 -372.7969 771.7993 -375.1455 csuu899.7793 -61.1426 m899.7793 -41.3008 L900.6289 -41.3008 L900.6289 -61.1426 L899.7793 -61.1426 Ls899.7793 -61.4258 m899.6221 -61.4258 899.4951 -61.2988 899.4951 -61.1426 c899.4951 -60.9863 899.6221 -60.8594 899.7793 -60.8594 c899.9355 -60.8594 900.0625 -60.9863 900.0625 -61.1426 c900.0625 -61.2988 899.9355 -61.4258 899.7793 -61.4258 cs899.7793 -41.584 m899.6221 -41.584 899.4951 -41.457 899.4951 -41.2988 c899.4951 -41.1426 899.6221 -41.0156 899.7793 -41.0156 c899.9355 -41.0156 900.0625 -41.1426 900.0625 -41.2988 c900.0625 -41.457 899.9355 -41.584 899.7793 -41.584 csU907.4316 -58.5908 m907.4316 -43.8516 L900.6289 -43.8516 L900.6289 -58.5908 L907.4316 -58.5908 LsU1005.1953 -116.9873 m985.3535 -116.9873 L985.3535 -116.1377 L1005.1953 -116.1377 L1005.1953 -116.9873 Ls1005.4785 -116.9873 m1005.4785 -117.1445 1005.3516 -117.2715 1005.1953 -117.2715 c1005.0391 -117.2715 1004.9121 -117.1445 1004.9121 -116.9873 c1004.9121 -116.8311 1005.0391 -116.7041 1005.1953 -116.7041 c1005.3516 -116.7041 1005.4785 -116.8311 1005.4785 -116.9873 cs985.6367 -116.9873 m985.6367 -117.1445 985.5098 -117.2715 985.3516 -117.2715 c985.1953 -117.2715 985.0684 -117.1445 985.0684 -116.9873 c985.0684 -116.8311 985.1953 -116.7041 985.3516 -116.7041 c985.5098 -116.7041 985.6367 -116.8311 985.6367 -116.9873 cs1002.6436 -109.335 m987.9043 -109.335 L987.9043 -116.1377 L1002.6436 -116.1377 L1002.6436 -109.335 Ls0 Ap964.585 -125.4121 mS1011.2891 -125.4121 mS1 Ap897.4756 -116.9873 m917.3174 -116.9873 L917.3174 -116.1377 L897.4756 -116.1377 L897.4756 -116.9873 Ls897.1924 -116.9873 m897.1924 -117.1445 897.3193 -117.2715 897.4756 -117.2715 c897.6318 -117.2715 897.7588 -117.1445 897.7588 -116.9873 c897.7588 -116.8311 897.6318 -116.7041 897.4756 -116.7041 c897.3193 -116.7041 897.1924 -116.8311 897.1924 -116.9873 cs917.0342 -116.9873 m917.0342 -117.1445 917.1611 -117.2715 917.3193 -117.2715 c917.4756 -117.2715 917.6025 -117.1445 917.6025 -116.9873 c917.6025 -116.8311 917.4756 -116.7041 917.3193 -116.7041 c917.1611 -116.7041 917.0342 -116.8311 917.0342 -116.9873 cs900.0273 -109.335 m914.7666 -109.335 L914.7666 -116.1377 L900.0273 -116.1377 L900.0273 -109.335 Ls0 Ap891.3828 -81.9092 m891.3828 -125.4141 L891.3828 -125.4121 L903.1455 -125.4121 L903.1455 -91.3975 L911.6494 -91.3975 L911.6494 -125.4121 L914.4844 -125.4121 L914.4844 -136.752 L925.8242 -136.752 L926.3379 -132.9834 L926.3379 -129.1797 L925.8242 -125.4121 L925.8242 -125.4141 L976.8467 -125.4141 L976.8467 -125.4121 L976.333 -129.1797 L976.333 -132.9834 L976.8467 -136.752 L988.1865 -136.752 L988.1865 -125.4121 L991.0215 -125.4121 L991.0215 -91.3975 L999.5254 -91.3975 L999.5254 -125.4121 L1011.2891 -125.4141 L1011.2891 -20.5322 L891.3828 -20.5322 L891.3828 -32.7734 L891.3545 -32.7939 L887.5869 -32.2803 L883.7832 -32.2803 L880.0146 -32.7939 L880.0146 -44.1338 L891.3545 -44.1338 L891.3545 -46.9688 L925.3691 -46.9688 L925.3691 -55.4727 L891.3545 -55.4727 L891.3545 -58.3066 L879.9297 -58.3066 L879.9297 -69.6465 L883.6982 -70.1602 L887.502 -70.1602 L891.3545 -69.6465 L891.3828 -81.9092 Lsuu1 Ap1031.4961 -146.1729 m1031.4961 -166.0146 L1032.3457 -166.0146 L1032.3457 -146.1729 L1031.4961 -146.1729 Ls1031.4961 -145.8896 m1031.3398 -145.8896 1031.2129 -146.0166 1031.2129 -146.1729 c1031.2129 -146.3291 1031.3398 -146.4561 1031.4961 -146.4561 c1031.6523 -146.4561 1031.7793 -146.3291 1031.7793 -146.1729 c1031.7793 -146.0166 1031.6523 -145.8896 1031.4961 -145.8896 cs1031.4961 -165.7314 m1031.3398 -165.7314 1031.2129 -165.8584 1031.2129 -166.0166 c1031.2129 -166.1729 1031.3398 -166.2998 1031.4961 -166.2998 c1031.6523 -166.2998 1031.7793 -166.1729 1031.7793 -166.0166 c1031.7793 -165.8584 1031.6523 -165.7314 1031.4961 -165.7314 csU1039.1484 -148.7246 m1039.1484 -163.4639 L1032.3457 -163.4639 L1032.3457 -148.7246 L1039.1484 -148.7246 LsU1136.9121 -90.3281 m1117.0703 -90.3281 L1117.0703 -91.1777 L1136.9121 -91.1777 L1136.9121 -90.3281 Ls1137.1953 -90.3281 m1137.1953 -90.1709 1137.0684 -90.0439 1136.9121 -90.0439 c1136.7559 -90.0439 1136.6289 -90.1709 1136.6289 -90.3281 c1136.6289 -90.4844 1136.7559 -90.6113 1136.9121 -90.6113 c1137.0684 -90.6113 1137.1953 -90.4844 1137.1953 -90.3281 cs1117.3535 -90.3281 m1117.3535 -90.1709 1117.2266 -90.0439 1117.0684 -90.0439 c1116.9121 -90.0439 1116.7852 -90.1709 1116.7852 -90.3281 c1116.7852 -90.4844 1116.9121 -90.6113 1117.0684 -90.6113 c1117.2266 -90.6113 1117.3535 -90.4844 1117.3535 -90.3281 cs1134.3613 -97.9805 m1119.6211 -97.9805 L1119.6211 -91.1777 L1134.3613 -91.1777 L1134.3613 -97.9805 Ls0 Ap1096.3027 -81.9033 mS1143.0059 -81.9033 mS1 Ap1029.1934 -90.3281 m1049.0352 -90.3281 L1049.0352 -91.1777 L1029.1934 -91.1777 L1029.1934 -90.3281 Ls1028.9102 -90.3281 m1028.9102 -90.1709 1029.0371 -90.0439 1029.1934 -90.0439 c1029.3496 -90.0439 1029.4766 -90.1709 1029.4766 -90.3281 c1029.4766 -90.4844 1029.3496 -90.6113 1029.1934 -90.6113 c1029.0371 -90.6113 1028.9102 -90.4844 1028.9102 -90.3281 cs1048.752 -90.3281 m1048.752 -90.1709 1048.8789 -90.0439 1049.0371 -90.0439 c1049.1934 -90.0439 1049.3203 -90.1709 1049.3203 -90.3281 c1049.3203 -90.4844 1049.1934 -90.6113 1049.0371 -90.6113 c1048.8789 -90.6113 1048.752 -90.4844 1048.752 -90.3281 cs1031.7441 -97.9805 m1046.4844 -97.9805 L1046.4844 -91.1777 L1031.7441 -91.1777 L1031.7441 -97.9805 Ls0 Ap1023.0996 -125.4063 m1023.0996 -81.9014 L1023.0996 -81.9033 L1034.8633 -81.9033 L1034.8633 -115.918 L1043.3672 -115.918 L1043.3672 -81.9033 L1046.2012 -81.9033 L1046.2012 -70.5635 L1057.541 -70.5635 L1058.0547 -74.332 L1058.0547 -78.1357 L1057.541 -81.9033 L1057.542 -81.9014 L1108.5645 -81.9014 L1108.5645 -81.9033 L1108.0508 -78.1357 L1108.0508 -74.332 L1108.5645 -70.5635 L1119.9043 -70.5635 L1119.9043 -81.9033 L1122.7383 -81.9033 L1122.7383 -115.918 L1131.2422 -115.918 L1131.2422 -81.9033 L1143.0059 -81.9014 L1143.0059 -186.7832 L1023.0996 -186.7832 L1023.0996 -174.542 L1023.0723 -174.5215 L1019.3047 -175.0352 L1015.5 -175.0352 L1011.7324 -174.5215 L1011.7324 -163.1816 L1023.0723 -163.1816 L1023.0723 -160.3467 L1057.0859 -160.3467 L1057.0859 -151.8428 L1023.0723 -151.8428 L1023.0723 -149.0088 L1011.6465 -149.0088 L1011.6465 -137.6689 L1015.416 -137.1553 L1019.2188 -137.1553 L1023.0723 -137.6689 L1023.0996 -125.4063 Ls908.9434 -352.748 m909.457 -348.9805 L909.457 -345.1768 L908.9434 -341.4082 LS908.9434 -341.4082 m920.2832 -341.4082 LS920.2832 -341.4082 m919.7695 -345.1768 L919.7695 -348.9805 L920.2832 -352.748 LS920.2832 -352.748 m919.7695 -356.5166 L919.7695 -360.3203 L920.2832 -364.0889 LS920.2832 -364.0889 m908.9434 -364.0889 LS908.9434 -364.0889 m909.457 -360.3203 L909.457 -356.5166 L908.9434 -352.748 LS886.2656 -352.748 m886.7773 -348.9805 L886.7773 -345.1768 L886.2656 -341.4082 LS886.2656 -341.4082 m897.6035 -341.4082 LS897.6035 -341.4082 m897.0898 -345.1768 L897.0898 -348.9805 L897.6035 -352.748 LS897.6035 -352.748 m897.0898 -356.5166 L897.0898 -360.3203 L897.6035 -364.0889 LS897.6035 -364.0889 m886.2656 -364.0889 LS886.2656 -364.0889 m886.7773 -360.3203 L886.7773 -356.5166 L886.2656 -352.748 LS874.9238 -352.748 m886.2656 -352.748 LS897.6035 -352.748 m908.9434 -352.748 LS920.2832 -352.748 m931.0566 -352.748 LS931.623 -353.3154 m931.623 -381.0986 L874.9238 -381.0986 L874.9238 -373.8076 L874.9238 -372.6738 L874.9238 -332.8232 L874.9238 -331.6895 L874.9238 -324.3984 L931.623 -324.3984 L931.623 -352.1816 L931.623 -353.3154 Ls968.3613 -352.748 m968.875 -348.9805 L968.875 -345.1768 L968.3613 -341.4082 LS968.3613 -341.4082 m979.7012 -341.4082 LS979.7012 -341.4082 m979.1875 -345.1768 L979.1875 -348.9805 L979.7012 -352.748 LS979.7012 -352.748 m979.1875 -356.5166 L979.1875 -360.3203 L979.7012 -364.0889 LS979.7012 -364.0889 m968.3613 -364.0889 LS968.3613 -364.0889 m968.875 -360.3203 L968.875 -356.5166 L968.3613 -352.748 LS945.6836 -352.748 m946.1953 -348.9805 L946.1953 -345.1768 L945.6836 -341.4082 LS945.6836 -341.4082 m957.0215 -341.4082 LS957.0215 -341.4082 m956.5078 -345.1768 L956.5078 -348.9805 L957.0215 -352.748 LS957.0215 -352.748 m956.5078 -356.5166 L956.5078 -360.3203 L957.0215 -364.0889 LS957.0215 -364.0889 m945.6836 -364.0889 LS945.6836 -364.0889 m946.1953 -360.3203 L946.1953 -356.5166 L945.6836 -352.748 LS934.3418 -352.748 m945.6836 -352.748 LS957.0215 -352.748 m968.3613 -352.748 LS979.7012 -352.748 m990.4746 -352.748 LS991.041 -353.3154 m991.041 -381.0986 L934.3418 -381.0986 L934.3418 -373.8076 L934.3418 -372.6738 L934.3418 -332.8232 L934.3418 -331.6895 L934.3418 -324.3984 L991.041 -324.3984 L991.041 -352.1816 L991.041 -353.3154 Ls1 Ap120.9678 -396.4063 m120.9678 -29.0352 LS128.0547 -21.9487 m751.5298 -21.9487 L751.5298 -403.4922 L128.0547 -403.4922 LS648.1904 -55.6807 m648.1904 -55.8379 648.0635 -55.9648 647.9063 -55.9648 c647.75 -55.9648 647.623 -55.8379 647.623 -55.6807 c647.623 -55.5244 647.75 -55.3975 647.9063 -55.3975 c648.0635 -55.3975 648.1904 -55.5244 648.1904 -55.6807 cs659.5303 -55.6807 m659.5303 -55.8379 659.4033 -55.9648 659.2461 -55.9648 c659.0898 -55.9648 658.9629 -55.8379 658.9629 -55.6807 c658.9629 -55.5244 659.0898 -55.3975 659.2461 -55.3975 c659.4033 -55.3975 659.5303 -55.5244 659.5303 -55.6807 cs648.1904 -44.3418 m648.1904 -44.499 648.0635 -44.626 647.9063 -44.626 c647.75 -44.626 647.623 -44.499 647.623 -44.3418 c647.623 -44.1855 647.75 -44.0586 647.9063 -44.0586 c648.0635 -44.0586 648.1904 -44.1855 648.1904 -44.3418 cs659.5303 -44.3418 m659.5303 -44.499 659.4033 -44.626 659.2461 -44.626 c659.0898 -44.626 658.9629 -44.499 658.9629 -44.3418 c658.9629 -44.1855 659.0898 -44.0586 659.2461 -44.0586 c659.4033 -44.0586 659.5303 -44.1855 659.5303 -44.3418 cs0 Ap684.7588 -44.3418 m684.7588 -55.6816 L673.4189 -55.6816 L673.4189 -44.3418 L684.7588 -44.3418 LS647.9072 -55.6816 m647.9072 -44.3418 L659.2471 -44.3418 L659.2471 -55.6816 L647.9072 -55.6816 LS1 Ap685.043 -55.6807 m685.043 -55.8379 684.916 -55.9648 684.7588 -55.9648 c684.6025 -55.9648 684.4756 -55.8379 684.4756 -55.6807 c684.4756 -55.5244 684.6025 -55.3975 684.7588 -55.3975 c684.916 -55.3975 685.043 -55.5244 685.043 -55.6807 cs673.7021 -55.6807 m673.7021 -55.8379 673.5752 -55.9648 673.418 -55.9648 c673.2617 -55.9648 673.1348 -55.8379 673.1348 -55.6807 c673.1348 -55.5244 673.2617 -55.3975 673.418 -55.3975 c673.5752 -55.3975 673.7021 -55.5244 673.7021 -55.6807 cs673.7031 -44.3418 m673.7031 -44.499 673.5762 -44.626 673.4189 -44.626 c673.2627 -44.626 673.1357 -44.499 673.1357 -44.3418 c673.1357 -44.1855 673.2627 -44.0586 673.4189 -44.0586 c673.5762 -44.0586 673.7031 -44.1855 673.7031 -44.3418 cs685.043 -44.3418 m685.043 -44.499 684.916 -44.626 684.7588 -44.626 c684.6025 -44.626 684.4756 -44.499 684.4756 -44.3418 c684.4756 -44.1855 684.6025 -44.0586 684.7588 -44.0586 c684.916 -44.0586 685.043 -44.1855 685.043 -44.3418 cs670.5859 -50.0117 m670.5859 -52.3604 668.6826 -54.2637 666.334 -54.2637 c663.9854 -54.2637 662.082 -52.3604 662.082 -50.0117 c662.082 -47.6631 663.9854 -45.7598 666.334 -45.7598 c668.6826 -45.7598 670.5859 -47.6631 670.5859 -50.0117 cs648.1904 -380.8145 m648.1904 -380.9717 648.0635 -381.0986 647.9063 -381.0986 c647.75 -381.0986 647.623 -380.9717 647.623 -380.8145 c647.623 -380.6582 647.75 -380.5313 647.9063 -380.5313 c648.0635 -380.5313 648.1904 -380.6582 648.1904 -380.8145 cs659.5303 -380.8145 m659.5303 -380.9717 659.4033 -381.0986 659.2461 -381.0986 c659.0898 -381.0986 658.9629 -380.9717 658.9629 -380.8145 c658.9629 -380.6582 659.0898 -380.5313 659.2461 -380.5313 c659.4033 -380.5313 659.5303 -380.6582 659.5303 -380.8145 cs648.1904 -369.4756 m648.1904 -369.6328 648.0635 -369.7598 647.9063 -369.7598 c647.75 -369.7598 647.623 -369.6328 647.623 -369.4756 c647.623 -369.3193 647.75 -369.1924 647.9063 -369.1924 c648.0635 -369.1924 648.1904 -369.3193 648.1904 -369.4756 cs659.5303 -369.4756 m659.5303 -369.6328 659.4033 -369.7598 659.2461 -369.7598 c659.0898 -369.7598 658.9629 -369.6328 658.9629 -369.4756 c658.9629 -369.3193 659.0898 -369.1924 659.2461 -369.1924 c659.4033 -369.1924 659.5303 -369.3193 659.5303 -369.4756 cs0 Ap684.7588 -369.4756 m684.7588 -380.8154 L673.4189 -380.8154 L673.4189 -369.4756 L684.7588 -369.4756 LS647.9072 -380.8154 m647.9072 -369.4756 L659.2471 -369.4756 L659.2471 -380.8154 L647.9072 -380.8154 LS1 Ap685.043 -380.8145 m685.043 -380.9717 684.916 -381.0986 684.7588 -381.0986 c684.6025 -381.0986 684.4756 -380.9717 684.4756 -380.8145 c684.4756 -380.6582 684.6025 -380.5313 684.7588 -380.5313 c684.916 -380.5313 685.043 -380.6582 685.043 -380.8145 cs673.7021 -380.8145 m673.7021 -380.9717 673.5752 -381.0986 673.418 -381.0986 c673.2617 -381.0986 673.1348 -380.9717 673.1348 -380.8145 c673.1348 -380.6582 673.2617 -380.5313 673.418 -380.5313 c673.5752 -380.5313 673.7021 -380.6582 673.7021 -380.8145 cs673.7031 -369.4756 m673.7031 -369.6328 673.5762 -369.7598 673.4189 -369.7598 c673.2627 -369.7598 673.1357 -369.6328 673.1357 -369.4756 c673.1357 -369.3193 673.2627 -369.1924 673.4189 -369.1924 c673.5762 -369.1924 673.7031 -369.3193 673.7031 -369.4756 cs685.043 -369.4756 m685.043 -369.6328 684.916 -369.7598 684.7588 -369.7598 c684.6025 -369.7598 684.4756 -369.6328 684.4756 -369.4756 c684.4756 -369.3193 684.6025 -369.1924 684.7588 -369.1924 c684.916 -369.1924 685.043 -369.3193 685.043 -369.4756 cs670.5859 -375.1455 m670.5859 -377.4941 668.6826 -379.3975 666.334 -379.3975 c663.9854 -379.3975 662.082 -377.4941 662.082 -375.1455 c662.082 -372.7969 663.9854 -370.8936 666.334 -370.8936 c668.6826 -370.8936 670.5859 -372.7969 670.5859 -375.1455 cs722.0825 -37.5391 m719.7339 -37.5391 717.8306 -35.6357 717.8306 -33.2871 c717.8306 -30.9385 719.7339 -29.0352 722.0825 -29.0352 c733.1035 -29.0352 l735.4521 -29.0352 737.3555 -30.9385 737.3555 -33.2871 c737.3555 -35.6357 735.4521 -37.5391 733.1035 -37.5391 c722.0825 -37.5391 ls387.979 -37.5391 m385.6304 -37.5391 383.7271 -35.6357 383.7271 -33.2871 c383.7271 -30.9385 385.6304 -29.0352 387.979 -29.0352 c399 -29.0352 l401.3486 -29.0352 403.252 -30.9385 403.252 -33.2871 c403.252 -35.6357 401.3486 -37.5391 399 -37.5391 c387.979 -37.5391 ls722.0825 -396.4063 m719.7339 -396.4063 717.8306 -394.5029 717.8306 -392.1543 c717.8306 -389.8057 719.7339 -387.9023 722.0825 -387.9023 c733.1035 -387.9023 l735.4521 -387.9023 737.3555 -389.8057 737.3555 -392.1543 c737.3555 -394.5029 735.4521 -396.4063 733.1035 -396.4063 c722.0825 -396.4063 ls387.979 -396.4063 m385.6304 -396.4063 383.7271 -394.5029 383.7271 -392.1543 c383.7271 -389.8057 385.6304 -387.9023 387.979 -387.9023 c399 -387.9023 l401.3486 -387.9023 403.252 -389.8057 403.252 -392.1543 c403.252 -394.5029 401.3486 -396.4063 399 -396.4063 c387.979 -396.4063 lsu0 Ap706.1719 -324.1221 m706.1719 -335.4619 L694.832 -335.4619 L694.832 -324.1221 L706.1719 -324.1221 LS728.8516 -324.1221 m728.8516 -335.4619 L717.5117 -335.4619 L717.5117 -324.1221 L728.8516 -324.1221 LS672.1523 -335.4619 m672.1523 -324.1221 L683.4922 -324.1221 L683.4922 -335.4619 L672.1523 -335.4619 LSUu706.1719 -89.9805 m706.1719 -101.3203 L694.832 -101.3203 L694.832 -89.9805 L706.1719 -89.9805 LS728.8516 -89.9805 m728.8516 -101.3203 L717.5117 -101.3203 L717.5117 -89.9805 L728.8516 -89.9805 LS672.1523 -101.3203 m672.1523 -89.9805 L683.4922 -89.9805 L683.4922 -101.3203 L672.1523 -101.3203 LSUu286.9229 -324.1221 m286.9229 -335.4619 L275.583 -335.4619 L275.583 -324.1221 L286.9229 -324.1221 LS309.6025 -324.1221 m309.6025 -335.4619 L298.2627 -335.4619 L298.2627 -324.1221 L309.6025 -324.1221 LS252.9033 -335.4619 m252.9033 -324.1221 L264.2432 -324.1221 L264.2432 -335.4619 L252.9033 -335.4619 LSU1 Ap120.9688 -29.0352 m120.9688 -25.1216 124.1416 -21.9487 128.0547 -21.9487 cS128.0547 -403.4922 m124.1416 -403.4922 120.9688 -400.3193 120.9688 -396.4063 cS0 Ap459.0156 -270.3833 m461.3643 -270.3833 463.2676 -268.48 463.2676 -266.1313 C463.2676 -266.1313 L463.2676 -263.7847 461.3643 -261.8794 459.0156 -261.8794 C459.0156 -261.8794 L456.6689 -261.8794 454.7656 -263.7847 454.7656 -266.1313 C454.7656 -266.1313 L454.7656 -268.48 456.6689 -270.3833 459.0156 -270.3833 C459.0156 -270.3833 L459.0156 -270.3833 L459.0156 -270.3833 L459.0156 -270.3833 LS0.233388 w225.707 -338.1553 m228.4478 -338.1553 230.6685 -335.9341 230.6685 -333.1934 C230.6685 -333.1934 L230.6685 -330.4551 228.4478 -328.2314 225.707 -328.2314 C225.707 -328.2314 L222.9683 -328.2314 220.7476 -330.4551 220.7476 -333.1934 C220.7476 -333.1934 L220.7476 -335.9341 222.9683 -338.1553 225.707 -338.1553 C225.707 -338.1553 L225.707 -338.1553 L225.707 -338.1553 L225.707 -338.1553 LS225.707 -97.21 m228.4478 -97.21 230.6685 -94.9888 230.6685 -92.248 C230.6685 -92.248 L230.6685 -89.5098 228.4478 -87.2861 225.707 -87.2861 C225.707 -87.2861 L222.9683 -87.2861 220.7476 -89.5098 220.7476 -92.248 C220.7476 -92.248 L220.7476 -94.9888 222.9683 -97.21 225.707 -97.21 C225.707 -97.21 L225.707 -97.21 L225.707 -97.21 L225.707 -97.21 LS0.2 w581.665 -125.9126 m584.0137 -125.9126 585.917 -124.0083 585.917 -121.6606 C585.917 -121.6606 L585.917 -119.313 584.0137 -117.4087 581.665 -117.4087 C581.665 -117.4087 L579.3174 -117.4087 577.4141 -119.313 577.4141 -121.6606 C577.4141 -121.6606 L577.4141 -124.0083 579.3174 -125.9126 581.665 -125.9126 C581.665 -125.9126 L581.665 -125.9126 L581.665 -125.9126 L581.665 -125.9126 LS445.5039 -120.8032 m447.8525 -120.8032 449.7559 -118.8989 449.7559 -116.5513 C449.7559 -116.5513 L449.7559 -114.2026 447.8525 -112.2993 445.5039 -112.2993 C445.5039 -112.2993 L443.1572 -112.2993 441.252 -114.2026 441.252 -116.5513 C441.252 -116.5513 L441.252 -118.8989 443.1572 -120.8032 445.5039 -120.8032 C445.5039 -120.8032 L445.5039 -120.8032 L445.5039 -120.8032 L445.5039 -120.8032 LS538.395 -270.3833 m540.7417 -270.3833 542.647 -268.48 542.647 -266.1313 C542.647 -266.1313 L542.647 -263.7847 540.7417 -261.8794 538.395 -261.8794 C538.395 -261.8794 L536.0479 -261.8794 534.1445 -263.7847 534.1445 -266.1313 C534.1445 -266.1313 L534.1445 -268.48 536.0479 -270.3833 538.395 -270.3833 C538.395 -270.3833 L538.395 -270.3833 L538.395 -270.3833 L538.395 -270.3833 LSu286.9229 -89.9805 m286.9229 -101.3203 L275.583 -101.3203 L275.583 -89.9805 L286.9229 -89.9805 LS309.6025 -89.9805 m309.6025 -101.3203 L298.2627 -101.3203 L298.2627 -89.9805 L309.6025 -89.9805 LS252.9033 -101.3203 m252.9033 -89.9805 L264.2432 -89.9805 L264.2432 -101.3203 L252.9033 -101.3203 LSU1 Ap204.5068 -55.6807 m142.1445 -55.6807 L142.1445 -44.3423 L204.5068 -44.3423 L204.5068 -55.6807 Ls204.5068 -380.8145 m142.1445 -380.8145 L142.1445 -369.4761 L204.5068 -369.4761 L204.5068 -380.8145 Lsu*u0 Ap0 O0.002411 0.840391 0.928649 0.006073 1 0 0 Xa1 w563.2534 -347.5752 m567.8862 -347.5752 572.1553 -349.2773 575.2744 -352.3672 C578.3569 -355.4214 580.0547 -359.5508 580.0547 -363.9961 C580.0547 -364.0884 L580.0547 -373.3486 572.6348 -380.603 563.1631 -380.603 C558.5298 -380.603 554.2598 -378.9014 551.1406 -375.8115 C548.0576 -372.7573 546.3599 -368.627 546.3599 -364.1807 C546.3599 -364.0884 L546.3599 -354.8286 553.7803 -347.5752 563.2534 -347.5752 CF1 D563.2534 -347.4902 m553.5503 -347.4902 546.2749 -354.9238 546.2749 -364.0884 C546.2749 -364.1807 L546.2749 -373.3472 553.4614 -380.688 563.1631 -380.688 C572.8647 -380.688 580.1396 -373.2544 580.1396 -364.0884 C580.1396 -363.9961 L580.1396 -354.8325 572.9541 -347.4902 563.2534 -347.4902 C563.2534 -347.4902 Lf*UUu*u0 D490.4868 -347.5752 m495.1201 -347.5752 499.3892 -349.2773 502.5083 -352.3672 C505.5908 -355.4209 507.2886 -359.5508 507.2886 -363.9961 C507.2886 -364.0884 L507.2886 -373.3486 499.8691 -380.603 490.3975 -380.603 C485.7637 -380.603 481.4941 -378.9014 478.375 -375.8115 C475.2925 -372.7573 473.5947 -368.627 473.5947 -364.1807 C473.5947 -364.0884 L473.5947 -354.8286 481.0146 -347.5752 490.4868 -347.5752 CF1 D490.4868 -347.4902 m480.7856 -347.4902 473.5098 -354.9238 473.5098 -364.0884 C473.5098 -364.1807 L473.5098 -373.3472 480.6953 -380.688 490.3975 -380.688 C500.0977 -380.688 507.3735 -373.2544 507.3735 -364.0884 C507.3735 -363.9961 L507.3735 -354.8325 500.1885 -347.4902 490.4868 -347.4902 C490.4868 -347.4902 Lf*UU0 D0 R0.002411 0.840391 0.928649 0.006073 1 0 0 XA0.085123 w449.2979 -356.9858 m439.0586 -356.9858 L439.0586 -348.1279 L469.2695 -348.1279 L469.2695 -356.9858 L459.0298 -356.9858 L459.0298 -380.0488 L449.2979 -380.0488 L449.2979 -356.9858 ls522.9917 -348.1279 m513.7095 -348.1279 L513.7095 -380.0488 L522.8081 -380.0488 L534.3013 -380.0488 540.7764 -373.209 540.7764 -363.9961 C540.7764 -363.9058 L540.7764 -354.6948 534.3916 -348.1279 522.9917 -348.1279 CsLB%AI5_EndLayer--%AI5_BeginLayer1 1 1 1 0 0 1 1 255 79 79 0 50 Lb(mark) Ln0 A0 R0.620752 0.083925 0.029786 0.00177 0.266856 0.700936 0.857181 (AutoCAD Color) 0 1 XK1 J 1 j 0.25 w 4 M []0 d0 XR438.3066 -78.6421 m438.3066 -265.6685 LS589.6846 -78.6421 m438.3066 -78.6421 LS589.6846 -261.3813 m589.6846 -78.6421 LS553.1367 -265.6685 m584.4961 -265.6685 LS450.9395 -272.438 m546.3696 -272.438 LS546.3696 -272.438 m553.1367 -265.6685 LS584.4961 -265.6685 m589.6846 -261.3813 LS443.7207 -265.6685 m450.9395 -272.438 LS438.3066 -265.6685 m443.7207 -265.6685 LSLB%AI5_EndLayer--%%PageTrailergsave annotatepage grestore showpage%%TrailerAdobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_pattern_AI5 /terminate get exec
AGM_Gradient /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF